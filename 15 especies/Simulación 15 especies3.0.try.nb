(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1043800,      19017]
NotebookOptionsPosition[   1039559,      18954]
NotebookOutlinePosition[   1039931,      18970]
CellTagsIndexPosition[   1039888,      18967]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"especies", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metabolitos", "=", " ", "22"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7338715324618654`*^9, 3.7338715737098975`*^9}, {
  3.7338720456585093`*^9, 3.7338720527197237`*^9}, {3.733872109242705*^9, 
  3.7338721319275293`*^9}, {3.7338732493972607`*^9, 
  3.733873255574252*^9}},ExpressionUUID->"4ee8a8dd-2493-48f8-9ad3-\
8f23d683688c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "especies"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "metabolitos"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7338715943824043`*^9, 3.733871623519829*^9}, {
  3.7338720650080976`*^9, 3.7338720685169044`*^9}, {3.733872226820446*^9, 
  3.7338722319171343`*^9}, {3.733872269285629*^9, 3.7338722731625566`*^9}, {
  3.733872434947198*^9, 
  3.733872436203573*^9}},ExpressionUUID->"b44e4ae4-0c5a-4f83-acb5-\
7c19ebb648ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "1"}], "}"}], "]"}], ",", "m"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "0.1"}], "}"}], "]"}], ",", "m"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Delta]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "0.1"}], "}"}], "]"}], ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "5", "]"}], ",", "m"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ciC", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "5", "]"}], ",", "m"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ciX", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "5", "]"}], ",", "n"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7329085575842457`*^9, 3.732908589890534*^9}, 
   3.7329094236228113`*^9, {3.73290947048534*^9, 3.732909471898376*^9}, {
   3.732909515342882*^9, 3.732909515793722*^9}, {3.732910217250319*^9, 
   3.7329102285296907`*^9}, {3.733092679123587*^9, 3.7330927401135964`*^9}, {
   3.733871628393606*^9, 3.7338716458758354`*^9}, {3.7338721371324863`*^9, 
   3.7338721654381285`*^9}, 3.7338722133789835`*^9, {3.733872296807066*^9, 
   3.7338723297014847`*^9}},ExpressionUUID->"edf24ae2-0f5d-4803-b3d5-\
321cde355300"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0", ",", "0", ",", "0", 
       ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", "0"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}], ",", 
       RowBox[{"RandomReal", "[", "1", "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.732909290299674*^9, 3.732909408184203*^9}, {
   3.732909531228773*^9, 3.732909531927163*^9}, {3.7330930108057723`*^9, 
   3.7330935105751495`*^9}, {3.733093544277975*^9, 3.7330935889121304`*^9}, {
   3.7330936594754753`*^9, 3.7330936899461875`*^9}, {3.7330939110127697`*^9, 
   3.733093968686582*^9}, {3.733094864827713*^9, 3.7330949600908794`*^9}, {
   3.7330949973232603`*^9, 3.733095085285966*^9}, {3.7330951191889815`*^9, 
   3.733095135554291*^9}, {3.7330951710501738`*^9, 3.7330952840177684`*^9}, {
   3.733095323133727*^9, 3.7330953322222533`*^9}, {3.733095373964856*^9, 
   3.733095656903451*^9}, {3.7330958419468975`*^9, 3.733095953961257*^9}, 
   3.7330959850473504`*^9, {3.7330961881963463`*^9, 
   3.7330961950429163`*^9}},ExpressionUUID->"42ab77dd-cd7f-4942-9f41-\
b83d1daefb70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "//", "MatrixForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.7329105067191677`*^9, 3.732910508205413*^9}, 
   3.733740542997955*^9},ExpressionUUID->"0d725c8f-b141-4e2b-9414-\
ab581a25a86b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W", "//", "MatrixForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.7329105107343903`*^9, 3.732910512261485*^9}, 
   3.7337405465886545`*^9},ExpressionUUID->"ab29d608-92a2-4921-8526-\
71394efeaf2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"concentrationsGen", "[", "N_", "]"}], ":=", "\[IndentingNewLine]", 
  "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", "t_", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", "N"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"X", "[", "t_", "]"}], " ", "=", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"X", "[", "t", "]"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<c\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "[", "t", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", "\t", 
     
     RowBox[{"Return", "[", 
      RowBox[{"X", "[", "t", "]"}], "]"}]}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7329081102823753`*^9, 3.732908112295953*^9}, {
  3.7329084427867317`*^9, 
  3.732908445536725*^9}},ExpressionUUID->"f6821979-f642-49e9-b1c4-\
6851e90edba6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"speciesGen", "[", "N_", "]"}], ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", "t_", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", "N"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"X", "[", "t_", "]"}], " ", "=", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"X", "[", "t", "]"}], ",", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<x\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"i", "[", "t", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", "\t", 
     
     RowBox[{"Return", "[", 
      RowBox[{"X", "[", "t", "]"}], "]"}]}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.732908456098325*^9, 
  3.732908465625742*^9}},ExpressionUUID->"00b7a273-e13c-4313-9011-\
b12e1fb03e82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", 
   RowBox[{"c_", ",", " ", "v_"}], "]"}], " ", ":=", " ", 
  RowBox[{"v", ".", "c"}]}]], "Code",
 CellChangeTimes->{{3.7329075237653027`*^9, 3.7329075687314034`*^9}, {
  3.732907628819189*^9, 3.732907631154089*^9}, {3.732908662157675*^9, 
  3.7329086640621853`*^9}},ExpressionUUID->"f1e57b8a-e905-4b86-9fe8-\
41b1241ab956"],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", "i_", "]"}], ":=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"c", "[", "t", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}], 
   RowBox[{
    RowBox[{"H", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "+", 
    
    RowBox[{
     RowBox[{"c", "[", "t", "]"}], "\[LeftDoubleBracket]", "i", 
     "\[RightDoubleBracket]"}]}]]}]], "Code",
 CellChangeTimes->{{3.732907964935491*^9, 3.73290799716144*^9}, {
  3.732908203215432*^9, 
  3.7329082438308697`*^9}},ExpressionUUID->"776bd80b-074c-4c05-81ab-\
00a251fbc234"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "t_", "]"}], "=", 
   RowBox[{"concentrationsGen", "[", "m", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"speciesGen", "[", "n", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73290809505783*^9, 3.732908126027709*^9}, {
  3.732908470861507*^9, 3.732908486089587*^9}, {3.733092765652742*^9, 
  3.7330927705552406`*^9}, {3.7336751729725113`*^9, 3.73367518134404*^9}, {
  3.7336754881042614`*^9, 3.733675490299748*^9}, {3.734051137521558*^9, 
  3.7340511414173365`*^9}, {3.7395395660615625`*^9, 3.7395396243703165`*^9}, {
  3.739539719167569*^9, 3.7395397205721645`*^9}, {3.739539856176409*^9, 
  3.739539857143812*^9}},ExpressionUUID->"98ec1bfd-ddb4-4ff3-b87c-\
8f96ca962487"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vars", "[", "t_", "]"}], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "[", "t", "]"}], ",", 
      RowBox[{"x", "[", "t", "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7329102799039993`*^9, 3.732910301072405*^9}, 
   3.7330974143541703`*^9, 3.73367518451206*^9, 3.733675484787404*^9, {
   3.7343958233585157`*^9, 
   3.734395830191581*^9}},ExpressionUUID->"f8e67f71-2591-4b25-9f90-\
3b961e3b168c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", " ", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{
       RowBox[{"V", "\[LeftDoubleBracket]", 
        RowBox[{";;", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"c", "[", "t", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7340456986202707`*^9, 3.7340457271533613`*^9}, {
   3.7340460280579176`*^9, 3.73404616577538*^9}, {3.7340461983474455`*^9, 
   3.7340462044787655`*^9}, {3.734046496358262*^9, 3.7340465288095975`*^9}, {
   3.7340465929027557`*^9, 3.734046648483729*^9}, {3.734046715591558*^9, 
   3.7340467252030973`*^9}, {3.7340468224932756`*^9, 
   3.7340468306609573`*^9}, {3.7340469173768616`*^9, 3.7340469205877695`*^9}, 
   3.734048221766736*^9, {3.734048342363397*^9, 3.734048344186677*^9}, {
   3.734048648656233*^9, 3.734048649197199*^9}, 
   3.734048796146352*^9},ExpressionUUID->"6ebe8888-872e-4662-9590-\
454bb8932700"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]\[Mu]", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", "\[Mu]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.734394298138674*^9, 3.7343943541911464`*^9}, {
   3.734394436031773*^9, 3.7343944627430153`*^9}, 
   3.734394825838108*^9},ExpressionUUID->"b45506d2-4128-40f3-bc92-\
7ed642226592"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]\[Delta]", "=", 
   RowBox[{"DiagonalMatrix", "[", "\[Delta]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.734394621427494*^9, 3.7343946346889563`*^9}, 
   3.7343948225249643`*^9},ExpressionUUID->"869ca836-96f2-460b-9525-\
6574843546e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gg", " ", "=", 
   RowBox[{"DiagonalMatrix", "[", "g", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7343949600117445`*^9, 3.7343949813470507`*^9}, 
   3.7343950307535696`*^9},ExpressionUUID->"e6a342d3-5f9f-4369-9080-\
b9d49d32ff84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ttdiag", "=", 
   RowBox[{"DiagonalMatrix", "[", "tt", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401656906305237`*^9, 3.7401657290678463`*^9}, {
   3.740166377612481*^9, 3.740166380457559*^9}, {3.740166495226216*^9, 
   3.740166496280312*^9}, 3.7401695876159554`*^9, {3.74216274450985*^9, 
   3.742162752949033*^9}},ExpressionUUID->"9e89a60b-ce7d-4e40-a1d2-\
35ff8400f786"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tt", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"V", "-", "W"}], ")"}], ".", 
    RowBox[{"x", "[", "t", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7402803938608465`*^9, 3.740280420334552*^9}, {
  3.742162756412051*^9, 
  3.7421627651830235`*^9}},ExpressionUUID->"704d1130-b85d-4e71-bc5f-\
cbe7f3a9c6a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "/", 
      RowBox[{"tt", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.740169585455922*^9, {3.740180315550209*^9, 
   3.740180321414842*^9}},ExpressionUUID->"e843912e-1e7f-40b6-a7d5-\
8236374d2267"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rrdiag", "=", 
   RowBox[{"DiagonalMatrix", "[", "rr", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740180223483103*^9, 3.740180232263077*^9}, 
   3.740180274622752*^9, {3.740180325531492*^9, 3.7401803437250395`*^9}, {
   3.740180386311556*^9, 
   3.7401804077102647`*^9}},ExpressionUUID->"4806b4a9-b214-41e6-91e3-\
adc056c5a5ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]c", "=", " ", 
   RowBox[{"\[Mu]\[Mu]", ".", 
    RowBox[{"c", "[", "t", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7343947431411905`*^9, 3.734394780655013*^9}, 
   3.7343948117389326`*^9, {3.734396598343301*^9, 
   3.734396629081006*^9}},ExpressionUUID->"e2f81070-c37b-47cb-9531-\
3346b0ae373f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g\[Delta]", "=", 
   RowBox[{"gg", "-", "\[Delta]\[Delta]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7343950402818847`*^9, 3.73439508148934*^9}, 
   3.734395354845477*^9},ExpressionUUID->"74f9d93d-b218-4648-ba65-\
5b5c265893cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Wxr", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"W", ".", 
      RowBox[{"x", "[", "t", "]"}]}], ")"}], ".", "rrdiag"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.734393960489978*^9, 3.7343939781070127`*^9}, 
   3.7343941422295837`*^9, {3.734396180531498*^9, 3.7343961895851774`*^9}, {
   3.7395427582022953`*^9, 3.7395427593896356`*^9}, {3.7395440913563337`*^9, 
   3.7395440919330034`*^9}, {3.7401696018293085`*^9, 
   3.7401696046078167`*^9}, {3.7401752097312274`*^9, 
   3.7401752391158447`*^9}, {3.7401802156655917`*^9, 
   3.7401802189737215`*^9}, {3.7421628305879526`*^9, 
   3.7421628439743247`*^9}},ExpressionUUID->"b6bfaad8-65d4-4944-b1dd-\
5c9209525af4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vxr", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"V", ".", 
      RowBox[{"x", "[", "t", "]"}]}], ")"}], ".", "rrdiag"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7343940490356255`*^9, 3.7343940768377495`*^9}, 
   3.7343941470380583`*^9, {3.7395427654281254`*^9, 3.7395427660260324`*^9}, {
   3.739544097735572*^9, 3.7395440983059063`*^9}, {3.7401696118178062`*^9, 
   3.740169614742015*^9}, {3.7401819662947087`*^9, 
   3.7401819680526996`*^9}},ExpressionUUID->"2bca0ed2-f8a7-4c42-9bdb-\
bdb3a08e451e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xg\[Delta]", "=", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ".", "g\[Delta]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.734396440579754*^9, 
  3.7343964967879796`*^9}},ExpressionUUID->"b25264ac-b707-4d01-ae94-\
eb2630a2cc06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqC", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"c", "'"}], "[", "t", "]"}], "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"S", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       " ", "+", 
       RowBox[{"Wxr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{"Vxr", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       "-", 
       RowBox[{"(", 
        RowBox[{
        "\[Mu]c", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"c", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqX", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}], "\[Equal]", 
      RowBox[{
      "xg\[Delta]", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cisC", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"c", "[", "0", "]"}], "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}], "\[Equal]", 
      RowBox[{"ciC", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"c", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cisX", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}], "\[Equal]", 
      RowBox[{"ciX", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.732908702698044*^9, 3.73290882683679*^9}, {
   3.7329097543040257`*^9, 3.732909840489348*^9}, {3.7329099690399103`*^9, 
   3.732909995016603*^9}, {3.7329101043117313`*^9, 3.732910144117136*^9}, {
   3.732910191508003*^9, 3.732910204208638*^9}, {3.7329102385583763`*^9, 
   3.732910246096085*^9}, {3.732910394198842*^9, 3.7329104161081133`*^9}, {
   3.732923877372145*^9, 3.732923909233003*^9}, {3.7329239836023903`*^9, 
   3.7329240377778196`*^9}, 3.7329240852629805`*^9, {3.732924239287251*^9, 
   3.732924244729435*^9}, {3.7329247713255568`*^9, 3.732924829682646*^9}, 
   3.733675303198305*^9, 3.7336754775185347`*^9, 3.7336775674699917`*^9, 
   3.733677678385705*^9, 3.734051013942644*^9, 3.734051057543761*^9, {
   3.734394020829837*^9, 3.7343940243306055`*^9}, {3.734394099673091*^9, 
   3.734394102314249*^9}, {3.7343948512451177`*^9, 3.7343948943389654`*^9}, {
   3.734395136471739*^9, 3.734395171003332*^9}, {3.7343953951174192`*^9, 
   3.734395417468622*^9}, {3.734395626138646*^9, 3.734395633796523*^9}, 
   3.7343958472110806`*^9, 3.7343959227523394`*^9, 3.734396071504259*^9, 
   3.734396116714825*^9, {3.734396388166068*^9, 3.7343964144792995`*^9}, {
   3.7343965106406183`*^9, 3.734396521331175*^9}, 3.7343966426950893`*^9, 
   3.739538291152125*^9, 3.7395385939034424`*^9, {3.739539197030163*^9, 
   3.7395391989707565`*^9}, 3.739540802902172*^9, 3.7395441106446905`*^9, {
   3.740174743221253*^9, 3.740174747003167*^9}, {3.740174896893629*^9, 
   3.740174904733078*^9}, 3.7401802025791087`*^9, 3.740180296048416*^9, 
   3.740182248372946*^9},ExpressionUUID->"98295595-0fdf-4840-8456-\
6514203c5549"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sistema", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"eqC", ",", "eqX", ",", "cisX", ",", "cisC"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7329100049975557`*^9, 3.732910013881844*^9}, {
   3.732910077525319*^9, 3.732910081242882*^9}, {3.732910148014955*^9, 
   3.732910148530665*^9}, {3.732910250191703*^9, 3.732910252532503*^9}, 
   3.7330973558880444`*^9},ExpressionUUID->"2fa0d13e-6bd9-4efe-99c4-\
44c1b9e48f10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sistema", ",", 
      RowBox[{"vars", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "2000"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7329101677208967`*^9, 3.732910184887683*^9}, {
   3.73291026389985*^9, 3.732910266106475*^9}, {3.732910588807543*^9, 
   3.7329105910077353`*^9}, {3.7329239530065985`*^9, 
   3.7329239759002028`*^9}, {3.7336782193932457`*^9, 3.7336782207121534`*^9}, 
   3.7336919343804708`*^9, {3.7336926390972047`*^9, 3.733692660405853*^9}, 
   3.7336926944124823`*^9, {3.7337437757678585`*^9, 3.733743789964219*^9}, {
   3.7337438434135995`*^9, 3.7337438445360665`*^9}, {3.7337439214190006`*^9, 
   3.733743922449011*^9}, {3.733744183864462*^9, 3.7337441848550663`*^9}, {
   3.7343952126695576`*^9, 3.734395212857112*^9}, {3.7343952532572327`*^9, 
   3.7343952536010427`*^9}, {3.7343967195187187`*^9, 
   3.7343967467245483`*^9}, {3.7401738837747483`*^9, 3.740173887159069*^9}, {
   3.7401824766917763`*^9, 3.7401824776392326`*^9}, 3.742161811781022*^9},
 NumberMarks->False,ExpressionUUID->"feb70a88-98f1-404b-94a3-ea86f0490d00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"varc", "[", "t_", "]"}], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"c", "[", "t", "]"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"varx", "[", "t_", "]"}], " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"x", "[", "t", "]"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7336759536373377`*^9, 3.733675991102065*^9}, {
  3.733676049476894*^9, 3.7336760689635887`*^9}, {3.733692720397135*^9, 
  3.7336927211575093`*^9}},ExpressionUUID->"2f82c0d6-32a7-476e-9cfd-\
e74f900410c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"vars", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"vars", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7329103039607887`*^9, 3.732910367029129*^9}, {
   3.732910445846299*^9, 3.7329104859569063`*^9}, {3.7330963048270674`*^9, 
   3.7330963722374897`*^9}, {3.7330964066735096`*^9, 3.733096413742934*^9}, {
   3.7330964884432993`*^9, 3.7330965918506255`*^9}, 3.733096694319894*^9, {
   3.7336916326061487`*^9, 3.733691633082182*^9}, {3.7336916812197013`*^9, 
   3.7336916814037137`*^9}, {3.7336925416956825`*^9, 3.733692548656828*^9}, {
   3.7337438364210515`*^9, 3.733743837935796*^9}, {3.7337439059109235`*^9, 
   3.7337439167605867`*^9}, {3.733743978950637*^9, 3.7337439793340335`*^9}, {
   3.733744126407299*^9, 3.733744135660946*^9}, {3.733744245804265*^9, 
   3.7337442468223352`*^9}, {3.7337443058221164`*^9, 3.7337443065232153`*^9}, 
   3.7340509522673206`*^9, {3.7343938724257507`*^9, 3.734393935434478*^9}, {
   3.73439522068759*^9, 3.734395247256423*^9}, {3.734396669771202*^9, 
   3.7343968643564873`*^9}, {3.734835041298499*^9, 3.7348350481890817`*^9}, {
   3.734962152729086*^9, 3.7349621559753933`*^9}, {3.7349622017859287`*^9, 
   3.734962244554347*^9}, {3.7358589102732077`*^9, 3.735858911911358*^9}, {
   3.735858944098557*^9, 3.735858955376918*^9}, {3.7395454099447255`*^9, 
   3.739545417282629*^9}, 3.7401698936877623`*^9, {3.7401825097427883`*^9, 
   3.740182585638605*^9}, {3.74028044077829*^9, 3.7402805118689337`*^9}, {
   3.740280705616156*^9, 3.7402807077801957`*^9}, {3.7421617727212896`*^9, 
   3.742161784813369*^9}},ExpressionUUID->"e4e83226-d371-4096-b607-\
320ff3ed75e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wEVtFcK
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/Q8yvVn1
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzXk41HkcwPFxrNFsNqwO1mZIFk8ePGslpc+HjRATohxNMY75TpFcHYhJ
h0JpIrWuHCml+M1URElkKFaY7FbGJilNux2uaZKwu3+8n9efb0NOtE+4Mo1G
8/yv/zXKnikvXtq7NiZ7WtyfzcA6dTODKFID/aFstiCdgc37qi+YkiaoqcrN
cE9lYJtVDFeNdEPyd+7lrbsY+CBL4irnDgIr173uiScDH9ofqn/H/QjZ6a61
++YzsEMgjZFx56BUEJtWkjkP3RvprBHuAoQumShIoI5dGrbzVNlMtBvcsIiZ
o4ZO2c73Lm00xZBfmwTGA6oYbvlFw1rDCqcWYZopSwU9zcLHFq23wVCz1q2y
JiUU9R1IeGhnh44pKXQHHg1Xa5vXqKauQclDzSMzy2eBO326qMIfcXxFiIHT
nWmIbnvzc42nE0qfragVVk5BRqDa8pnIdei8jm1sfkYBoe1JEdbEBZ1Nnrc9
6ZRDM13Xe2eAKxY8yooys5gEay1+3tt4dwz+KJSonByH4AmHFaxID7y2Jq6q
03QMSovF+ooTLNyzQMvnVvpHuH7SXirx8cLRGM2JQJX3EN/g4FXk4Y1un/Q8
pE//hqaOivHjQT440iDNN66WAW/9qkae/yaMzziWIO0ZgcJK65s7d/hi7lWe
usfkKxBMNB7cvdcP88MtipxchmHkSsIeErsZ3T7UJa3sG4JWl9Pn0tK24CGR
/5gH5wUobex/mc33x1ZlzwPars+B5lirVLI/ADflbF44qTYAxxYrPCXpgThH
vXMLED+D3YGhLYpDQVioYykM6HsCQwdtwuDMVry71Dj55fAfoJPzW//xUjaa
GKYmPVrWBxc1zfe3F2xD7+FCun2ZBJpjDZx/qtqOj8Wao/nMXihmlug7+Aaj
X33Bj2WXu6Ex+QuN9ATjIH+0cnhjFxhuoH9dtiUE17K3erHlHXCj2yzzWV8I
tp2NXiL78ACy2matmGwOCqXcVLGsDXLi3u4IHuCgnFaUOGsuhuSFSxcYBYQi
m7WW/1fefbhs9k1H/ItQDJj2SEpTbgG1SSXd5m1h2JOYoXf24j24ZCVMKX4T
hsVV3ffX590FM84V1kxUOAr8Rkwslt0BqVu9yO+fcCxR+dbmBL0BJOWJFhAX
gYYzOp9V39XB5+vea4zGI3CiQFfe80MtzN2KvXl0FxfjhsrS3u65ARusXJyT
5VzsZPLzc3tF0M625O2MI3i4SdTJ4ApBO5TcLkogGLacn6UIFsI2UqrRs5cg
08IiciRQCJ9ivxfZJBN8PuNwpIMlBONjii8zhwl+rRiad9VWCHxRU9apPIKf
9XkNj9WEYE/3om7WE8zqXl1GVVJwdP5xZdltgrbl5/4cLKOgV6vFV+8uQbv7
FdpaRRQQfZuplBaCDmL6+f0CCs5aL3Fy7SQYN7BDzkmkYDLoxeP+AYLbqWtf
z3hQgCG6JhqDBCWWB/xfu1CQGeGzD4YIVkU/pWwdKTCKadW/8Pq/vwbPd/AX
CryPVoZHfSBo2hW7ydWAgsLMobrzowT7A5n8S7oUyE7pMSTjBOWc9nJ1HQr4
BVnVtgqCMU12XT3qFPxeIqbxpgj6pRX3rlShYPHFWZ+CaYLcVbxcx+ka4FSt
rOiaIdgszY1cPFoD1dRuxdwcwfdpxHzsVQ38C6Q3SW4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk41HkcAGAUsiWVUsoiqWgLI5Vcn08mx1bOtK4I0/h9Z4ScxY5cJZOp
6diVckSOpIMdJHI0ChHLzNTTMW0120X1OMukwrZ/vM+7PCTSk6mkoKDg8sP/
G/Aniwt0RXb82klDutME1M0y1gsnlWDE65LUWU2A8OD1EiPSAuyFpo3mJhPQ
bhZFqZBeqHnEXGe9aALu8cTOn6kX8MuHMOvsV1+g0yq9/iM1BCv4b3yjU79A
1ylpVD81DXOn7vGvCeWwrUnV9S2lgZO76Ma8nePQo75RbWaAPkZsUPIoSh8D
e77D7UtuRmhd7Oh9ZMMIME2/qtPUzdAkfEdeWPgguBgzR7ScLJDeH9coKHgP
ggdJcZ2Wlnh8y5hkT/I7sF6wpnJmsg1G9Xu0FGW8Burb6fxSH0S/Es7iiAkZ
RLa/W1/pYo9MOv/5gjsv4JifysrJfVvxbvee3Lg2KTA6fg+lEUdUVtR635/8
GISq2h5hvs4YWWXRWlXxEGjzU7IHYrdh+hDXxn9cDEFjtmtd9+1Ap4GyzrTm
PigqaNORH3fFsvXvkw/Te6D6hJVU7OmOVZtma+Vd7ITYBlv3/B0emJaRYhta
3g4tXaWjXH9P7G0oS4sS3QGW0+Ymls9OVLtQLdudJIS8clptGNsLb/xs+CSd
1wynxppS9x/YhY2jc85KmhvgbUVcPIn+DaV6gTmLCuvgruPpnLQ0bzzxIXCm
0qUaUHR7+i8/xQdTe1k9upsEoLDlhmJhgi8ukVjPU1pWBZmL5S7io37IyvVw
X2V6Ffb7MVrl6f5YoNk61SArB1mqxV74czfaVLjjcGMpLDxz7im3KACPKpto
PFQrhrJ5axI6cgMxMCmR+ltcCMJoPYfVV/agyG11N7UvHwr0C3VsvYJQc/kV
n5HP56CJ81WB9AWhuUmJnvN4Nizfrvp9hXcw5h+9rLhV+w+o6TXOevIgGPXN
aY9m3D4FvPYpM/2AELQsNhCVqvDhTMwAO+hZCK52OF8h8c8CziJdDQNfBkYW
9vVbmmbCZWPlrtiXDFy5lpGqanQEVD4pagsD9+IDFyWZ39U0uGT216GCd3sx
6QjHLtotBYxDKlwnw5moWtVRsvYkB6S/1gt2fWDiMXKGNcsmAcTFiesgJhTV
ZteIXmvEw5dqDxuD0VCMcByULo2Pgemb0bUZERQK+040lm2Igu1mjg6czxTK
jB43SHQjoCPAlBUWQ3Bu47MEeg4bFjDIrfw4gknSWu1kLhsCSZF63wGCTJbm
x9ZENoxHawosOARLbl7TYgSwwTBT/nXyMEE2J09VeQUbUgQtvJPZBP/xckm8
X8kCK1X3qtp6gmG8SAG9l0DGHK5S/y2C3L4ZmklCAqL5rV5Lmwn6d/lqN1cT
IDoWE4daCZ43aFPxziFwlrbE3vk+wXa7keFXwQQ++b+UPH1GMHYogBk6TgEG
a69Sf0HQLzHYfMkABVmhngdBRtC7U4MhklJgEHVXp+QNwWXyt899hRR4ZJQz
wwcJzgp71N3KoyAvS1Z3YZigYCiTXplMQf/JpT+JRwnmtjz5fjGagpRc3vWN
coKSw5JVhT4UdBe2KbAmCA7mbuZf3k7B4rIpz9xvBOPt640b7CgIubKptGeS
oNzfflREo+B61X759DRBMXf09bAhBf8B5lpCYg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Pyk8W18=
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
S3eqO15fHv4Hir51Tg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
B+HPYUY=
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8Tj8D+8If4w=
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jt6jKv9FAu4Xe8ytrrLRdV8M32K7BPwPy59FwA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk0FHgcAHAk4qVy5GhnE2Wj1jbKto7h+005y4SUQTSMMT+GaESULLHC
2KbY0BPxkKJFjkre5MiRVBi92vDC1rpGiTCZyO7+8XkfPf8wN7acjIyM83/+
X1+wXJS/uddaW7e4sWfHFNxfY6QbSiohSxzFndGZguboimJD0ghLoTm7KUpT
0E49xVEg3RAQ9YdUMCaGJ+kih3nOEFQ29D6ZLhZDp0Vi/RRnGsxLdhvw9cTw
9MrAqXHOCniZTz5X1J8EJ6EifZSzHr/bE1w2YD0Oz1X2Ksn7bEFK6OjOh7nv
wUZg21R62BBDNYYHX9eOAHuXVMVEhYrnV4TTXklvwdmIPaNpb4pHHc43fZC8
geqX5yM7zcxwIVHdxe3YK7BU21Ep/ysNebU7kzYsioDzNSOvhIEoJ2kw6DPq
gbD2sT2VzjZY9/H90MVXXZDmpWCwHHIAP9X7tW640wGsjnOBJsQOa/NihlcY
rdCsqOPK9XTAtkeGu1+kNYOJanzWxGknXJWY5mvxVgjMz1Y/0kMO4fJG75aR
mnoozG+jSH6noycIHZ1e10HNJYsBkZsLtkSxNdl51XD6oZVL3iFXlNO/pnJW
qQoan5bMpnq7YXWuRqmVYzkE2ZsLgxhHsMb2ALc/qhSu3zKp4wa74/Z74k1t
U0Vw5bMwIfzMURzX/pZp96UARssiowjvGGrFTPysZZYHrXYZORcueODB7Ah7
udc5IHu4/29BPAPDlWX04hhXQWbfPdmCGE+c3Kfc84KdASlaEmfRRS+sZsrb
zLsIINyL1SJJ9EbDSzn962bSYCTBNACuHseNrdFo9S4ZNDKv9acW+qB11lxF
SHwi3NywI6Yj1xfVqDFFE13x0MzTtd1efgIv9T04opMRC/lbCihW7ky8YVz6
04IgGoSxUhnSw8TH+fZJY8aRoHdQcWmrhx92ph1X56/hQW23Ef/NSz/ki89Z
NiuHQXr7N+oWH388sU5PUewXDJkRE8HMQX9kw6ohp7JAiN24eb2+JwvbH98b
uX6RBbeNVj89PczCmwn73yzlMUFhTlan2TcAazFG+berx6GUejcufywA+S9F
lY/tGGDkX0ZfDmVjoY9H9sc/3WHAsb76qJiNfznopp944QqiorPGEBGI+Qsp
i6X2dPhS40rTnw3Es+xDTR4KTrDygFeXfJKDWsvRc8ZhdnCQamcbO89BVU25
tifa+6HDZ1cQN4LgEOXdbcFJBDUWaciLJKi2+L1jOgvBlxSq9Jwh+CzO3PEy
A2GBp15tGktQhytlVNggbEuRSJeTCBbJf6XaaCHEVzemX84iWEX335maCGCh
6FJVV0+w275XYGBmDclrU+XGGwg6aJ5Meb/VGnpVW9w3PSK4tkNN/e56ayAU
08W4FoK+WvsbeGNWkG2ibePQRTCTO8nMzraCOe/hvv5BgmtKyum+Uhqgn84P
KkMEVyupOsyO0oAf6BYNIwRjwxrsMvtooH+qlVL8D8EmfgV16Q4NXJNvsUM/
ElSXPmgiTBpc54/cv/GJ4HzQzAeWMw3GL29SFs0SZISo9HMtaBCfm16xV0Kw
Nbyxq1CDBs8K2mSCFgn2aQobu2VpoHXzm1vuV4LbroUeVp62BP/yX0qeLxN8
W7uH5zpoCRVV4ZKVFYJnmkd1Szot4V+9wDrz
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX081HccAPBjOtuEKF15mbDorjFuFKnb55NFohMnipJznPtKUmKpZNTP
5akRZZWHyDN5fohKYR6SSi5tr/TkaR5Wiy66PG/74/166woCeUJ5Go3G/c//
6yXMZ2dod/9om9NYPt9Nx5tfstYEkDJgUYNjz9rp2BRamsMk98B2iyy/soGO
bSZHRXTSBW6jw0UnCul4P15iOyV6A9nhXcmcSDp2WJ6tfycah6HDUtNUNh0f
XHhxdFS0CDwdpX+uXVqCdg2KDsMiVawcjFXzOaiAj5Q3fqXgoYO3vtlqoL5K
Hq0SrBvzdzHxCz1GkcN6GgqNZ5TZyiZYUpjcUyedAy5L+GHldjM0NxiyTyiZ
hsqe0yEdFhZo/rB266OpT7BZfX2Zwi9b0P/xhH656ySIZpPSc/ci1p+TDBIV
KQS2jZiWca3Q8++l1gXMCYh1p+vPH9qG3yUlLvblvQPv9lO+bGKD6wxnT2qn
jkGT4monfzdbrKlWumMxPgxstYiUsWA7vLbctCXPbQj4HzmGDod2om6kwK7J
dACyMlq1ZOcdcFzFYkFJtw+qfrV8IeE5IvstTdqc+xKCb3Ec03c6oaErk2ua
+xzuPciVxuzjITO8Ktrn7h/gt31Tg99eZ5R2eqhpuvRAWgG7xv/gbvQef8/r
k5PAhY8NkUeOu+DAmNFPZ2RdMFwU8jMJcsWPBvrt6lcfQotN0uUzZ/bg9yFP
ZjjuHSC3q3cgIWIv8vT8zLXz24C2tVYu84QbXtWrWKm6owWiGTKu5Jw7dle0
8OYWmuCIu3ez7Ow+dP1hXUo/oxH6I8184NJ+5P8yFPDq7B1YkXylNybLA4Wh
zd3hTvWQt2z9ifbUAyhR0X/GKKyFpqA11uuKPXHCuTe1llENGTqZWpzdfPQ8
rZ8eMlUBDWEzNPKEjysE1QqOK8tB115x7ts9Xni7xGLE//wNqO5ixT3v8UIV
ppqgIrYQ4tsWTHQ8BJjO9puoup4HycfGDvJfCvBySPSdNIscCNPQVtVz80ZG
XvHNMs3rUMha8iC4zxsbDaT2XSqZQJ+UW910wAdVdYONX9emQb5JRXjGiA8m
Xx81VAu8AixBkcN8gBC51uzc6eQUeLGjvtLlrRBT9D03GJtdBEn2SSM45ouf
Ip+dY45dgM9VTlv0pL7YwdCsEsklwmJdUI34sAiNDRMltsXxYG9iYx02JcJT
SiNznYEx0O5h7Od/jOAhz5Y/5RvFoO5NbqeHEFz7+er90moxHCBZyk+OE5x3
NPXgF4rhU9DySrMwggU+db49SWJYGy2bmacIVi+cLl0UiiGi8l58YgrBZGeb
G3xlMVgqOpbX1BOkabtu3sSPAvHSGPnR2wRj2xb3XHSJgm615t2adwnORm9r
mrSLAqJlNh3eTNAo0jmwdUMU/MZeZWXbSbDIJvhDrlIUTO7re9r7kqC5D4vr
VUcBeq02UH5D0FUja0G1lII4X14o9BPUOE49/T2bAr2jLVo5fxFcFmT1yjKB
AidxgTDgPcFObjTT15eCtLj+m9cmCCbG2ZVw9lMwmqj5tURKcEdrH2ryKIhI
jS/dKCPoxOPEDnAoeJjZSvObJhha98rysSkFjLwFXuoswQSkT9xlUSAoNs99
NE/wlKdRfvUaCkrLj8gWFwm+3jDoUaZBwb91EjzS
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LvH/u7m5NY/bryyaPvUR/ge5aSM6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzmk8FHgYwPEZKWJUSuvIRqRMSxGldT1PVpIrV4RGzDTmL2dilRQ6JGwq
RUtmqRwhRGrLSmyJjpkxqS2Uo1xLQjTImG1f/D7ft79VzDBXthSFQnH83v9q
pYmvcVe2WL6iWZ/2uk3Du7J0jRBSDunytzItymhYf6jsui6pA5+TogmtIho2
GhzgLCB8sCyavDiWTcOmVKHtJKcThv+dYXJP0LDZ9MS9Yc5ncNsUO73JjYZP
z7cfGOBIIMyPusbnizza1co49XEWoz71nXeoiTy+UNi8UJqhidXJMZ8eVCxE
q7RtDwt36uLdrpzah56yyN4wo2CoYICGidpUNWUZdKSzx37YboweG9OL+17M
x8rWo1HNW7ZgeMazDtMSaTRbuq5cOs4cj380Fe5ImIecbxdy8ncjWodJ7FaE
SGFYY79RuaMV6n60NbE5TMVk7wU64mBrnLcw0l8ljoKsJ0cCDIkNuhpnyfpa
S6BeRtUlyMsWS0pbLt68IQZDxfiMwUg7NFO3u9Y1bxb8vljoOQU7YIolj0Sl
zUAe97G66DcnnLCJyLyoOA1VZ03bha7OuD5gQutsuQgi71s45zi44Er92KtS
0V+h7mn++BkfV/zsecly0+ZJCNz+c23gbjfs5HsuGVebgCtFhtVB+93R6E2o
f/HUOJz/UpsQHr0L3yuIQ7KGxqCvOOpXEuGBcmF/D9HmRuGRzYXLx497YkKT
w+q9cqNA3dnWkxa/G+k3LrxjBYwAZesdau5hLwy3Kxlhvh6GJGWRo/C0N7at
WB5UZDYE4d6sBtEJH+xkXE2ltgxCd4LxPri0BxuVa4WmjAFQSv+97UweA39R
mUzOlO6HgiXrDj/J9sU3xcw8t9ZeqI/Q2La2ZC/qfLpTqHLlI3A1c9Ut3P1Q
trM3hp30AWpjZyhE4Idj9zP8fkzqgVX2MrPanv74PCHHuyO+G27z6SlvW/1R
tunIT6GXuyC1cc5Ak8HEbv/MQg33Tkg/OLjfr4OJ/VmKNdrl7yB2+crFWl4s
nAoy1Xm/tgNu0Oc/jexiIbNH0cQoow0WTFBV6333YbnVB+tko7dQaHDrGLd/
H+bpc3Plmv4BOrPYSRzCRklzqbtq9Gto33GvctcQG+mOebe4jq9AeC1GHw4G
oJdH/utg9VaYqnIx1xoPwLfyu+JGFr0EyZ8R1YmhHNRp1V0bpiQEewObbbGT
HNQzv9m8flkLPGFsCAw6SLDgvtIneQMBLGWRmpwogndY/XMGegLwJXkKgmiC
3soN3zx0BfA1YlmlcSxBQXJldb6mAFYniWbEJwkeVY1c7aQogPjKutRzGQQn
V5jFXOrlg6mMc0X1PYL2Zs4VPcF8SKSdkRqoIUhzFtYFsPnQotjgrvaA4KGQ
rMxhBh+IuvH0sQaCKVt3csVOfMg0VLGyffb9pzl11tiQDxM+XS/bOggyN7K4
U5M8QH/VNQqdBG3/GpVcHuFBSoDrIegmSHFYpG3WzwOtA4/Ur/cS1J21Lz35
hgcuiUXskBGC/mrL6vRqeHAlpfvuH6ME+Y7MVe1VPBg4pyYnHCfIPdW3NaWU
B/HZqWWbRQSrErpqRnN48Dz3MSVwmmDOqTilggweKBfMuWZ/I2iuUEBnpPGA
WWKS/0JMEPYMzixP4kFZRbhIIiEY/LDrtCCeB/8BGsZEYw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX04FHYcAPAr5qWHQsmUlJe2pDhjKqnvd8pbuteRt+g47n5IiIa8dCQx
J4clLxEiSSFSVGYsLqodl7KhJ9UStbJULuzctj8+z8coMIIdvJhCodD+8//G
OfLzZYYDO2nayltiW2VwQ81sbThpgCWVbhZdl2TQGVdftYF0wMZJmrZuqQx6
qFF8FSIBi3rbDGmKDO4KpS6f+E+hV7jyZp2bDHrtjrf9xZ+CdOpPdg/HZqAv
dyRqgq+AM7WM4iGtGdjTrkof5y/Dz5KqqO70j/BA01Zd2W8dlqrbi6yF78Eh
x/GXGsYG3DWV2C5hvoNgyzlNK00qfjhtus9012ugmQW/X+lsg5HJhcf64seh
aTDpSO/WrbhcWLStMuIFbNfZ2KB8zB7FraKkxuIx4M/nlVZ7IYaePvX5XPQo
RPS8sm6gOeAF7+uchIrf4UcflfXyg7vRwofrelXrEXDFCTwr4oTFGjOvv7WR
QqeqPivM2wU3zxvplmRLwEpbUDAZswcPpUtWP1G6B5wPOzbRD+5FWYJgueYB
MVSUdRvIsuko17hiEjf7KzSfshuRspl4sMU9b8iwE2Ju7mCW7mWhrkvH/caa
dujoq57O9GVj9tGFwfADbRDivK09xOt7pCYWWaZNtcDZi1YtYaHumNWanKl/
uwlyP7SnRMZ6oN5qpRQ1jUYYv3TkB3J4H9YuGYoc7amDO055hampnrg0iHp/
oqMGFjGGn+cIvPBRi5pFW1oVUL67vqg83hvfSV+uMRJXQIaejCY96YN5bTER
RhFlEOnD7ZId98WTcX/uSmMXw7MUmyA4vR9Dch/2ViUVwIr8ouHMCj/UC7ic
2OSYDxe0NsaLS/zROMfEc6BBBJ2H1zp+XXcA5z5ppigLhVC2rtxghzsHpc6V
cu7lDGhPnKOQfg7yYnbeVuaeACM31X9MPAOwrW4yaB8zFa5JzLL+GAzA0JV7
VeDqMRD2LFDX+QXiMmVOhLleAuRHT4ZyRgPxwZA4SocXC4m6hsuMvbk4yHOS
Ve+OgVqzL/pixrhYUVSXvMorClQ+LtLv9A/CcU7nptiFcKihXk0uexWE+hzz
Gp1zIWAWeIkuDw9GUBXlzU8Hw4hrW5PHm2CU/KbaPKEIBOn5o5shmofMmjLf
IODA52aWvfE0D+/mb39rumI/KFoPt6Qf4iONurhW3cML3KhOjomf+GhQqcWs
HHQHsZ9lSFg0wWu5zZ6TymzQ4ZJbpUcIMlHR4TDLAn9SodkfSzB7q3rj+bcs
mDm8vMkmkSAl9cSKxMcsMM2QzcnTCOo88QtLv8gCQVOHUFRAkPdI8I2cxgI7
VWZjSxvB8Cq6LbuMCekamYsnbhHsdl4an5/PhAHtLvdVPxP0uNd/ZSSDCcTA
Zja5i+CU/+yIIJoJZ6y+dHC5RxDMdQfWuDLho+/Yw+FRgjEvWsrt3zAAA/S/
0nxKMCl+jF30mAFZPHYcPCOoZDnhp9TFAOOoOwZVLwma9N/xVRQygJV+MTj8
HcH1A+ZKBc4MOJv17Ma5vwlucG3N2G/NgAnRqiXSaYKrRdlG1LUMEJQI621l
BBsDXUIXZuhwv7ybEjJL0Hr4rtrsczroXVhgl8wTVMyKz1AkdAis21L9QE7Q
UNCxVPcWHeobI2UKBcEFUWGwbQ0d/gVaYzqE
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QwMD+h92xB3N
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
R0T/A8UkRow=
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wE/4GPA
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzHk41HkcwPGhUDlTS2QLu1o6Z56Eij6fnTaNZHKlccY45isK44hI85tp
lUYJlY3GamvkCqGwhUhIqUnap2QXrRxtlCsh2frj/bz+extwQxz95Wk0mt3X
vmmYPHsla8XTbW9rrXghfBWsWGCy8iAphgrnqMRhPxWsiy66akxqQTU4c2nE
PhVspIfxFMkT+N6cck21VMHmpDbWBK8LxNt6WcuVVPDBFlHVO957yOuap+ch
UcaWlFdhA7w5sBkYaD3+eBHuqlZi9/HUsWU/t1rGXIitqmYL53vqI20ianPE
JkVkJu+4e22PMaZOzshcbsxD/w3TqgxVOjKrjjTfFcihnYn/iNZOU0wJ1HJv
a/0Cpe1HIx9YWCB91PJRlcsMbNVcXTz/mCUqxrjnFyh8At5MqkTKQRTXbdL0
MZ6AkMb+jcV2TORkKPSRh6Nwyk3RaDb4F2RVsJx+PfEBfJtiAxjEGkOZC8fa
HYegTknHIciVheyg4Wiu5ltgLBZcGIzYhdfD/p7AsT7wHrNayw7ejUaGeS76
3r1wOeu+3uRpNjLO3OnrH+iBsjNbXrU52mOejkxrXXIXRPxpZS/Z7YCt72aX
bVfuhNoW6WiiuyPWSMs+mhS+gMCdm6sDOU54fVDNO7z3OVzKZdwMOuCMku3N
b+K3PoOUsWoq9PBeVGt0njv6XgZ9+ZFRhO+Ct+ir0juXPoYG69TfhMJ9CLEx
H1nhLSC3p+N1soCDU9qc9JGIJqD9fEsuO8YVcy2NUwZeNsBJ7Um7thNumKi8
oOmhaz2EuvnWT4rcsU936HS3zV3ooUz94LwHvqhhH5vKvgNL0y52JF72xOcN
DisGzasgR2N1TFOmFwrWy9le4N2COv7KHT8V7MfhGY/2qfIyyNLP1rNy9sb4
OeuapNgbUB03TSMybzzuWM4/pV0MBrZKn3/Y54PK+d2mkfsLoPyJifhluw/u
dilfY8DOhaTGL3R9Ty7eGef7/usphbTwwQPenVzccO/pstaRPyDuuxXqhq6+
+LmQ/Y/JX9mQZ6LQEtHti05BOx9MZ0tAcVxOp87LD80Mct6ss82Aa/Qb8Vn9
fqhlpDSoo5sOJtx89uxBfwwc8uqN4ZyDVzZVpXv/88e9qoyVbpqp0HblyDoI
D0CzA6OhXc3J8KnMwdJwNAAZimkjQ/QkmKvk30w4xMOaNfcGl2skgi3dekfc
BA/fL/cICFNPgCbPDYFB4QQzMu22Hj4vAk1fclsSSdBSWuiuIRaBF7msKjtM
MFpZTb5YIIKP/CWlpnEEh6cOPf8cJIIfT05Ozx4nKC1rse5gikBQWpt09gJB
MY63XxwRwhYl+5KbVQSnBqOuaTsJIUElUX7gNkG1vAw5DxshPF1c76xbQ7Ak
vDdBCkIgeqZT8fUEZcEWC1hrhZDOWMZkPSToU6GQ2aIghHH37mcdnQQzx53y
71VRgD46q1S7CK7RnB/lWkKBOMAxGnoIuuAS5ngOBYZhDXpX33z9q0tkFuco
cEjI9T84TJCzXRg3e4iCS+Keit8/EIwrYtNu+1MwcFZ3UdsowcpCrZCjHhQI
MpOKzCYJPr7SL794FwWPsu/TAqcI2lSnG75GCrRzvjhmzhCMLUgxrDSngFtg
Lm2dJWh/cSMtbT0FRSWhk3NzBCs0PlXyjSj4H1hhPMQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHSI1yW
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+Gw6hvgfJZabgA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8lu8Xx5FZwvOUPbJHIUJDuq8TsvfePB7jMbOSWUpDSEKUrVCE7L4R
oUKU7JHIiGSvrMjv+f1z36/36zrX/Tqfcz7nfl2XgONlI2cqCgoKAvnx/7fg
g71nmXxdmPsTiazKXyzwml7imBfpFXJ9P/HCa5EFGoNKcsVJ79BU2HY++x8W
aJbxdaUlfUVeSTRWGBUOWmO7Nf64/kB82EhqHzcOPilGvpl3XULHNuiFhXVw
8FLpyDWFV8uIu8rYfsYQByvDTlkBhStIWO8aY4Y5Dq5x0U+sZq+h9dIHTwcc
cZCSoue6dH8TfRvnPfIwCAdtD4d9Z1z3kTKHgyFLDg6iHid/SpSlgJ0bQ7RD
eTiQJCEruVcUQNQt+P6wEAd+dA9D/QopoXktbLinAgf/LsnXL2cfgOi9/K+P
P+Igh3VEL56PGoy/npGZ+IQD1anbP06mU0OYg04qdwcOYm4NUFxOoQHtblyk
XT8OON6HqCzcp4OrkXnBwtM4qE0Q6o09RA9+9bmbC79xYOf42UnyHj186tvy
f76Ag1xKvjsetxig4aan8+w6DmShsfV3yCGIZN8QKaXCQy+zu+W9rUMQXdT1
YJsGD0E/8LPigYxAWyGxdYoBD/XXnA6RfA+D2FhxyxVmPGjV0elNuzKD85h4
5HluPMjuO/5hW2aG2kUjLeDDQyy/fYeQEgs8+76ld0oADwGONVdMPrBADFDw
jIrigXSA9MmTHgcuJ1JmUyTwYJPLynub3Bf9i0cPIEk8qE77fKjqxcFnizx+
U1k8nL3Lx9HBgYdTq2+kPsjhQVL8s8e0DR4WoSqJ/zQejriLHWGfwsNW2eeb
OYp4mFgYIQT9OQIH9J94flDGQ39cTFX8uaNg/8GvN1MVD20nzzEUhB+Fc+y5
DS5qeCj3TSodomGF4gFt9E4TD/l4ZepVTVaYMJka1dfGQ2rFkvnBOFYgcvLw
dujg4cYfrX1FNjbIY5t+mKhP1pe8ZWRsxQYdVkoD3wzI+s7k53tkskGTStUg
sxFZ36DxTuQEG3z1lc08ZYwHg2BKvXRRdsBXvD+pYkLWy/Uqp9KdHfJzSx9d
NCXrrbX587mEzMbeg1JmZL02BzWnVtlBZeQZBb05Hvj3XqfvneYAFSYJ9k4y
H810XmYN5QCgohW5Y4EHenREVfodB9g0+ckdt8TD7o+GFLUDnOA12a/9lsxL
Ed5zduqcMCr06aqSFbleAjzoagwncDMwNxaSub/pU8KDr5yQG5YuS2dNrhfx
6vTzI1xwjZTYY0jmemoRxQZzLnA0VimLJnN5Xvf9wTQuCN4V7ysjc75axPjy
Dy4Y2ljQbCFz6i8pBQZhbghSJXG1kzkuajhKgMQNt1aeGNaR+abEve/nirih
p6R0J4PMgW2nZYyWuSHWg0bAi8zuHj8j3eV5YHmRu/M4mW0ZEwZuBvFAj+/T
IwPkfA2K0Ym0tzzQeNZ305fMqnoL1yooeOGQVPTdv2S9Z5dSu9tVeeFNAEen
P5kl4zVEf0bxQt1Bn5Fv5Hrxy24E737mBV+Lw29lyHy0+9mXozg+sO5ICrpC
ri+9v6GAlCkfKIV0Hysg92P3yH7ApSd8MJL5pr6d3K/lyqJW2xE+6NR1chwh
9/OnqRVPoMAxKNrDc4yS+92eUvU+v+AYmL85v1RkSK7fWSL7u4VjcPrv6olQ
sl+GPKOq5jj44UqfWNlZsp++HD7NQG3LDyYu7F9ukP3WrY1/3BHGD1UP/pSI
kv04eG9R9Ek6P6jlWEnXkf36k+a5qvR3fmC7zKHwjuznWZXInq2//DCUTug9
fomc3w17x/fcAqC/j7sYpULOf489wsJaAHaasys4AA9USutMQqEC4OB2rlsb
I+sN6cxYSBWAOYHiJR8l8nxtRNXe/CYAA2u5lg/P4uH44vZGkaUgPKb0M5CU
wYOMZP/tq8GC8Hm0t31ZCg+n3cuPKj8RhA5P9+LnJ/CgPO1+amBQELx2bwzO
k+ffcnTYi9JCCHipDDX6efAQ1VH309RMGPDCUtmytGR/MKb68wcKw5WS3zOC
B/CQpBVINfdIGN7euBBIR4GHrGZp/og+YeCF9seF2ziors+yLjQRAX76/RSr
eRxMldzo/mckCtJMHHe8v+Jgdt6W8MlPFGoWJ+nT2nGwfFxxOTFBFNgl2t7V
tuBgN3/1sES3KOy0vKL79g4HR7OImsaGYlDzjLEi5hUOlB9caniuLw4JRQ6n
u2JxEKFVWdDtLQ50p5Jl7KNwUE8jlLh3XxyEl7WbJyJxoBhG4WL8WRwONIxS
tIfgQM6t9tC+hgTsF7bZCJBwIKwia26mfBwoU16yrQEOaDd5FqkVJGFZzP17
8hwLqJbHDJw0kYRB4zy2jSkWuOm102DlLwloumRYZ4wF/k0OJJaWSYKrzrjq
eC8LbHYmnLORloJqyQ6t53UsMFNIf7tCTBomJxe+V91nAeeTO4dlD8uAbEtG
upY4C+gM383j4JOBmLuPa44LsID8XdYLFCdlYGmC6dQBLhag/iHj+dVABtIy
ecIyDrHA0zjXNq8kGZBe3lRZ+84MPxZ67xRyywLdeHhMkzMzWBa92hc6fgra
Eg/Bby8m0JVwXmFTl4cHzksxQQ6MUN4bfuXT2bMQPGu/6W5CD+fxx19RX1cC
MEM/vLYPgOvfhIw8C4AD4KL3j5YCLjf/knulqwy6nxVyRZK2UQMUeUiaKUN8
SD6nRMg2Yqn1eVZgpwxF6dyzmMM2Kn21jc+9TGaVkfwcyW20+vjQ6uOHylDy
cKRbpXkLBXqcLL3Zpwwb1qsJu7ubKIzlqqSZrQqIeScaXAraQNFWtCJ7nqqw
txPgtJG3hjAZxo3fAaogvW9S8vfhGlqhwbf0h6lC/HJ5Mcu1NWRRxutWGqsK
yVon69zM1pAIvUIxsUgVKBk9iwfo1lBDFVGhbU4VPhxfZM7yWkUbLI2XUtwv
Qc8wIa9GdQURW0JdZElq4IoTfDuKFpGTkqjexmU1EPMw+cnGv4hcyjoVaq+q
gX5bVKw7xSIipYnQXLqrBjh+A3GnxgXkffnrM4t8NXCaiebMUl1AIexC49d/
qoHxwUQ2cYN5lODaZt3hoA718TLXRUJnUdL3AJVEkjrMcfUer7CbRY8Mj52w
8FGH/17+eGylPIsenw/YGb+uDnqqhTc2GGZRJjPfkz+Z6mBzJHPWIfU3Knzt
288zog4oWEp47d0MaqTjNPSw1IDs66bsuby/0PQzaa0hggZUfHQfFKX6hRhB
VUXdXQM0tZQqP05PI4ugywpCoRqwM2zrZV46jZZmPnIOp2vAOc7bda2q04i3
zW9Ca0wDUoSxO11+Uyg49rP/cVdNoGZaSF6emESZ4hOejy9rwtjJcPXOtkn0
4cOmM22QJoSzf03+VD6JWPYELSaiNGFG+HsjfeQkeu4VrJRaqAkMYW+4XgtP
oj49UZqDi5rw30NWpybPCSSLi0j+HaAFp/RsBemZx1EN/YB4S5gWzLxyItr+
HUPKFNK1ube0wL1hqq351xgyWRr+YZ+kBW6EqC99DWMo8MsZif4KLdhViJyc
8B9Db+8t1TataoGxuva4We0PpEFlP57mow03L7S0MV8fQV3bVf7BQdqQWaD0
3x2bEWS1wkhrHqENX/su0AoqjiCPsZrj+HhtKP6+qvHxz3cUV88WEPVKGyIe
SDLXen9HvSEdtFcWteHUbssfDddh5LB2QVLPUwdoCBd9uP2G0GE8RWdvgA6g
T4KN1oZDqEamyd86XAf6b/o7N8kMoaPearWkOB2o02Q5SrU8iFpn9LQiS3VA
U9dvX81nEMmM2pP+W9cB4ecvqVquDiCKTzdyBcN1YSrxWOqznD5U/EtFo+C2
LgjsWdGQbvchK1ra+ZNxuhDvS62p59aHKlWi5S5k6UJi3/TX67J9iFSf0GTe
qAt2IkU8/u97UWfFs7FYGj3I4damCl/oQTmZH3k27+tB+U07aQXLbpRuIzlg
mqwHcaeYppwudqPHXIkPKzP1gEajBiuT6EZxyQ60fq/0YF8klZi104VC4v4u
zXfqgc710/IdGV3I6Jrs+4kj+mB+pRWz+d2JqO0y3Dqe6EM4k+XAuPhXtM9N
LSz1VB/OcPTc397vQDtD7qMxhfogUSLoqjLQgZZNzxpr1urDt9vWBZ53OtB3
3R6lD9/1weR5y13mX1/Qt0xq+hFmA7C5fpGTVPYZVcQpDncbGUB9xtvlLVIb
ckxjoqkxM4B71bf1tDTaEP7FhHSOlQH8yWAoaRRrQz6N0TcvOxrA5H8tPQK/
PiHJ9W8SjH4GsCIf7/XM9RPKtQwNuvTQAOIfJX+/d7kVJQm/Zf3vqwGktFIZ
f3vSjFRk41FWjwE4BDmn5YQ3o9ULTm53BgygScpeJprQjAzMGetMfhhAu+ed
snqJZsQYbeO0smgA78u15MpqP6JbS7vlx5kModuz8GXG1AcUUHPBIEPHEA53
r3jmG7xHVVYtVEMGhpBirH1S/fR7tLFjUHXU1BCYxwSFDvK8R8HnnbhibQ3B
+Y3h3p9fTeja2+ifId6G5HsT/VHCjSZ0t34gyCLeEOSuObI51jSi1CbfnCO9
hnCh+Nk4pWoDGnb8a6w/aAi7rY9OZEg1IJ4Dt2ljvhuCv4v6mCl7A8pUeexB
NWUIrcRvfy70v0PPPtQrrPwxBF1WISkO8XeoqPlQWwe7EURPJbe59Nehd215
q/esjcCicTgm0boWlXN0+obbG4EhK0eGyNlalOuys+xDNAJGwdK8yaO1KJpK
f8ncwwimfK91TXTUIBPFrTmRUCN4WXgGN6Nag2YLtKYaU41AKT+qduLsG3T0
3tLA9pARNFm02qqj14h2gNN8YcQIql10nm7zv0bbwqr9Y+NG0Pe4erKL6jUa
bXjc2/LbCLi6bxWuNVejgq2LXY+2jcB/TcV306AaYaSkNllOYzhd+LhmyKMK
uamfq3OzMIa4W9S647UVaFGc82OZjTGEqjsPDWRVIL+D25+3HYzBhiKodz2y
AoV9+e/7PTdjmO5P0s/RqUDxxmd3C0KMofoux2b9j3JUbX/m/Gy6Mdz2Y6+c
YCxHVEEKb9zHjcFimfnZrRul6K4la2P5lDHMnB6dm3crRYzn/7Tu/DaG2ewT
g1eMShHrv8rB6FVjSL9ksjwjVIrEb8lvFR4wgRS12NXM+FdIP17uzJyICeAe
JsyvSpWg9BeyVR7uJkBt6fJH79FL1DpEbM3yNoGxOBVBR++XaP1g8nCPnwns
clRkF6q/RNpeO5RKoSbw17Q45NtOIdqRfa/HGGtCPv9McZYQC5FlrclMUbEJ
BC651v3GChBbx1XuxWUTiHvxbnGG8zlS3i+QFvxjAsrW9zxFtvORt8z3i2bb
5PUfyoIPBvNRcwKQ6ilN4fmUqtrvlHx0xZyhKg5vCmpee+tlHPmodyxV76S8
KdTGhnM6Cuahh2t1N3yumoJ3/1+FKpNnyLs7nmATagrDIYfYqM4/QzplxIsa
102BzuiXho/AM0R7mYGS/y6Z5S9RlC4+RWGzJhFfk01h3Zv33H/RT5HL+Nw1
6WpT6LI4497amoOUvnKGza+bwuC4Luq3zkacJfPWg1um0Ms3fJ1CLRttxL47
/2HXFCYZ08+ry2SjMi3nv2nUZkBhfu6RBE02Em0uDdE+agaa31YGQx2yEK5O
PbhQzgwOzYxbHWbPRNOFVwJJfmYQUi/hYfkyDZnx/ht9EWgGQjJUfCci09DH
B3fUf4eYgdGQ0LKCdRrKDUjhcI80A7Wfpq//HEpDjtibGo8kM3g6b2/F6pOK
Rrt2/3lXm0G3d75kgvIT1LcVeffKjhlw264SIphSkKoH43LVPzMwP/RLbmo+
GVWOJFlsUJlDw94gc0h7MkpoypO4esgcdh/jhk/dS0YGsS3tQTzm4KqMixyi
TUafjx1iCcPM4eSdqdSmg4/QB7WExzdvmkPZD4UCA7lENOVS+yXkjjmIlcsm
sXMmItq7P6n8o83hcLlTMeV+AtJoOe1FTDAH2oPTZVh7AvqsPnxR9ak5KOyn
05k7J6AeDeE5miZzWDaMnh3KeogmtKov3KO0ANOS4ZC/kvHogMcPvxs0FlDv
KGvcwxaPhGPoXwQzWEDbXATNJ4p45NJuhXfHWYBNUswbrsIHaFZ7f1pLwAKW
G5al5vbi0KqORjzjRQtw32ssvlR6H1Hqf5t4EGEB27/VlH9ciEGt9aZCAbcs
QJaK0liGMwbFS3cRLaIsIDzF4GD5ejTiZ2r9yR9vAVFKz33ViqIRfKmaLsuy
AAPCLfUi3mgUof1wtqfeAhwiUq+eZriHKDQ0Vtn3LGCBGFn2nPIuan39/tQu
hSWcrq7jfzJxB8WLIf8xakug+W9xquL9HcRPd3r9BaMlOPLLpjjduYOgWWjj
HI8ltMsqthUdvoMiVPe3rc9bgt0XpdFCoduI4mI1ZXawJTCvDjza9YhEVqq/
2gbDLQFnNXs8TD8SVapzJOFuWgJ9jz+diFwkIumFiEZGW0Kb/KPClZ2bqMsa
03ZJswSftX0Ln9ib6Glgc5JknSW4Jp3P7aq+gVSL+sXeUFhB7cBPvnyxCJT5
im5lhdoKaBgbqCaZI9BW+dma4wxWsMTJ+P3W8nVU9CZVJx1nBSVpQnKdCdcR
a4ud73VBcvyVls2Eb9fQ9Ph0zSVVK9gfuz0REBiOotg3dbvvWoGZRpO4xEgI
SmptnWyKsYJ7cNdN7r8QlBWcGlzxwApE13JXLyeGoOrhC3lJKVaQnSTXf00r
BE1l3do1e24Fq8IZRfM1wUhZHP9yuNkKNpyTxL/mBqHds1L0UzTWUPwLy99M
DUT0s/8y+hisgXjxpeTX0EB0JK1TrvmwNUjPlMh12QSi43v+9s9ZrYFSdeOb
8bFAZNlYU+0mYg0Px/zDdfOvoGpNDedFVWuode9YHq8NQD5WxKbNSGuwOq6p
w0ntj5iyZseUoqwho9dSIP+XHyqa9N2/EWsNTiof+G3b/dAvzwglxkfWYLzS
XqiR6IfsrmdU8+dbg6RgMTCL+CGd3IFCzVZr6Fm+3iVi4IvEF7UT0xhtIJj9
6Hr37cuo+VRP2RiLDUyLClI/MruMnK5adYqw2oBeKANkiF1GWRRuh0t5bYCT
3fjFtTZvxHbkzt0P0jZgXBugEHLEG1GfbQhdMLABXp7I+t0yTzR+Q94JPbIB
iaOia4l87kiUjSnO54kNPOy7NMa65YbcC3+9zsmwgb7oenxnlxta7049RJ1v
A6WkRdr5226IXpiyorWaHM9Z5vJmmYSkm79QGg3agFv+bptTpysKOeia5cRt
C3bSQrmLVc7oXSZ8enTMFiYd6Y79fOSMqOW41pqFbCE0eukOfaAzum/9RU1C
0hbYguuOjpx2RtlFcosLSrZwEM3PFNc4oRY9igtX7WzBRjA0vbKNiI4mPvl2
L8cWHgcrWKQfdEQH+450+eXZwn6b9cG6FQKiYI9rsS6whfa5D+37gwS0kHqz
UqrMFpLXzzTOPieg5qcecV0NtuBoIuZgqE5AQeUXlDnHbMFg+1GGYqwDGuka
L3jBZwfUD5RbsqzsUO8Rm+yHgnZwvNHzXY2MHWoz7U8OEbWDVzJs4sx0dqh6
qC1SR9oOHtvrcxMrbVH8eIXt8gU7uN+up/QKZ4uUV27jztraQQq75N6jfmuU
z3I8uCXNDk6FXZ7JumuJpKctt6iz7WBdi+UKgWCJXtfeu6qcawdCUzm/yXOP
Wl1+X6krsgMHxZFLO0sWaPbtC7+KOjt4KMN/sNfaAkm5iXlm/bCDTq0Pb6su
mKPKRmH7q0L20OZOF8QoboqUUkxGK8XsYQpXccuI3hR99Lxlu3rCHkw4JX62
zJigfvaf1l7y9nBMcSkEFZqgTa9nFsRL9sDJR3ne6qQJUuQSNNJ3tQd+wdil
A8rGqNHv2CWxl/ZwL2HvBfGuIdr5sxTP88oeHH44Xe72NkTywQ3fcRX2QOSg
DCOaGaIX1wkBuzX2kDSoWjAnYojiY58962qzh3qTFd4HzQbIIV+MKmzWHj5K
fTHcPmyA9udT7GeOOkDgn8I3hiRdlC4dQTPJ5gDGfQKXcUgXnfUhvRzhcABh
Tf6ag2y6yG/t7GY3jwP8R0kafvFBB01vD8XVCTvANV3m/mhhHdRBy1OfIO8A
XpSCB54uaqFM/myeCyYOIJ6VqsNSqIGYomVbpcwcoBk/fZMvSgNdX2vy57Nw
ADmSnJK1iwZyaJ5q27d2APYTJFl7IQ0k6HkiuInoADzZnvzRWeoo/3V1n7q/
A7jc9Kg9k62GSvS+xBklOEA4qXTdtFEV8f1np6iS5AB3vfdpG3JV0QOB5Sm5
ZAegWyw2NoxSRT7r+AusqQ5Qm+faMqOvik6lWswN5DiAOSOV+tSYCqqemlS3
LXMAzZtSwtMMKqgubIeC1Elm4gmFosCLaOPV9PLNbgeYX+06Em9zEclMdo9l
9DqAYvrOQKryRZSr+bKhZ9ABbD9H8gszX0TRbDYRaNwBzrSLiuwXADIrrdtn
W3WA1y3jObpfEFqajPj38QgBvlpV+2SuKyFxdq/FMVYC4G9tzGp/UkKOWpaj
f9kJcJzZef5cphLqL5Wtl+UhwNbZw9z9GkrobfhEeIYwAUxtNFVocs6T//eq
ewEKBCif9cxYslFEAtp0u0LmBPio+WXgOsVZJN+n0s1lSYCSF9KGm6NnkJp9
xAucNQFknSRuZ9SdQe7+2yb7dgRIiOLhuxJ6BlWmzRV/cyFAa5EJj9b2aaQ2
/9X+YSABjj2aijXeU0Du9x+///eIANT09bunReRRGHvfkz8pBJh3nGdhYpBH
cTk4n/knBGB5JurJuCCHKqqieb5lEMCw+wvXtSo5tDsSdqUqjwAXZ/T1TmrI
oQfSBDHPKgK0aN5neBJwClV+lYgZ6iVAFc7z+okZGRQv1Ji300+A3I/18jEd
MsjjqkUD9xAB4kR883FVMkjw2N0/tiMECLJZaXt4UwY98P5pPzFFAP+wT0EW
x2SQ++Es+bkNAmA1kcaZ76QRv/bR0V0OR2B49vzv6J8TaDfz5RYvtyNIxzDU
X20/gQZWlY8gXkeovZbw2CDnBIpL9dW4IeAIGr1hYo26J9Df3x3lNMcdIdLQ
PT+x4Djqj7p3l+m8IzwxJmwUe0qg2OZ/Mvy2jhCTlnxYiU8Mge+0LK+9I1yg
ORURvCeK1rk7TnERHOH5ubc6U99FkY1vhvxRZ0corepbU0sXRVI8SmfpvRyh
9UdB6AleUdThG4yWwxzhpSh27aKYCGLhXddtSHcE+4oC33krIfShZVivLtMR
IsrDToYhIRTk916/JtsRfn8mtZwSFkJjLQmGlbmO0OY/X3RkURCV+cmavihy
BEMPZcfMSEFk1OptE//WEbSYZI68qBJAif6/3R2+O4IY1QmNY/L8iEstxNd4
1BFGjMWyUnj50VOOQ0FqY46ACgjKJ+n4UXmd5G3Jn+R8tdxvXK06hjrpfLK2
5hxhIaPs4z3aY4gpfaMn/q8jqEcpfZus4EVRHw5caOQigndzKe3Jc9yIJSVJ
pZKHCC8fLuQYHuFGKW4iWs/5iHBtv2LkxQIXymdSN78vSIQEBkn8+lMu9NEi
2tfyOBFcWue9/jBzIaoFlvyVc0RguNr5m7jGgcJY+ZgFLYnwzp5owjzKhr6U
MVgha3K8TMejuFo2xKf3J9fGlgjOeIrRi0/Y0Ls7nxVTCEQobolUUzFlQ1Rb
IS6M7kQwFErufvGVFd39NlC3EUKEMa5LX958OYoSsh56tqcTQZe6t/PvPB5N
ng9/PZNJhKTpIlePTjySHyRR0eYQobc6HUdbiUd9LPAY8ojgcI4vsTYUjzhu
Lr6vKibCX2/5v8cO41GmkzZ3dj0RNql0nB6dwaECCZq2gDEiaK5P3zhrzIy6
eS7+9Zoggrqux6EjYsxolzlc0vUnEdqvq1Wc+MuE9DbW4yxniHA+rW6BNZcJ
rTf9NMaWiaDGJEbxYeswApsPI3QUTqD/StvoQjEjGoyLXEk95gSxZre2bpBP
AVQ33wkmCThBdvMxswjug+jElb/G94WcINTS/0P5BgO6Zu1ffV3MCZ6eyksr
L2ZAwuLEUKeTTkDZefs9Kx8DutyoTCONnIClS2pXip4e0a5TcjbaOcGejXbS
yD4N2ip9HPfTwQmUps18lEdp0JzXSWp6ohO0EDIffntLgzp/2SzpuTqBBJ2s
xbMQGpQ6/Prj98tOsPtJ4+f9LWok/d7LbyvCCQSG1Tpu7R1AZglD7SefOcGm
s8Qu+3EqpKHvc9E4zwns/6WNmTFRofOMdK8DnztB+XYpf8MqJeK/I/+07qUT
BGKFOSxvKdFs8IMg7UoncNEvFn9qQImuES6JuH4k51MicN/gBgV6LlN2LfOX
E6ww6n58/G8P82Zd2X792wmCYy/PJXftYfI7Mle65pzAi4cjajB3D2t4X+pB
vewEYq7GQcI6e9igWamF+5YTcIgwhfVk7GL04a9OnWZwBhjeoTyr+xcjfSqe
/nLcGe722b56ObSFSZcsEH5JOsPHqsAt+8otbD1BaoTipDOUnqKQ0XmwhUXY
FPfIyTmDjKcSffulLezxUlHDk/POENh4ocSiahNrZS1KddZxhnb/HA+PzA1M
wrFQb8/LGWYca/Lcktex1gzF0tXLznB7uEEkKXgdcxlqw834kvcvHjjwy2Yd
yzWY6+2+4gyuhIZf1MLrGD+StH4RTublR8NclWsYG0+Jq/F9Z4j6VHYzfHgV
o+oviygocgYbtdS1+ksrWA5OeSKzxBmc3GQ3Y6VWMNDtVkkqdYbECdXxMNYV
LPzDKu31SrL+2NLcxqllbKtc7r7JW2cQLtGIGbq7jC0+qHqy307OH3/BUyZ3
CRvWfFNuOucMWcWaXJf+zmPK+rkWVxacQTxvvgq+zmOFJg/+JS05g+ip/NPX
n81jIfbOWr1rzsCqr6j1Xmce47qCmzDadQZJ5zUvm6dzmEW2G87gsAscjQi0
CbKcxfo3OH20TrqAvVrBsZb1Xxi2S83mLusCMtfKzxM7yZcayuXae3IukBDX
++J00S8skLGZ7tMZF4hqPSFw0+kXxirol6UOLlB0/6nC04FpzES3rUPV0AUG
5c+bvG2ZwrqfhUghfxd4u5j08uyXSQxPUf1G8YoLjNUSkUDZJGZss3Lp9FUX
YMu4UCX7aBLrPUqykwp1gVeolfDJdhIbuG36gDvSBdyuywR/WZ7AvrvKrGwm
uIBCDX3wBu8ENnViurK03AUoc3By5oljmGiUwMWiShfgtZS73x06hrn8tPny
vNoFVG7T6152GsNm0numMmtcoGIjEBhPj2GzhxvZ7je5QFc/S0JG1Q9scSkt
yK3bBR5RY/NPTEaxrQpDJcFVF9hQmLAffzeMMZ493XFk3QX8Ca22ak+GMf63
XA40Gy5Q/JyHe9xvGNP4MBk5s+0CzaMBxdWiw9iT3ivtJZSu8MKnQPBb/DdM
8c8Tq/M4V2iZ1xtp9B7Cwk5PBJnIuAK7zconbv0BLL6m+aDaKVc4vXxRtVh6
AMvFXqafkXcFC+29cQ+mAeyzWkAD11lXGFYMSbrc0Y/xmtPSjyNXkFHakI42
6Mfqrx5P8dJ3hcQKoBmw6cP2//OruuPtCt0xo9niST3Yd9rymKc+rjAvneOQ
FtiD1ZisEOr9XEHw3Hi1omUPFrB8mWkj0BUwIUfRf3w92IyYl6vzdVeILxFi
eljUjXUnu3KqxruC3/Oo6ZKvXVhegE04ZbkrZHOOrh2S78RuNqUZ81aS9y/r
OCRzd2IOLMMS56pdwfGoYOWlA50YV5Flv0+NK+S9iQkTzv+KxU2anRxrcgVe
offCNTMdWJCR4Xh9jyu81q3qZgv9gmnLqF0K++MKYgGDlyq62jCKvj7KgE1X
kI+qffr7ZRtWHexc77HtCoxD7Aqmd9owwfe3zljvkb9ndna07XwbtmP6XkKR
hgTwbi9cvOATVhgKTFtHSWBg2dTtfb8VY2hRHPCXJ0FlyZz0mZBmrN6jLdHj
NAnsrItZY6yasQAWKwPiWRLcx1PHHjrfjI1ZBn8yUiJB3pkdpYe7H7H/5l/X
yqqSwDv8s1rBjY8YCa+QvWRMAoU9gdLBxA9Yi+1JNw9/ErwSW45O7W/C8ERS
bcYVEly08V/d+a8JsyPlHO68SoIfzXOd99KasA2/I+XyYST4pHdvSpbQhAlH
be7s3SLBVBoel7vYiEWUv4uNTyZBb/25uD5cI6ZIZ1Ba9YYEbJq8vJJL9dgd
xntUM7Uk+Ml27sid+nqsC9dkwlVPAmPN8wTJuHqMxCO/fa2JBN0mtzVspOux
FFkOZY12EmBmsrwX/Oqwdeuxnm/fSWAWsZafQ/cWAwKn6OEfJIhvyaK9P1yL
xbgYBaFxEjSbh32ue1WLCfp+4MmdIsFKu0XHgkUtZnjnhbPXIgm4jbMjQ0tq
sPSY8ddZyyQwlO1cuH2rBpuJ5zrYvUqCWC3TS91WNVhEWmzJ6U0SODxf2Zem
r8E+Z3+kcNsmwS2x7lvYjzcYe/4/o7S/JPjyMVUxrvoN5vjyTN6XPRKseuW+
4Y17g5WU+mzu75Pgq9N0/rzzG+x/YnxUrg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QlYbnHvlmY2Tp4n/AqCQddk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ig8L+2G8gd1z2po3Ky7C+nDE2oz4Bgp/tiQ0rF6EnIN7fw7NrSNRT1g+e9Al
iCPmluJSXsecrFdM63e0oSqiz49i4i9Wx8uOD+jqwPibGzs/BlfQq1FeJ/Pi
ZQiqutzx6udvfPG6YCXaVBfIeEmGOVjm8aqaTPNVIz1oKZxdmNSZxUUehleV
ZnpA8WW6ME5+Fj0Ob/ZuWunByIE8DWW+WbzxtmEi+qoe0Dk5XPp4YBYT9KR3
ngTogdUnd9+c+pn9fC51fj5DDxYFpZQz2WaQxE/imdOkHjy6Hd9zcW8KMx6L
1Do76YN2CNUX7cmv2D1m2/3ouj5wmaXT33j/FVcPp44PeuhDTg2Rb23bV9S6
tkUsF6gPygKPUi7mfsUtkQ5tqjh9qMv8b5HS7isaN+nPlT7Vh527Vulpg1+Q
7p3v6cUlfaB78DDaYecTJv5pDnPzvQLRxxYWhZI/4vWBBGuzwCswSzKyQB34
ES9W2qJ6yBV47GS0QWH7EcldDxGzRl2B36+fMQqKfcQb8/qhfalXYHP3X6Dp
0Bg6TC4EC9ZdgWwnRQNZxjGU62O48XP1CnAzDkq8rP6A34q9fQgeBvA74bTh
yOlhNGD+9/mxjwFkz8zV3iYfxld3b6n9CDCAMJXI29rLQ5jvlUbvdNMA3iyS
6NN0DaHNhWeNzikGcDUk7liU5xB+fr/z73qdATxlWfHY7RvE4Y2bUd5bBiBb
BtX9qQP4UjXpfni4IVQOe/3mM+7HWYemtwG3DKGLYElw1ehH8qgZEs8YQ0g6
LLzeJtOP6l2S12yTDGGJ9xF/ImM/9qqNo3KuIfR+rMl/+qwPB9U5F8jaDaFY
ru77Qtc7nNKsk48mNoJ0qWJR341eJP7v49TdUCPw/ZFSbVvQg90tVzi8IozA
9lGX3HBcDyYIvrc1um0EKnnOR8y9epD1aPcMa4IRiF4WuFCu1IPwtvZb5SMj
mLLq/WU63Y2hWonzgy1GoO0dINDF1Y1E6uorp3aNYMZa3NSluRO76ztEd4iM
4eyxI2yRRZ2YwK3g+ZXUGBZX9SiqEjuR9aDk6mMqY9D4aLOh5tCJ0MmxJsNk
DPkSp5JsjndiqPLepul5Y/C9kWOvTHiFRFhHnO1vDE1hSoyaXC/RRPn769Eg
YzjAfuA564mXWKNGn3Ii3BjSFgyrqXY6kKAdwHUzxhh0hhn1OQc68L3pBS2H
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
8X8pS/uA
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SKyhnCshS6hKhyOVOdoWbvdjtF3MlhDJOETgxh1b8Hby+j1z8Bv12asaEB7Z
QuzyyYLrzr9R3rW2VJEGW4gb3KwpFfyFNEsGL7whs4OmnISa3Z/zKOclzeoq
pR34BArKn2qcRzuVCnXCdHYw9zk8z+PRPCp5k2mYxWwH/Jle6g+s5xFbu5Nv
JJ8dhPr+mWHpmUMzEzN1Wpp2UJPGzhXSMYtun9w26o+1AzH+8jLHkWmU2tHx
X8tdOxiUbvX/8W4a5QZnBr9KsgOuh+ffX8+fRjUjl56lptvB805WR3HvaTSd
G7Nv/cIOph7Ifjp7ZBqpC7IUj7TZQc4AY46q9BTaVxClnaayB3HFNJJK8SSi
XfiX/ZXOHhhSuT833p9ErI96pdsY7EHR2bDaKWwSCf/1d37BZg9jncejt4wm
kW1zXY37eXtQL1k7Eb02gWr0dPFLmvYgdevSj3mYQD52bi3bN+zBa79biHlq
HDHmLvxUuW0Po37n/tx/PY5K/vM9uB5vDxGSo3TmCeNo9nKUCv0De4h+faU8
Qn4cOUVm1/A+twdRrS+Ye4k/kGH+UJFexyHf2lURG50xJLhkcP8RvQN47K3+
wEx8R21SXyp+MjnAzkL6nZdvvyNcoF3veTYHOBkwJqyQ8R3lkrkzlPM4QM7s
e9UfJt8RO+ut2PdiDuAVHuNxrfkbolRoCv1t6gD6zYxLWaXDaOK6DA49cICV
6xe7aAoGkQA7Y6LPQwcYMXhqXh43iDyKZmufZDvAG83r/tc9B9FGf+YxyucO
IOPIXZElPoho+clfddQ4QKNzLKp48xWJtXWRmw87wIl78878XwdQyFFiLu6U
I5TFtUz2XviC3uXAxwdnHOHml9cbgoxfEKU013rbOUfgC+p1eLrRjxLsu7SF
RBxBgu982L/mfvS4RHrpt4ojkImWMuk59aN2Y7JLgU6OMOyo4Ueb3YdO3H/4
Pe6JIySwRNhQSvWio19Z+/yeOULrlHtWO08vIjuZ2G5f6AgC7c2C+XS96Hdm
dJVohSPcjV4RN2vtQW15nol9TY6Qcc2orOZ8DwqqvKTO+fOQb4/TjUfrXWis
b6Kw4LQTTP5+QSde+QkNsDo8vsfnBA+KBhtSkj6hTqvBtBABJzDllSs+6/UJ
1XzrvGEo5gRtJjrOTYKfUPLEK8eVS07AlUfptfekE6mv3mRWcHQCz+XoM0pZ
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

          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XfXk/wAzVEiJ
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+h+3IRty
          "]]}, Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WG8Y2SmB1TCPbP18OPE/Trl92Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wrlRRsGm5XD8f3HGt0A=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBAQX++iFib1JlAgAAAE8AAAACAAAAIo/9o54e0T6WJkKTYi/0P7cIKR9t
aK8/pjvxOArsBEDBeK6kKGi/P7jaF5EWohVAkzbkXA2Oxz/HX8ItdVAmQMYw
cWcGaM8/MoMjwBz2NkB8Ff+4/6DTPw6n4ToNkkdAlpJFPvyN1z98NEfaWiNY
QK8PjMP4ets/WulNRBCpaEDIjNJI9WffP9NRZ3NjInlA8IQM53iq4T9mIW76
mI6JQH3Dryn3oOM/F1TPEvXsmUAKAlNsdZflP7cx21rwPKpAlkD2rvON5z8S
WTuHEX66QCN/mfFxhOk/3JlEaOevykCwvTw08HrrP22D4MM50tpAPPzfdm5x
7T9WFUxK3OTqQMk6g7nsZ+8/hmzs2LHn+kCrPBN+Na/wP63JAMHV2gpB8dtk
n3Sq8T/ACECga74aQTh7tsCzpfI/TxOeFKuSKkF+Ggji8qDzPyYdZ/r+VzpB
xLlZAzKc9D9l6MKp1Q5KQQpZqyRxl/U/wBaZpbO3WUFQ+PxFsJL2P7picrBH
U2lBl5dOZ++N9z8o8oF6PuJ4Qd42oIguifg/X2lVYFpliEEk1vGpbYT5P0wx
A4R83ZdBanVDy6x/+j+ObUc/fkunQbAUlezrevs/lnNY0EuwtkH2s+YNK3b8
P7pLrL7jDMZBPVM4L2px/T/fhZGIN2LVQYTyiVCpbP4/0HmPJEex5EHKkdtx
6Gf/PziSM78Y+/NBiJiWyZMxAEC78So7oUADQixoP1ozrwBAJN+Y7eCCEkLP
N+jq0iwBQMxMsvHGwiFCcgeRe3KqAUCLEoTpSgExQhXXOQwSKAJAfy6XBEw/
QEK4puKcsaUCQLkiLe8/+05CW3aLLVEjA0APAlclPXpdQv5FNL7woANA5Khb
dgz9a0KhFd1OkB4EQKuSxpMKhXpCROWF3y+cBED8QZGMkROJQui0LnDPGQVA
gSYRHcupl0KLhNcAb5cFQK7dwhi6SKZCLlSAkQ4VBkDGTBoHWfG0QtIjKSKu
kgZA0RljlHekw0J189GyTRAHQOwXBS29YtJCGMN6Q+2NB0ARaxoexSzhQruS
I9SMCwhAbKxLSQcD8EJeYsxkLIkIQELn1hesy/1CATJ19csGCUCkTDMu7KoL
Q6QBHoZrhAlA7A7m0CGkGUNH0cYWCwIKQLSlgs5ftydD6qBvp6p/CkBGfT27
nuQ1Q45wGDhK/QpAoboN6bArREMxQMHI6XoLQCd9Fio2jFJD1A9qWYn4C0CG
wN1fuAVhQ3jfEuoodgxAiQkKaFMvb0Mbr7t6yPMMQFCfk0iwgnxDvn5kC2hx
DUC+un/AAwSKQ2FODZwH7w1AJN2TC7Oxl0MEHrYsp2wOQNgw/8n1iaVDp+1e
vUbqDkAm85FF8YqzQ0q9B07mZw9AGucUs8WywUMx/2L1FvAPQMgYheNG0NBD
jCBfziM8EEDKd6iIWODfQ4DBDCI8gBBAAsJ0LJwm7kN0Yrp1VMQQQP+/ukXv
dPxDaANoyWwIEUBGLEjczcwKRFykFR2FTBFAalPRG34vGURQRcNwnZARQNFU
6F4XnidEROZwxLXUEUA9hzXomBk2RDiHHhjOGBJA3trEwNqiREQsKMxr5lwS
QFOHkHaEOlNEIMl5v/6gEkAWrodzGOFhRBNqJxMX5RJAR9AuPwKXcEQGC9Vm
LykTQBqDKq8MuX5Evxz8v5o2E0BS2RAiv+2BRJg1Puk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
M0X4Iwuuo2+PQyzA927v1edYf/Qm7Y72coQFGGtfrHEw90dlQTnsXjctIAXb
f3VJ2h+5XGpuuZplAa1yIwwvl/zQt5GDo2uNFlCSbXlWzdYPTezejA/es4Bm
0ZrE+znXUI9WRm5cnCXclm3R06vzQvMerYMRdyzBK3LWfiHbC1HEz5EEJllC
YPCNvPxIL6TzVtHHNYPAsRZX9DW90ID2Z6RRaglMxTxqAx890ZiOwAp5lyUs
CkW+wlB6ohm9RtVEYitYIda2TgzEIuLLn2bSYq0gvDHmaVSqG+rrMOcPumUF
NDHrVmfD3VC65IirVYIV2K+o9ky4uiEe+r45nnQr+KKLexh9wQ3BYMPC8/tW
gHWuIHk574pi9fE/xzqsgGIfh3mPXBGRjs5vtkMr+MOX8uMElQvqa+qWPSCy
BpxL/b8Tf51RuhAmcJrMGrxdwji5Z5wRD6Xi1mNaa3geUqUf1uaMoJd/+wKn
Ndy7Uj5JEuCMYjWO/9letAY6U4klt2knRIQaiUvCreHlQy3z40xHZKOx+G4q
2hq+8AjTBPk6ohfa7FmMcdYwEMivf1LfEeGMIgRvJllDZIby6ksSRzRie0nf
o8AaLL7Nn5wIdEClIb1Z4u3WcNi5x8Rsb480qj8INRPZQEDcVEu/ni0qrqXc
3CSzAePFU0+HRW3Rbp1Siyi1DWjlSPDs0dii6uZ8g0JGG+izSqd98d4Gsbx1
8L/OZwOKczPZnUY2aOHHQoumhg1M0//S47W1RglsO4aj8TYQ82j/UCzFEmX1
9c12JdtA96LAY/4AS3Q/PD+8Ps0GKCTOMClaWaLGz6rlWTk2YPbdZ7BSwBLN
3791YPHIBgzx5WikwwKpCZ+q+txrA/WSw6WHO+boQEmCap7cFr5oK3nJRZsh
qp9HRRPUtnBbR8vYwsMMMRUMy/XS2cKwntwZ/GUzJHoY6PiIxRb2aakpjfjM
kPXrlkbPc7ZARf95aqbPFDXq6rj/0rCFw/OWKe4cpsjPxrVr56YtDO5V31ce
MkH0939OqyTYQpgVRfPNlyaoetb/+EaKLcjYfeyfLzVBi96xKrT3bGHU+uDq
VqgJcrhe1MhTYQs1uhVLSvwmyKBsslK3zxZ+86qX6MQYI+Ff+pkFtHbAp3LD
sCbZCPXKjj2fZrCDgfv8B1weRsgt1Gb4HIsdnHjcHNUMRug+kSfdMy47EAno
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0OFeOsXXRI9qaoN2jo5wwGOXq/W7gh79D8RsWKU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9330#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200}, {0., 1.0583235142923644`*^22}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"c1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c15", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c16", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c17", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c18", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c19", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c20", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c21", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c22", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x15", "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #29}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #30}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #31}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #32}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #33}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #34}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #35}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #36}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #37}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7343951915173693`*^9, {3.734395222781787*^9, 3.7343952492413282`*^9}, 
   3.7343957335524764`*^9, 3.7343966564272604`*^9, {3.734396712298381*^9, 
   3.7343968664662776`*^9}, {3.734835032939623*^9, 3.7348350569557405`*^9}, {
   3.734962129501548*^9, 3.7349621425308065`*^9}, {3.7349621901596565`*^9, 
   3.734962246510724*^9}, 3.7350428499879646`*^9, 3.735431895388446*^9, {
   3.7358589320858855`*^9, 3.735858957305214*^9}, {3.739538305595027*^9, 
   3.739538316665264*^9}, {3.739538783492248*^9, 3.739538790141076*^9}, 
   3.7395394102703*^9, 3.73954531995617*^9, {3.739545398219865*^9, 
   3.739545418888002*^9}, 3.7401685915579767`*^9, 3.740168839912815*^9, 
   3.740173967234186*^9, 3.7401745469604053`*^9, 3.7401749164895463`*^9, {
   3.740180255012986*^9, 3.7401802841962385`*^9}, 3.740180456489258*^9, 
   3.7401820535587573`*^9, 3.7401822265604753`*^9, {3.7401823099105935`*^9, 
   3.7401823342786083`*^9}, {3.7401825232080545`*^9, 3.7401825896423054`*^9}, 
   3.7401829153092365`*^9, 3.7402803791074467`*^9, {3.7402804193359013`*^9, 
   3.7402804650689635`*^9}, {3.740280496938379*^9, 3.740280514875267*^9}, 
   3.7402807259713087`*^9, 3.7421616401363993`*^9, {3.742161776250252*^9, 
   3.742161787223974*^9}, 
   3.7421618173028345`*^9},ExpressionUUID->"20810070-205a-42cc-ba08-\
ac891d429f0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"varc", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"vars", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7402805340186815`*^9, 3.7402805349602213`*^9}, {
  3.7402807441848164`*^9, 3.740280746851073*^9}, {3.740280800010992*^9, 
  3.740280867712282*^9}, {3.7402809010768127`*^9, 3.7402809749174137`*^9}, {
  3.7402810281094213`*^9, 3.7402810296149845`*^9}, {3.7402820101636496`*^9, 
  3.740282179066575*^9}, {3.742161737500662*^9, 3.7421617509207697`*^9}, {
  3.742161845171906*^9, 
  3.742161893730282*^9}},ExpressionUUID->"632b824f-6a04-4e45-a386-\
a6a011f848de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlXc4Ff4XxxFSSUaIVESDREbypT6fY5S9973G5V7XtfdMpRTZIyRbiKSy
sxKSRMmmjZBQRgiJX79/znnO87zP633efx0hO3dDewY6Ojqpf+X/vfzXbNv0
k+PwO2Ogd/XmL6wQTEc1en0cGInnfOZ8f2EZx/pdW+qi8Hl658N7235hERUp
M1NlMZDv/nv069FFzPxb4CfjaXGgGh40X4icx6rlUUOSxuLgf48919NrHl9z
XW8ieIvDixec0jyEebz5dehWaZk4ZCTeN+kUnce/uxP/s5Q4CYujWiXPkufw
VDHLjYpjEtB4Jv8ey7Gf2F5yfbfU7lNg5zZb1Bg0g7U/hBfsO3gKSi8pWmbo
zmDZcO5zdJKnQDLHcaHp8Axm/HLK5a3+KfB7VL/+sXMa34116HBNOgW+zHbK
xkLT+MuP/rDi/VKwvYD25MvwFLYoebwlLCYNq8kyUzH+kxjMz93epSgNmRFZ
IQFGk/g4Y6fELy1pWN7xmzVTchKvEietWlylQeP+k5jEqQmcsutAA6lMGmbe
fz9yxGoC9zlFBmTKy4Ast61ymv441hG1X+BRk4VvM23urtZjeD3Kt/6TqSwM
0g9FfFUew0U/b9zIp8rCyzDhH9eOjWHGynt80mGy4BEin3p2YRTXoSklnRey
sLlnsScpbBQfNXZODFU5DW9rqiLya0Yw3RVPmXksBy2mOmq2np/xo9Grf6v1
5OBap5fjU5XPmKia+PKSjRz80tu3asXzGVfvqCDuuiIHs86izU4Nn7BL0lLo
0UY5+Hn1xVzhrk/43X3/fsuzZ0B7DngI1R9wef8l31fy8tDPrrHApPAOF92g
2I1pyMMK37kdrBzvcJaclt4fgjzkR4uXGk8N48jUfaInL8nDTuX//jy4PYzJ
lhUf45vlQfrh50/UtSG8d3xKxVzzP4jZxfiivH0Q+/0y4vxGVIC2a076s7f6
sUu+wtaWiwIEXTcMveLVj+1MhGb3XVYA19b/6DUM+rHuk58vNHMUYNWz79Kl
Pf342MWIwEfjCvCm/ddvu9g+PMzwbMTXVRHG6PIKB5J7sSKn2GPGK2dhxnOP
rPCrbtxFT3j1Ju4siCfPilk/6sakhYivKTlnwVl3sff5rW58vfs7r2jLWfDV
jTnKZvNPH3s/RIfpHAQaO7JIzr3FpF2ihilR50DQeNw5nNSFrzMeXz6WisDC
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
Rf8DgF1Izw==
          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjnk81AkfgLET7aSTTUqtJNdHxWZrnN/vW1tjTCEzzhn3DD+DyJFybFJa
SpLCiCleucqVXIWKQdqyIW2udl3bOF4Mkits7x/P5/nn+ePZ7eZnxZWSkJAI
/Mb/XeTRqn5rvx7Opb9vn4+ZgZOa3KmtVD0UeW+stg+cgdKOiOBXFAr+7LiU
1XhJDHnRHLcBGgXHA3I3yp0Tw91DdIslBwou/+ndQPiI4Sp/m+a+CArGKDRP
aVuLwZ39uDehjoLdDyOrFNTFID80fNTOTB9v31tuG+RPwtkZxhYRywDtp36J
VjGYAMMtWsWkC0ZIk7bcys8fgz8kHV613DDCr0KrEFbyGLhMxQ4mZxihTek8
RfvSGFxuHVHQrDfCnaErVbPsb318fuTJNcbo67c+X33zt36dplXyNWOMlZKj
roaNwmWSxqw63wRTKM8em7BGwHMpUZBth6gxdk1WyUQEfk2ig8Unj+AD7tAC
1A/CVQfpvcs+v2CUT11Xws0+cH8Z5qFLHMfD8crLP+3shToZxVPe9qb4YltS
38L4B9DdHJk8EmSG/h+TVFGhA1xmjLXNfU5ggnrP+ZVNbZB5t1Fp7ro5XtfO
+Yuf+gYexxv0tFtZoltSi9pDcjMEPTW2FJw4hWa7F4cFAQ3w/Pfs6ViWFebs
nHT6Tb0OvKj6tV52DNztQqPt+7EWJjQUGx+xGUguXJG+TK6FAPLCmwUXBhYH
WvqOzNZAeEtVb6wXAw3btch9b2oggUH5mh/KwHBTpntYWA1UOB82HE1nYKiq
e4ZrTzVInfv5Ca+fgWK1FNWc7KeQnqdb7s1jYjtJmTzrWgXNXe7N904zUfmv
JdkFyyr4TE7ueRfARAbpxtBarAK676KkURgTR8ffi+m7qmBRV2guG8fElr0F
fKeeSrCvZg4XFDLxvpbF+mLbStj6R8iOCTETxZ1PJxrsKuDmTO1F/xBrVB7V
IhTDyuDTg+CzRIANLqVr/T3i+Qgajifyo6Jskc4O2ta8vxAkLboHbkTaIakg
pyP4RR5I/KdCMuO8PZa94JU0bcyGGIW5k+2/OeCzscraqMJM8Hdwr5+7xEKD
PQeXUPoubLg32mcUw8Jj90+aSE0JoGDwzOrFOBZG7BqNbe8RgMgn0kg2iYWX
Em02ZTwSgNMFQYVyDgtJ0TWPxh0FcOL+hwe0ZhZWc0He7Ek6aEzQb6XJsnGd
oqjkeWga9F/U40ASG2NyTlwKUUsFta0b4v1T2XjUerVuRT4VeA9ElZkCNioY
DexJ/C4VPrffWUfKYeNri6oDH/v4sFZV8nFzBRtt+1Qivkvnw/6mFkmrTjb6
V9jkxsrzIZTseY+zwxFLJIwdjm5IAflbqd2xmY5oIVLcUKmSBDmbtM6/THPC
W4lyT2Lmb0JdwI/H1B86Y0v8P95DqvFwVzlDyZjpgs4RXaVmt2OhNnxRgmh1
wT/Lyf25TdGwmy7zdY+tKxra2joepkVB2VvNa10drthQdmU2eMsFiGta0VF2
dMOr+6q/HieHwq3AEZ5Lrxumj7f5BcufhfAfdm1UsXfHYHbKNvvmAMjXXPN7
UJ87Ch0/NJpG+4H0Z0nFOicOLsrtlrhez4P5En78kAsH4zuV8pOKeTDme4C0
1p2Dx/jmwofpPGgVsSfNPTlIYe9VlQjhwZ2eysZePw423XCONtXmwX6hb8B8
JAfNqvbFWaR6gU1i1+sDWRz0XpNWPxdOQK7Oo1/vijj4PPQI1hMecPqHqYXK
EQ5aGhqc0rL3AL1FneC2MQ6+al42FNA84IWwxJsk5uCdyd4LWVoe0GlTYseb
52DKTIFIZ5wLayOKfzr0PRfjPmKRaRAXiFeFn1q0uKiz1EYxuMoBTbcH5su+
XFw3MdST/s4NemhPSq3HuKhym73uuYQLtGeF7oNAD2zc2r/mw3sHmH98ykhl
2gORe3z5rdAGVqsCyq+c9kSftISZbmcG0HWOHwuf9cRjpQOkmqOW8NLxgJd3
IIGT1h1iuUw6bHEnqgXBBC6HC2e+xNHBichc3xpCYMJ2/dThc3T4EiBXqhdO
4NWssv/OWdJBNWZucfkygSrMDwlCSTpElj6PS0gm0M9rV//3HmZgIGNZUv6E
QNW3BXFr9WlwRTZWariaQNsjF0kFajRo21zP3P6MQENKVydbngaEkt7Cr/UE
er6PO/Np0hRSdLcdMX1N4O05KzY/1xQ+s/redfcSWPi/nv7TiqaAropq6/8m
cJq7o2ZQxhSueVidg34Cy2WEbO4XKqicaVC6/w+BshPC1/HvqHDqSh7Xd4JA
faLX/nw8FdKv9VfeExPIoRa6MCKoMJywndw+TeCnzM4BfR8qRKbFFR2aIzB4
uvKgthkV3mQ0SngtEGgSkTd5WJ8KCjkrVmlLBI4X+UhaalDB7eHh7JZlAmVi
u52DFKhQVOI/t7r67SfGXCpbmgr/AgzaYJo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVmc4Fm4XR2hQSRGiEKE/IkLGfZ/sUfaeDw+eJ6PskD2yt6yEQlmVrcjI
jshsoSgUCilExtv75ZzrXGf8xqfDZXNd146KgoLC6F/4f+ZO2M7POTmIXvZV
Nn3leYfr9gmcciY/wVQjxwJL9r7DL7wfF/CTm7Guu2ZR4vxb3CniSqIlv8Yl
p9ajOsvf4u7YIdVV0idcp3lmdhi9xS+lQ599Jy3hNBW1KG3rN7gnacz1G2kX
i22/flfXNIIjM9JepohSwK65nmNG4QgWJGNTsScUcOaEr0N67Ah225t0062E
Ep6p+p9YNh3BO0riTct5eyDG677Gvo1hzNLmq/Ajbi8ICYjEV0sPY/XGvZqz
pMOwZ3Q+78DwIBbdtVllXj4MVjK++wsbBnEsp1X/aVkGiPskwG9ZMIg9bOo9
9dsZQCbw4+x/XoNYcdalvWbkCNy7M3hQ9MQg/vxjwtp79Si4PXPta3YYwJzb
ddnbEixAo5rj8VquHx/LsVtmuskCzXXzWhzM/XgfPqoo3MwCrXwWyrmLfXgp
6NqCpQoryCh5u6O8PtxEzSvdYsQGT/Zev/qZpg9b0Ce/DfFmh+OcCw23PvTi
voMS+6ktOOFkU7FgyMOXeEiDMaPfjxNmNZcsDke+xO+iFs9kZnOCcoQuexv5
JZ6meagoPM4JB9zzQ++efYm3to8HGZtxgdFz+08s5d347OLGWpkJN0z88rtL
2dqFI/sbpw0MeWC/rCCjHUUnjqfPcuf04oHAX0kpTjMdOFXdi2rhNg8IzH3k
ud3TgXM7hTmDRnlgRlh+VPV2B65tyjUr0eeF3tuRByQEO/DM4+ChHd0z8FL7
iQ4NoR3LJyi1PNTiB/tnp0ycP7biIPXq4qFr/FDwPXqkuasVN9GcTtmO44fO
36QkoYpWLO1HYa/3ih8UT6ZfNg1rxWJXG+h2VQWA8sZFudX/WjGPgqiRofxZ
IJdXCzAFvcC06+yL1BcEIVTP7CevTAtWrIx5e05fEKbuN1EX8LXgEOfNFlN3
QZj5eCb64rEWvPPlbUp5hSCIMH75rT/WjNcHki+aCwvBiGdA9yWFZvytZF94
FZ8wOEWbdCecaMJ25zYPih4UgRxCxHj09wZ8eSyikOWkCAjE1i3zdDdg8Qgm
OYpzInC3ItZrMb8BU38ScXqtLQJLgSyTh8wb8P14Uo9zqgigmC++Af31+NOP
kVslJ0QhkDFLb7rhGTYpe7J7+ux5MCNr2EjU1WEwlkunkzkP+77rNlzOqMP8
1L3CvzTOw3h7slWMTx3+YzZr0ep8HrhJc3VBsnU4jY7jOaHiPBhkn9hUaq/F
ww7R3nelxKBQuVH00FgNviJg95NZRRxumd7kRzzVeDPGs2HCUBzamr2yntNV
46LF8PACe3G4mOc0YfyrClNXP2A9f0scmieMlOZbq3A9+nbpSoc41PNKlzsR
q/AZfcfkUIULsJOfzDJYXIkpAl3FlrEEcLx3oz6rUYEfTwVv12pJwFX9ylun
JCqwmWJyl7+VBMxQFNwX5qrAtfurzOgCJYBgIfhf5no5dkr9HXqmSQJmf62f
yi4sx++Lb4yYy0pCwpHkE5i2HFeO+Hu+lJKCpN6hSpPKR7go3Nbms5oUZAav
pYjFPMI5Ehpaf02lQIpN5Mgl20c4OoNFQMhfCkRyWQZWmR9honnVeOILKbDK
qaBuDijDx6a/KRirX4RDxSmJaUal2OuXHuNXM2lQcHL7dFewGDsVSO/uOklD
3+D7v850xdjGgOs7S4A0iLPovrs6X4Q16xY71POkodXt4MKXoiLMdzPK5/G0
NMxS2cqM8RXhd1TNk57OMtDy3DqzUOghlmE8+4Q6UBboOc/dEzEqxP2Upi/7
EmRBKfVFQpJMISb8jPqSlicLvqX+iJmzEIcNzB0XaJWFiqfpp6PnCnB/fHHQ
FRo5eDRrSXc8oAAT6AR002LkoJRpfX/Oo3wcRs2/ypeBoI7xtch53vuY+bfR
4Z9FCLx4/cZrDt7HRV8iBOqfIZCK3PphtHYP97V+tbg8hsDgmVrhWtc9zBz8
sNPlJAatJ99PZzndw8XbZzKeFWBYNb3316ghD5P+Jt8tNAYo8dzNNRvLwama
39t8CACCXPaLLLU5uOWe0vwVMsADn/0ye5JyMIvqH4m1GwAMJaurFio5uDvV
YkA5HeBWjuSRM7V3sYAw/55vowDDt2keDt3JxguERvJZvUvwuaTeSepWFmap
Zk7YMb0Ej7vT6ETts7DiXpeaIZtL0HrV2UhbOQtnP+Kmuul2CaJN3GWo9mbh
y5sRd3qTLgGepeMTjs7Ej1J0+50GLsENXaHhgPQMfL3zq9iTK/IQVKLydOBV
Gm6BMkdBQ3mw5P8at/44DTM0uOQXW8pDts6wl1JSGi5/ssFYcF0e5qIv1BoY
puGVDLqVjCR5MGK7QJT/fBt7OZ4rDxmVB5OUloNclLexH8MNQUMLBehVkiAX
mqTgV9EytsN2CuDIaOasDSmYg4YiW/uaAuj8OZ/NzpeCmzYi6TQCFcDgYszL
46vJmOJL1jy+pwCq2yIVqcnJOLSmqUhgRgGI5qYTocNJONqUlnfbSRFoU07v
nnBKxEiEfm3OQxEmO/8w7TdOxD9pGLve+CnCEA+h9pBiIjau4LhaHqsIHcqH
2YnsiZh334VHxDJFeDAo6W2anYBbaogXehYUQSbKLtvUKR6vMbxQSndQArKa
+9NzwrG4ZLaTOcxNCVSavzk30sVii+evvrr4KsFpBVfkOReD20nvotSjlaB8
kZ1oUxiDk5qW+raLlcCVxC8gdCoGCzqdNLSdUwL94o/TxmzRmNh1016UrAw2
+0iqdUKR2Fb2jObadWWgXFhrbmSIxPYVAxcabijDtu715dlfEZh8h5dGKUIZ
dK6/Hc2rj8DXrr/ON36gDLP5j0Qfq0Vg3+OnpwKnleFl0lYn3bVbOJnUY9ZP
UIFycFhp6Q/DqeMeCilkFfhmnhw/WBOGb+uc+s/YRQXi+IzpKe6G4QwZj82p
QBUg76/hqHUMwzmHT2au5qjA6s2oupADYbikzvUN+4QKRJkWaAdeCcUv9rLq
OJqogmbHnja2b8F4Nl9Y/b21Kkhd+y9ueCAY04OigoqDKkhmcmeVPAvGxt7X
L5y+qQoOUUafKmOC8dK3DtaxbFVov/VtlE80GHP0uH1Wn1SF+oumDCHBQdgn
9pX7WZIaDFM84/3hHIBz+D87ZVxXg7s9Yx6WygG4vX3djtZbDeJOkEX2nArA
DNvcxp8j1aAyq25qZsAfP3T2kc0qUYNTwmUr+yT98ajmGZoDi2pw6bTAkTh6
Pyx6JChtzkMdeJj85d998MH1+97yd/mpw6Iqr6Fvgw+WpxBuKAhTBwuu+zfk
s32w/tLYJ6tUdTAwf/ifoqUP9uqTFHhTpQ7lDj+M90174+dRSw2tK+rA1E8T
7rR2A6tSWU3dcdGAw2c91z0ueOHBjRp3H28NUFQbcQxl88KmP+lpjYI0IDAS
Eit3PbHjZP1ZxkQNkIxvV3fr8cTxTcwekU80IGV8Ucbd2hOP+PbTei5qQKjN
N32T2x6Y8EtOUNPpMkje116rOOqODzJSDIx4XIZjzIxz2ZtuuF6k1d3M/zJI
d55/UzTlho9dU24gx18GHcErK9zlbrj7m6Z6aPll6K6YCL6j6YZFPlqRn/6+
DOdUm8V9klwxxcvgAm7/KyBdWljRK+SCH31VUC0OvwIDIUrMt1hcsCkt7fdz
8VegrLDJzXyPC65WiBaTy70C5gEVFM8qr2NyU3Kr0YsrwH+17ZvGwet4oCp/
MpZGE37Q6rEGvHLG93I62NfjNOGs6u1MMVdHnG0u+NYgTRMMzoJN1xVHnMGW
klSdownyXKrTkWcdcXwagdbtiSboM5byp047YN/4v0vfBzThHerQ7jB1wLoB
om2fj2oB11XSHoLWVUxtefdqf6YW6FzeXv5tRMK7J6h5hO5rgcKkPdvwRRLe
fO/wMaZECwLyfvG/O0HCywZSemoNWrDD80bQcNIej18Zlm0f14KZ0ffW7I72
+EMO9b6Jw9pwT6hp6kGEHa6Klx4b0tWGMzedPzqOEbHNnUM09YbaYMvBqh7a
RsSMRZ+F75lqQxC/QGBdKRG7vIgOuW6jDVsBzfWefkQs+PuDAL2bNnyoonmq
dIqIC0xueislaUPEkx5NZgcbnMrznOnpa20oF7GTSDtqjRVEE3HusDaEPkiv
ot0l4BU526u33moDnRBeSZgnYG0j+kb9T9pgl3BH9vsLAqaPNrf9uagNHOrS
r7pdCThsaavy7CEduLb1c3251Ap71Mtp372sAzvTvsnjlha4xrSL6r22DlS+
5akIlbLAa5vaNccMdGCbYnnSnNEC+8jYssVa6IDBeeL1gk5zHPA8etr3mg68
KWO4ECxqjiOa3nobJ+qAw/U9CxcZzHBWq+u9oyM68Cym8vXWkjEes/mrp/VO
B6TCZYqdXxtj9j3htDHjOvAfeNPsf2KMcxQyHKlmdGD23CKp6Zoxzm9vuvBz
VQdkqitHOZaNcFknXU//cV24erbtYtCmIW7uKVyJMtOFYoW/TmRBA1zJMuDq
b6ULf+24GjMZDXCB/eayC1EXek+OB8//0cfRVFpLRo66wF5Y9XquQx/rS/9Z
4L2pC2VPvxqZWevj+WL1mRdZunBnzCpw7q4ePha19HbjvS4o6Bp61wrqYtq3
rEY/JnTBpH3CP4FZF2/wKL6ZnNKF7wFeoaEUuvhjS8ZI15wuhB1Sons+ooOL
/1wavL3xb761KsAxQAcjcmqPKKseRDBNrD98o42vqlxsvGqsBynbpzUDxLTw
Ij9rR4W5HgznJwlrHNDCbgc2Xm0Q9OAklbiX5pQm9ut7Oh51VQ9Sl/xOrCdo
4kQ9qa1iXz14eL91o3vpCq61kpSZz9aDxhARpvPPLmMq7wvPHKb04D8B6kpF
V3UcYcL0onJGD1gejAubaqpjepnV7s05PaCQyOi8+586Ztqpfhe9ogeF7Uz6
j2fVMH+Y+J+SPfqwtSdRa9FSDWslikku8OqDo4syb62RKs4uEq1xdNCHNXOj
F2/Jyrj7PbE795o+sJLGmXs0lPHvA2ljw276MP5S6/hnYWWs4bxJKXtTH/7O
0RmErCrhTdE2TfpYfTivfsk/IEwJmzTofyt7pA9DTyPpZYsVMXP/jROLy/qQ
8iTvYyy9ApbfLRbmXtWHgdLm2A+/5PE1kfFLhhv6oDTShlXH5HFnMpCbKA0g
1s/1UGiJPPY02l8Tz2gAHiqSr13V5fHIZJbmOXEDqD8eUMiQeAkn/WoMdrlh
AJ/ncmUVRQFfG0q0Nr9pAMyE9aZHHIAvVxAvqQYaQG+pyi/hA4Bpr++n5Iww
APHC6u2lToz95vWDXqcZQLNszjEFYYztpxYChGsNgEO79YQHDcKyr1n9vv82
gInrtIeiRmQw6+PvZu/+GACXOiHpY6UMXottlmnfMoCPNHX95kkyuELd7u8d
akOoipKsHNKUwWc6y301jhlCf/poW06vND7SqOJTImYIX91ZxOJfXcSzJZ5e
ZDdD0GEeK7w1L4kNOXY+FnkZwvduMYmzvZK4I+GWypyvIWRmUs+ulUriAo90
FodQQzhac+TVgWuS2AY9q3dMNYTbbwq/MP+WwB8Ht3au1f6bJ1l5Ju+VwKN/
QiM8Nw3hzF6eyVp1cazoSL9cs2MIIyc1GE+IiOPqiVTjNSojMHu7y3+fSRwn
txYK3KAzgp6rLFdYpsSwdmxXrze7EWyxCfrk+ojhV6foGPyQEbxJKc1YKT+P
25WTM0JCjOCT3BuKYElRPGPf0Od7ywhe3xJfduQWxbQR01Tu0Uag1na/3OWg
KFbtknAmJhvBcFkdb9cXEfxKZeyS4n0joJXpcytIEsHDqjwLNK1GYFHkHkI3
fQ5/Vq+Vi6I0BrZ1agJflBDe4/jJLZjGGAa95u9s2Qphnph9RT77jWFvNw3X
Dghh+15TRocjxhAmKyISviGI5zV2Z9W5jCH2cG7oXSdBvHJZNZH+kjGI8Ua+
7jb9D1NqfficEGQM5v2SPA8MBHB3k8FpjzBjwGyJyzKSAjhReJBoHGkM5OJ6
WGMRwJyHuqc5E41BgY2q6e04P4a+mtmKXGOgleskqdnz4yCNpPnhJmMYFucU
bA3kwxSqqivHt41hqW7Bba6XF3fXtZ3fojABy48qOU0VvDiRD7tPUpuAyulK
sap0Xsy5V+J3Eb0JGMQF7dkk8mLoPL12kd0Eyh8e5N/c5sFBirsbZjImsHAx
MqFAkgdTXKqlzPMxAebECwPFLdzYVPFrzzt/E2j0+VuNirhxtQpL6pEQE/AJ
nLL9lcCNyZq+Z0KjTaDKWz2wwYobD5ohDfs7JhD4kCTWSsGN73t1pgo2mgCF
Z7v7LVUurFj2hu8ZhSk41HzSrxs7hXOe7P35k9oUwmn0bspUnsJ/KqXqz+43
hW+HqwpWI0/hsmdZl7OPmMLFQ+e+H5A8hZm6LF0DuU3hXW//i4rbJ/Hs1Gy9
kqIp1LloRVabc+DI4+tXhiJMwaYXHWw7fAKndnd/aY0xhYKSNvNPi2w41yfL
pyrBFB6lbOef7mfDtWNyhanppmC5u2V6Oo4Nz+SGbRk+NAXqAq4Lm/RsWJ6f
sXSs0xRE1+iZx4+y4i0poX0zNGYgPoYfi8odx/vmd+6O7jcDpvl8rV+cx/HR
OwNinQfNYCrVT+Et9XF8dtvd6iGTGfClrHrT9DFjkxf1tVd5zaCZ0qhkzZIZ
16qp2i0qmoHrc42v+6KYsIspsXU91AxIEmssH34fxYdy5ydlI82g8e3NX0kf
juKyL667wbFmsBDi7ujUchR/dQqSpb9tBu+8hQMjY49iy8C7tZwPzOC5y35l
4zNH8eWCtyVq3WZQG16oeY7AiPkXNVLu0JuD/KNDMskLDLjz/HDFJIM5FJ2O
aVQbZcC2N0wHeJnM4TEpK/1kMwPOpbh6sJzDHCho3tefSmHAzEdvRbQLm0Op
e03GTVkGTC3VcvOH9r97ZqthP/kP46lgcVt82xzKbDrpWSvo8RnmQ/Eumf/q
5yF7KGLpsUPJ17p7d83BZqr4JzOJHv8eyqKjfmAOnt0SzcMc9HgfD2VVd605
iDYip5A4Oizc2Uep+84csBycCvQ8gH0PkHJtT1gAn55AC8F+H27OgZe3T1kA
BfUewxHlfZhajO1X52kLWPyUWu3Ctw/HmfUpCwhawGT6+23uub04r0xs8Yes
BfgFVp4kX9uLuzQp5G5YWsD57wb3VIJo8bGUzA9R9yzAK70pn6qFGh8YPTro
VmgBtbfUTP4+oMYUx+O7zIotgDWYHxjjqfGPrJBqoQoLiMnzPJRlTo077zvG
D7ZYwJnTdSUH/+7B3pVy8qyTFqBpnMtrL7cHTwxOFRedtITA8qDF728o8chR
87wkbku4OFFqTH5BiXsM3qT5nrGEwx4dNdullLj2fU/oZWFLOEj1pN8zmBIn
TlVZLMtZgmnnME+GECWW/xl+RMrCEvxbaR5FR1PgBwxnfbruWMKfDL3+yrId
JDxr8oc6zxJMbiDW22E7qK4h6oZ8gSWsfb44VGq+g7rt5zwbyyzhWoV5mOfB
HTT/vMitqtES7tx71eDmuo2ErvI55X6yBMa+zwfG5LdQ9QseqxunrSDpgElL
7v5NJJuu/7GazwrkuSNuJX/dQB1OYRYr/1lBquTOaEXHBnpzfNrMWdwKIhYS
uTxDNtC6c74xUckK7ofG/dy78wdJs3HrapGsQFh9akJoex29cDulxFdqBZD3
RWeXdQ1tri4lsj+xAqxb1ke1u4rEfVrGj1RZgU/zZ8w3vYqKAq09tuqtoHVj
j/3Q41WUGJufP9hjBTwitJqPlFYR4QEfld+8FThxvbqv6/Mb7X5Pt/p2jACf
W/PdDNZXULZwEM0XZgJw8w6tC06uICkXcukECwEqZXtaOV+uILdfUutD7AT4
EDyfb35nBc1uvI9v5CFAB2f5V65LK6iflr0pWZwA60meJzqSfqIczjx2OX0C
SJXGVkcpL6ND0aLdQoYEcLKzVTkktowCf7W6nzQmwLX3dIIlp5YRoXOmZ9eM
AKfsxZc0V5YQt9N/Pq1EAtwMYqN0MF1CD+pqR1XcCWAyQ620X2wRPdbsi9dN
JsC571FCAdTf0cmnltIKqQQo9tz0/f15ASVwLc+IpRHgnR/zz+QXC8jlN6Mc
UxYB/C5SZ6gELqDzWcYLb+8RYHQi+3b01jyqnfmiYlFBAFbedL8rO3Oo0W+T
gjxAAJb1Zp1Yjm9o7cnscsgQATZLlrDMzlck8mVo8u4IAQaN9D4wfvqKCtRK
W4bfEaDuvygpmXtfUTSzeRCeIkCm08U8B76vyLC8cZd55Z/+Jd/a4zKzaOlL
0E7HUWtI7r3OYRwwjfiPOy9OMlmDiFz8Zj1xGtmom3z8e9waTEbSCaA2jd6U
izaJsltDRt0oe+WxafTc/7P/XR5r6BeeKBV89AVFHlfc9rhgDaiLa9h4+jPi
0ti7ddrIGvh6fW7bOkwh8VGFITYTa/hTbJ6pZjCFlK2Cio6YWYP3Ew5xVZhC
Du4b+ruW1mDZvVuVxDyFqu8sPPpgbw26pNJw3fZJpPz9tVWSlzXk7f1Q5cIz
iRziMtp2blvDAoNxc973CeR3fDRzNd0aJrU+Sll0T6D4e0dcvmdaw5xSWqlS
wQSqqolm/3D3nx7+XwWZ5hNoa8LPs6bQGkoDuyhVX4+jBGFrPqcaawj02vRN
eD6Gql8LxLwfsYYrf/5qXq95jxJPvyjcfGMNNdwfqUpT3iPHG8YtJ97/86+v
mOGo23vEfSpi1WLiH/+uHBXSufco4dq01ecZaxgj08exlr1DDgdzxRfWrCGa
49gPj0dvEafGsY9bLDYAMZyZif2jaCun9A/HCRsgegcwfK8YRW9X5I9iDhsI
6CVyOd8eRfFZrqrBXDZwt+m03ifzUfR3rr+S5qwNCKYz9gf8GEFvIqMiDsnY
QDW178cgphEU27kjwmlhA2fWWWbUAocQuM6KcljZQIIzJVsmeQj9PtF/ns3a
Bka6qASodYeQuetd8WN2NvBOjVdLiHcICbHLSu1ztgEG10aG7leDqN/VBy/7
2cCP2veHqbgGEQPH7yst2TagFVQCis9eo/auMc3GHBv4ybPw3ST5NfJ2a9Oq
z7MBulqCVa7jazTZlaxTXWADOSXvHj89+RpVuIkaFJXZAJVUQO7JiH6k233N
PPG5DXTXV+4JJ/ShFPc5B8K4DaxsMJScF+9FbMq+rnofbaAqw/SN79FedJ+F
zlt50gbmmyZs51d6UGWjYLjgtA28h2sLqLIHDex1yf2zYAP67l1uT8/3oEPZ
a8OJf22gyWD0QLv0SxTZvkfuBRsRpIKKH1DYdyGG9FSFanYinDCwCB9X60Lp
V3nVH54kgibdjsIHoS704JCKURw3EXJE3Rul1zpRh3G0q8lZIihR8vPHRHYi
qh8MD35eJMLgrYxjylUdyI/p5GFuEyI0USd7MnG2o76K/abYjAiuklz3R2na
0UnN1QJzCyJ0JI4wPl1oQ823XkmnWxPhgSw7/Ze6NkT1x9ee3uEf/kmra690
2lDEh7eNa75EcIy7F9oR04qSc5OcerOJoH2QPCt0/AX6IuNf9y2HCKWxGTe+
ULxA4u/IVLT3iKC/NH6qdr4FjTJABhQSwZvdj7WyqQWxhCy21Twiwmflw04U
5BaUY6txIq+JCLop01Ylgc2oWICmx2OSCG8OLF8eo21EQ+yX/jp/JkKPDJt+
2JfnaOuwvyBpmgj0V/WtjVueI8213/Em34iwrGtfGeT7HP1undZDy0Rouc0u
8mq5AYF5+8ReCls4Q3fUgHumHr2LD/2ZdcoWivdHCgcsPEVUIc3cqVz/+q6V
F/n6nqL/PP/qxZ22BbIuj+jq46cowMy9NpDPFg7e/nNm1+0p4uEn3rQ9Zwus
xw7u7dyqQ9dfyNMIY1ugkqG03WSuQ7S/KVlfWNrCiUOu/ZO2NehPeUb8NMEW
WML3ORWp1qAF53PU+4i2wEDLp3BbsAYNfDVf0iTZglwW/euJ39Uoa6yuY/y6
LcjMmdXwRFQj4TZntz9BtkBXszpvVVmFDJPf957Lt4Xe4GtdRtyVSFXL5ZJe
oS20DSmLOx2oRDL0e+u8HtqCd+Jj4byVCsR5S/x+Y6ktdMwMsNu3VaB5nwRv
jWpbmL146qidfQUKsFbiJXXYAsdk3CJdZTl6KFIRkPPVFpo3E9SXGx+ja0w/
N+rm/vHJfr6HM+0xEt8U8RxcsIU9d6WvhF57jFrayh2pl23hWefsjS+nHqN3
huXGDn/+6U9DN6nCH6F9/k/OS+y3g32/Ao6EGJch8stHs31n7UCjnPTfNHcJ
En78w/qroB2c7RwaO0BZgn4nC01QnLMD2cpSW4tPxSjI/NGwmJgd0BSqHQnP
LkYZS2UtmTJ2EM5RpPOOpRh1M5Vl2V22A6P0WFkL1iIkYFOiue1sBznhyRx+
Ug9Q913p8pXrdrAxk/3gPscDZP++58g3VzsQsWnPn6N6gAq0F0aGPO1AXM7F
8F1fIeLEgmZF/nYwRbbhErcrRMzsj0l6cf/uVZbmt2YWIKo3FUHFZXbQP1Dt
qsCaj+4dkf+c8/jfPt/Le+eo8hFcGVJILbeDc9by9ZIL95F/+wptYLUdPLnp
yHqn8T76UykWp//cDr4KDrSVEO+jxYSazN1eO3ABi/jX1ffQmNqzSoMFO3Dm
U9zQd8hD8loFxp4/7KDljhvfiH4eKtFP2EldsoOhNELkdZyHfK3s1Ed+2QE9
lfHlzWN5iM3zyGfdLTsoyPcPrQvJRcZ5V49oH7SH36r1XGYoB71ZY3VRP2f/
719lCJMYv4PQFjWzg6g9MH6cqaqru4MeUC43RInZg8JEbjM55Q7you/c+1LS
HuiHVJxMNO4gJm63XBWwB8nrh3mvNWYh/Ss9/Yo69nBDElyESjLRUL6vEHa3
B7R7qZhckI4YKWqfSXvaw7EaiPSPSEd65j+VJG7Yg8x/kQM1Dulo5BjZUuim
PWwc8viRIJqO3oYbJJwItYfeJ7qxMy1paJwk8nM92R4mLrRtLs3cRjP/zVaX
V9pDV92HGGvVVHQmkutSWbU95HeAevK5VGQ/bd73sNYe5rpEHaaYU9G37OGZ
nHp7eJ/19+KHmRQ0f/AFc1yrPdgeO7XvfHgKWly64311yB5Guc++MXmZjP5U
6chyr9hD7SRTUYJ9EqKXkug/+vsf/zMB5RU6SYjzORuBZs0ejr726/gum4RU
27+Eftuwh47ffjmPjiahzBHP3seUJKgWVO4zbE1E0quZpjJHSEAlN3daiCcR
+Ul89tYXIcH70nOKMitxKLG+84DyeRJEarLV6vTHoQJUmi0pToJyeyKklMSh
V8oeLWxSJJi63jOSRoxDHEa0+6YwCVpEdm5mvY1FTTfOpjtrkSCsI/45qSsG
7T51q7l1jQQvmZTWGtqj0DhtZcx9FxKk2djcl8iPQvX6P62b3EjAT9cxPx4c
hTyWrx9a8yJBydkQr1Ichb7xOZPsAklA0/QzTL0xEg2lkVgVE0nQyWD0htAS
gQo9zP0pK0mwXRMc4zYdjkJa7+hxVJMgE/vv/dMVjggMYwIXa0mwsmuVcL80
HLGVmbxxqScBlpY7YO8ejuK/GJ6bbCXBK36avHvU4chbV2eqaZgEQnF4rlUo
DGmIKCv5rZJgNuj1mGNmCKIYHaX0WCfBkfMmF96GhKBaH7smxw3Sv3+W5Y+F
UwjibguTNNsmQTzdcelGHII2DdoEpGnIcGBXVqL5azAquQmH/hwjQ4mEPtTI
BqP9XdJv3cXJcKg1+jbzr0DU5NiT4ihBhk640Xr5VSDyYDDVJkqRoa3rzVZF
YSCaNPF5qStLhuqQG637TALR0+91DaKKZJis+1s29SIAkRkv5C3pkaHId2n8
SLY/6rI4d9XRnQyW8r/TV1xuIkYiueGuJxkU54U/tWvcRJbkewcHbpDhSG+B
y8szN9Ga29FKcT8y9NmBB3nCF/FErm9uh5EhTOEs/fplXxRU2RybmEaGi89t
Fk9e8EHSe7XLa56RoZ7Ff2ec7wa6RR9F9a2BDHKf3TL8991Ag0da9dmayMCz
pl6oOueFyOziGwGtZGgetACLUi+ULsoir9pLhstnRTN9Rb3Qb7PJ4Q/jZGhf
LmgyVPJEYM165uAnMkjotF4O5/dEMfa63niKDO5aFcsf6DwRt2s7e8EMGdY2
mu9vDnkgnVtFds6LZMDvW1/RED1QdsxUXe7yP783Es6QVDzQt0S2A0MrZLhp
/eDrj/88UNCd2McS62TQHXfodlh1R6/yOiiubvzDf+/lR/jgjo4/2NG98/ef
X2yRLb7N7simVLKwb5sMFpVPrZ8VuKPH5S7ru7tkGPjrf5492h39Dy18Ok0=

          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAAZv4nr8kuSUD3nNXS+IjzPzERgJbp
dEpAYO+x0gOO8j9g8z0sTmxMQK08c6vLKPE/oZ7FHPeNTkB2DxFSuIfvP7OO
OtvSUlBA8HEQ81oD7T90uj1QnUxRQEn2Gkzb2Oo/v8ql8olbUkDmutuaJK7o
P2lHOb1pWFNAdIqIddvQ5j+cqDG1a2pUQJSsaQhM9OQ/kfO9gXB3VUCaZS2d
QkbjP+aqdXZoclZASe63ezfU4T/ERpKYgoJXQIOyWPFMYuA/AU/a4o+AWEDE
Ak19EkjePwBBtgGgeVlAU5NWFfQG3D+IF/dN0odaQP+w7ElZxdk/cFpjwveD
W0CcFC+xWdTXP+GBNGQ/lVxAvh4kfOLj1T8Uk5naiaFdQCYhf3vOI9Q/phAq
ecebXkBR45wHOqLSP8FyH0Unq19A08UQ8Jog0T+eIKAcPVRgQFW5mx2iqc8/
vXz6AGjQYEDfgPCo40/NPyFLB/wjV2FAPl1cUF31yj+0zymL2dRhQMaXbxjo
7sg/jMb+MCBdYkCx22d/xejGP5Nz6Wpg3GJA9QCdev4qxT98FR4PIlljQF1O
PoDdlsM/qSkFynTgY0BZ+0x7ggLCPwb0ARnBXmRA0HqKGpemwD+nMLF+nudk
QJ6rz8NHlr4/KWKqTv1tZUCRVeYmLSO8P9tJubJV62VAoAMLNI0Huj/So3ot
P3NmQCH9FPgE7Lc/+LNRPCLyZkDzmxn10Bu2P/+4crWGbmdAc+Gigul2tD9L
MEZFfPVnQMsggJqU0bI/x10vaWtzaECEv7LLCmexPxJjaLuddWhAZCWAjPdg
sT9eaKEN0HdoQCAtLWzmWrE/9nITsjR8aEDe/T2Fyk6xPySI9/r9hGhA/KXh
Caw2sT+Asr+MkJZoQPgcabrTBrE/OgdQsLW5aECMzzuisKiwP4YMiQLou2hA
NqOY1t+isD/REcJUGr5oQDjDpRIRnbA/aBw0+X7CaEA9xQefeZGwP5cxGEJI
y2hAc9xq9WJ6sD/0W+DT2txoQF+wrfyVTLA/QGEZJg3faEDSL31Y5UawP4tm
Ung/4WhAq2/YsDZBsD8iccQcpOVoQIwNaVTfNbA/UYaoZW3uaEAozXJTSB+w
P5yL4bef8GhA2loggKcZsD/okBoK0vJoQPVix6MIFLA/gJuMrjb3aEBxvzjN
0AiwP8ygxQBp+WhAVYKe0TcDsD8Xpv5Sm/toQGc5aZRB+68/Yqs3pc39aEDB
25RsF/CvP66wcPf//2hA7YJoKvHkrz+q+M8Q
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX081HccAHAUsjKVpZSVJKVXixNR0ecTuWwezzQPF+Gc3/dOnh8aO52H
kotS2aQOnTwktdwOFYnuCi/FuLt6pa6l26yoveShXCm17Y/36706Mt6fraOl
pUX/z/87lcwMDXqZo6bsgeJd/hT0GW4xmBtqjnEOOozK3ClwLXK/dcF3PW6v
ogcedpgAts2MIc3QFjfFepXFxI6BtzV7wmS3PbqNpLZJKl6C5H5mao+TEx7b
OaXcx38B2xdvaJjLd8bEEUZHZd4wUB9OldcEIYZU85bGvVdDfNeLzQ3ersh2
K3q6+PYQHA3RWzu7fxfe6d0nTO1UAav7p2gaoaOutsnLEf4gSPVNGTHBHhgv
tpeJ6x8AbVFWyWjKd5j7WuDMnFZA+JTLRp/9Xrh7tLYnp30AKis6zTTHfLB2
80v+Ibc+aDy+TaXw90Ox43yTsvM9kNLq4lfuxcCcvCyX6Lou6LhbMylg+mN/
a21Oovw2cHZvvckJ+h4NzjWq92ZKoayO1hzDDcCrX1s+yi1sh5NTN7MTDuzB
tskFp5XtrfC8PjWNJP2AqlVhpUtE1+AO/VRpTk4gHn8VNlfnQhNo+z7+sygr
CLP7OX0rHSWgtfOqtig9GJcpty/UWSGG/KUab8WREOQIGX5WNpchIYQl0+Qy
scJY9qlVXQfqbPso+GUvOtf74XhbDXxVfOaxoDIUj+huMnpgUAW1CzekdwvD
MCwzg/pdIQJp0ir3dZf2odx3XS+1vxwqzEVmLgHhaLz6UtDE2zNwkzejRQbC
0W5T9SqP6RJY7an/cU1gBJYfuai9y/RnaOq3Lnh0PwLN7WgP59w6CYVdn2zN
QyPRqcpCXqNXBMXJo9zwJ5G4zv1svZJZALwlK40sglkYLxoYcbLJh4vWundT
nrFw7UZWtv76w6D3RttUGhaF97111CGXc+CC7W8HK15EYeZh3o4k3yywjqz3
mY1lo764u3rjCR6ovm2R7HnFxqOkmDPPOR0UVRnfQHI0Gsxvkg8bpcG7Roaz
xWQ0xtHHVMvTkuHz9aTmvDgKpQPH22odEsHTlu7Oe0uhev1gq3JlHHSH2nBi
kgl+2fYk3a2UC4tZ5EZ5KsFMVbMpX8CFMFJpOHCAIJtj/I8sgwvTScYSex7B
6uu/mrBCuWCZr5mZPUSQyyvT113DhSxJR+GJEoJ/BHhn3GvgwDZ9P3FzC8GY
wniJWz+BvAUCnZEbBAUDc4wzpQTki2QBy9sJMu8Gm7Y3EiBm9u8PygietejU
CywlcJq2zNXjHsGuHRPjf0UQeMN8pnz8hGDK61B29DQFGGFqZThEMCQjwm7Z
KAUF0f4/gppgYI8RS66iwCLxjln13wRXaJ4/DZZSwMirY8eOEZwX87BXVkhB
WYH62rlxgpLX+W4NfApGTiz/QjFJUNjx6OP5JAqyhIVXtmgIKg8prURBFPSK
OrU47wmOCbcWXfSkYGntJ3/hB4Jpri3WrTsoiLzkWNM3S1DDdJ2U0yi4Ik7Q
fP5MUCGYHB63pOBfdT8Lrw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
I1JHBv4HnfL/6Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3k4FW4TRUSSHxESJRFKlpJked+x7/u+X67rXmuSPaIUkZBkS5ZQ1rIr
RUiICFlTkr2SIvuSr++fmWee88yZc+avmaOOF4xINFRUVGr/wv9z4e5LFcpu
7LCa3t+7dvMP5tuuSd+W5gKffDa9Y00LmD2D9PvAZS74QXU8lD53ATNgNhWx
V1zQu33j5eGIBfwrzPOHnfpBKDKLpZnSWsD1tIKyDebcELuJKa0Dv7EtU8Lg
tQAeeKv5Kffsr1+4c5/0HlpbPmhlfrieUz2He7X3p3QF88E9qIsTjZrDQ1Hz
x1PT+eCZq7nAtvUcnqR7rCL2iQ/C79Vd9aGZw1vbnGEW1kchZfJa41OjH/jE
/PpKsSU/OEQ/OLe28w3f7KqbNDUTAGrV0I7F6Bkcy5R2ic9PAF71pBGLSDM4
UcuP5sc9AXjWr7orE2ZwZosYX1i/ALiqb02cXZ3G1fWZ1oUmgnA/auUAF3ka
Tz252vvX6Dg8JZV62BtOYaU41YbH+sKgmyfzO1N3AodpVRb0egpDyunBw/ni
E7ie7tjd7dvCsGL/5cMo6wSWDaZyNn4nDPFpZaUDA+P4jMuLvTsaIvBczNF1
1nEcCyhLmpspnYCEqvY5s/CvePcqzzztWVGQKdQJ5Gn9glXKbw2Km4jCmO+T
zpZ7X/A1j40Gq0uioFof/LzO6Qv+OzF4t7RMFB6I+gXH7fqCV7sTztuInYKV
sJyRKpVRPFvIcKNCSAxeJz8oKuj7hEniG/sk90lAxa6I62LCH7HOSGQe12EJ
UJ80jRXYGsZSkQcUqMQl4Gz9xTqn7mFM+0XC/b2BBJS0MaQ2Bg7jh7Hkdo9E
CYgTauz58n4If/nZF1F4SBIepWRqqEYNYsvipzvHTpwGtRzaqMRT/RgsFJL3
yp2Gq6tqt+b29GNh2g6xP9qnQd2r/V7YdB9es562bfI4Df+JL4lbZ/XhpL28
Lwllp6Gn2D3xPUcf/uAaHfBA5gw4+k0cJDB/wLoipAUOdSnYfOAWlyLYgzdu
+b74bCYFqVeevspj7MH58zdu5DpLgXK3gdbnX92YtvLRwdMRUmCn9cGpvbYb
16JZRd03UmCu+STsnlE3Pm7ilhCufBaGemcdPNneY6rQi2d+Y2k4zlqwvSL8
Dj/5enW7Wl8aHC/Li1VtdWBrlYTWEHtpuL3J/PNZdweu3lNhvTdUGkSODBPi
Ajuwe+JS+PF6aWAxlzVz72rHwwX+fTby5+BAkqp69PW3uLwvxPetjAxkyfu0
3zvSivNvODmOa8rA6gFJbum1Fpwhra2/aSUD6l0Gvgd7WnB0CpfIqRAZaD/U
f+NxeAsm2lR8im+UgVvy2019P95g9slZZQut8/BL0Kmcra0Z+/0x3j9jLQtV
bvmvNEqasHuu7M6OuyzIBW8bXb7dhB1Nj85xXZGFvw+09k16NGG9mvk3Wlmy
cFU7McJMvAkLXY4KfDIpC24bPulVlY14iObVmK+HHBwUW+liftuA5fafeEob
Kg9bwq2G9SfrcRe11dvOOHnA05+zddfrMGEhaiIpSx5SYu+rSrbW4evd3zhF
muQB8ewz/UOsw12xBWG6dAowPrXX0Tj7JSbsFTFKuqUAt3yWkphOvsDXaYWX
hVIQfKz5VjTi9wxzLJn/t5CPQFvSwHBZ9xnOn4gUqX2O4B3ImRsLPsOdTTO2
OiMIGF7yvPzYV4M5rj5u8TqMITKTLoXxXA0u2D6e8jwXw19mY9dY+mpM3kx4
kGcBENptla85UIET9eZeBxIADvX/uWVRU4EbslW/61L+1SJT5ckpFZhLY016
xR+g46hQRp51BW5LtO1WSwa4YMvYsTpRjkXEhHfN9gMkxk9tnd0uwz8IdZQT
xopw8samgZRBKeaq5Ij7a6UIhu911ZqkS7EKvVdVr6MiLDecn/PnLcXpJfw0
l70VIWJUJq984CnW2Yi833FHETQeXasZYX2KS+4adbl3K0KVCZeOcVIJvtAy
c+aprhJMJ0R3PO8rxA1Q7CZqpgRaY5EC1o8LMcsLr5wCOyUQb9M4qxlUiEuf
ru/PvaAEEov0AXuOFuLFlL2LKXf+9ccNRzJ5F2A/N/HSa/1KILeaUfP0aD4O
ZvEXNbNVhnFp9/iTlXn4XbSc0weSMnxxf24fEJeHeemo0g08laHG/J3CLrc8
XL9+c692qDJE3jwd3sOfh6km0r7jbGX480FuUuVeLg6vqs8XmVKGITL3K7Eb
OTjaarfgtrsK3GlZ7vGMzcZIgmnlm48KMN6qIlZ7Z+MFuv2tA8EqMOSlWSti
no0tynhdSmNU4B2ayU7gy8aCDGdLiMUqsOhQNE2qysINVcSz7T9UYPP2OerS
zky8wtKomuyqCp88hWKsutJx4XQLx3VvVUj6GT09mpWObV++m/EKUgU17QjW
okvpuJk8FKUVrQqDT93ZD3Kn4zv1vzq3C1Rhsr4lAbvex6Luh82cvqlC+E3O
fjPONExsvewsSVGDd0cUtz5kJ2Mn+eN6KxfU4GmFGz0OScbOZd1nX/irwVUN
tYpxi2RMuS9IpxqpBhbPZ2J7WZKx54X3ORaP1CDVv3xMKzwJB3Ee+xo6qQaj
ZfUrxt73cAK53bqLoA5Lk++MEvzu4sRPPsp3Keqwceyb90WLu/ie4ZGTFl7q
IMqiKx0qexenyPlsfA1VB2J+SYTgTgLO+O9w6nKGOqwP5YTfi07AhTUXB3g+
q4O9lMyuloI7uJH+oKGbpQacN7FSS6aPx9M5YlrDDhrw1qakyHI4DjOBirK6
qwYkDPuKfcmJwxYBF84eu6wBCtwW1Kvn4/Cv2TcHR9I1IKl5J0zTNRbztnuP
a41pgAxLpOzGxxgcGPPu0gmyJkSde/C3bi0KZwiPu6dc0ISE7Y2fRzujcHPz
Kml3gCZEc4pxvs+Owizb/BbjNzWB7CsouksnCj/2CJRPK9SEH29p+d7k3MT9
esfpGOc1AW5lNWgQIrEka1jSNx8t8DHS2pJlvIFrGQaFW4O14Mr7pJNK365j
JSqxF7nXtcAgOWF3SNt1bPJr5It9ohas/DodHBN5Hft1nhMZqNCC9OSvBXsY
ruOXUb9eNC1qwdCK5GuZ/eFYg8b+630vbWgp+W/TXvMq7lmvuhQYoA26A6Hz
GmJXsdUC027zMG34j3nR1IbtKnYbqz2xP14blr7v86ceDcOx9Rw+N59qA4fZ
Yp+CbxjuC+ra7TuvDSbVHm9um4Viwh8FUT13HfAfph77SA7G+/ZTdff56MAh
Gne3B+eCca1E0yXrEB04vuI8UUYfjNk91V5QYnWA6ib26Mq/jNtm9bTCS3Wg
Knble8t8EJYYtac8W9IBtxWtBIgKxFRvr+byh+jCUGr295ElP1wyo6xRcEMX
UhXLrn/p9MNWu3fPicfqglvJjrHgYz9cqRx9RiFTF+rOO/T4WvlhSn1Ck3mj
LijKZIscbvbF3RU5YzF0ehCddq/5VI4Pzs54w7N6Ww+GC9c/Btz2xuk2ooOm
SXrAUafAHO3pjVO4796pzNCDXP3Ivi59bxybRNjt/VQPyp91NS3s98ZBsZu/
5rr1gJMj4Ovd+xex0RXJ1+Ns+jDd6t9BVe2Fae0euHSl6sOeMd3pIm5PvHOI
VuDUQ31wMh+JDZr1wBvDrqO3CvUhTkxqJr3aA/82lTHWfKEPrW6jgR+NPfAn
3Q/yzZ/04ZaeAO+JBHf8MYOW4fN/BtDGKbOYx+uGK2JlR3qNDODkqScid9wp
2PE+M12tmQFI+FgUJKpR8P78cbFsKwNI5biq8IGPgr0ao69dcDSAZvewM1QD
ZCy69FGEydsAmJp5Pf9TJuNcy8sBqncMgOXPbFKVkDNOFHh54Nl7A6Ac6mbt
5nLCypLxOPODAfCucHnFrhPxooKTS8SgAbg/NHQL+UjEBuZMdSZfDCDabWDP
XDoRM0XbOC3MG8DrZ1ENuwSI+PqvrfITzIZwoVld67OsI/apVTB4oGMIHfHU
woZRBFxl1UozbGAI7mkqyx4eBLyyYVDFbmoIRw0PtT83JOBAOSfuGFtDcF1r
0PvMTcBXXkZPBnn+63806ZZkZ48j6wcDLOINoeFJSdxOgy1Oa7qYzdZnCC68
wkOZzVZ4xHHTWH/IELKOKtheTrbCPLtu7L71yRB0Iop35bha4QzlFDeaKUOo
8a4t72O1wjnN9WcXlg1Bb9G+tYJoiYtb9rZ3cRpBxu+/HUvsFvhVe95ilLUR
TMnUf9QuNMXlXN0XQ+yN4OvYvcfiN01xrvPGby+iERgGxAprOpviaBr9X+Zu
RtBzpmTp0DFTbCK79kPwshH8qXmWei7TBH8v0JpqTDMC4vEzrTtZxpg96tfg
+rARUBuFfS1vM8S7Bw+a//xsBEdznOkqig3xuoDKwNhXI9Bn8kZf4g3xaENK
X+s3I3i3cvljraUhLlhT7Lm3bgSXXoeA/08DjCiJ7ZIHjUHnh6dsO48BdlE/
X+diYQyfPQ4Rz5zWxfPCB9+U2RiD96nyp2QqXezNuP5unWAMZefeff/dpYOD
O599inIxhuuvfGZ33HVwvLHMVkGQMexbziVRlWjjavtzct/TjSFnf/hDVnkt
TBNw9rnrV2N4rvbg7ECCOo60PNBYPmUMu4O1PLNd1TGT3HLbxjdjECBNnC9T
UscH/lYORS8aA7FM6ln6HzUsfF1qrXCXCRgkPitNslDD+vFnzv0QNIE3uzmV
K8VUcXq+ZJWbqwlYHl+8UsCgjNuGiW2ZnibQcHuu7O2sEl5iTBr54G0CzXJ9
qkfeKmFtjw1q+csmQEMmi7hEK+ENydd6TDEmYNzvDJ7/KWHLFyazxSUmcC2i
OmCRXxFzdPkfmv9tAr6rssb/7jKstFMgxr9sAooGPpxZjxH2lPikaLb+bz4x
wUnLB+GWBKDUU5tCVeeYaRYzwr7me6pi95tCyb7Yn4rqCrhvLE1PXMoUgml5
OcZb5fCdP3VXvfxN4cbot9BlmvPYszfeweayKVQOqWmNjchgnTKiokaoKQi+
yDvOUCWDd1/YQ80XaQoXoi2S9lFkcPB3k7D3SaawwWPGOtV9Djt//XFFrNoU
Kk4en/Utkcby7w8Gzy2ZAtKImqyJk8IHn8xZD62ZQsDXvqGkC1J4JeaVXPOW
KdhNc9Hk60vhMi3S5n1aMziPE5/bs0jh4y2lQdrsZtC33KvAk3gGs9apBxae
MYMeI8GwyNzTeLrQ14/ibQaKub//OzUjgc14/47m+5nBm28uK7faJfCbuAj1
b0FmwCLKY3XoiQTO9Unmcg03g+UAToN2XwnsiJ7XuiWagYGXsQiBXgKP9mz9
9aw2A/XjKcM6zmK4fy080nfDDMTZPdoPm53EKm5Mv6v+mkFufXNnj9BJXPk5
0WKFxhy42dYVPqyfwAlNeSL+e83hyMkuw1cZJ7BBTGtHAI85nLziNn1qTgS/
O7KXJRiZAwHZnFtOFMbNagkp166Zgwl7bdcw93E85fyiMyjCHP7sqDFMrAri
3ZGTNJeizeHwk6D4Y/2CWKNV2oOYYA7RD/ef0owXxO/URxRVHpqD84jOEd49
gviDhsAPuqZ/+J8E9QxaATyuVa0QRW0BP7z9j/Ty8eNdbl+8r9JZwPjTzmRB
Wn4scIshP3CPBZCDLV0fzRzFzh1W+11ZLeCU1gKN+NOj+Lv2zrTWUQv4/Fdf
xQSO4kUdjXgmRQvICjrsWu7Kh6n1P47HhVkAdWdi9ugLXtxWb3rM57oFvIw9
7Np0mxfHi/UQLW5aQHAGZ9VPe17Mx9w2yRdvAWVSlw8epOPF0Fk1XZZpAdV/
PFhrjHhwmPad7x/qLeAKxIqUb3BjKg2NRc5tC7hfFVY5HMSF22pen96isgQI
6jSaMOHC8UL40hitJfCbtr0XEufCfPTSS/lMlkBNrbNgP8mJoeXYynkeSzjX
+nhvuCEnDlPZWbeWswR267fr6tIcmEqxmjor0BKC9t44EirEjq1UZtqHQixh
8EeCbiodO65U50pkvWYJD1VpQuYm2DBFL+h4eLQlZCox28pns+Eea6TtfN8S
1ou+r/kfZsMP/VoSRessgaf+xcK+Y/uxSvGA0HMqK9CY4bXTM2LBGU/pFxZo
rUDPWrLzozQLXiuXqT2xxwpeZfWR7h1iwcXP03TSWa3A1/niW6GO//CBVruL
ofxWML65mGG9yoynv07XqqpYwezkjqQQYR++ybmq2xtpBZOUwWK3C4w4sa1t
oumWFSR9UAr8ocqIMwPTAivirECnkehSzMOIq0cU8hKTrWAk/53g7/Y9eCrz
+pbZYyvwwJTjPif2YCXh/UUjLVZQy88YwLlMj7dkTjFM0VlDuY54iEw1HWb4
/vdB/x5rmKhfyuNPpMNs97vPtOyzBlfGXj0lbzp8YvuS/eMD1tBwYOAtnzgd
tmysrXYRtAalzzciDItocbWmBmlexRqmvQqH5Ep2YS8rYtNquDUI6uIr7P3U
mDnz+5j8TWt4us+I+VU1NS6euLhzNcYaEjaKzj9IocYz7mHyTPesgSP2Jv0f
G2psF/qgmu+RNVxlOkm3OUOFdXIHCzXbrKFwLWdKkp4KC89r373PZAPXC5h3
cXRvoZbTH8rGWGxAMYxlaX/mFnLyt+oWPGADjhCJiZ5bKJPKZV8prw30ZDx9
ublvC3GwRUQ2i9lARRCjxLbBJqKVabj808AGwg6/2ds+tY6+XpVywvdsgD+x
zo9KfRUd52CO9Uq1gRqGJms+vlXkWjhTk/3ABoRvl566ur6ClnrT9tI+sgEW
FPhzV8kKYhCgrmirtoH0mFUJGs4VJNbSSW00ZAPZvqIzN1aWUBAjOdPpkC3c
4TzZ/WdsEb3KgLf3jtgClz63sXvjIqI9w/2n5ZgtIF7eoIMPF9Ft6041EVFb
uGkhbc/itIiyis/M/5S3hYcaeZLk7wuoVY9Kwd/OFm5J77/tSbWA2O+mfozK
toW/Q8FshMx5xNjP1uOdZws0q9mtBRfmERVnbKt1gS3EMhkPKMA8+pl2rfJU
mS0kKNeJKo//RC0P3WJ7GmzhbMXUcpXITxRQrqB0cMwWYtzOKIy8+YE+93wt
yD9sB3zmA8XnJb6hPjabrDv8dqDTHTyywfANtZsOJAUdtwOSwr4T619nUfVw
e7iOmB2YfxKqLkqcRfFfK2x/K9iBZtKGz+jWDFJauMEqY2sHMu2MX0SGptEj
lhOBrfft4OHE6ciFmkkkNm25RptlBx/Fx+kXEydRzYsof6VcOyiVnEw65T2J
2py/+dYV20GlfxPB5NQk+v4y37uizg76Ij8Ymz2aQKdchNwzv9iBy51PZ4cf
jqPKRgF7/2P2UEB9/57p6zEkn2wyWilkDz28+wpoH4+hN+7XbRdP2oPvMbg7
ET2GBjgnrT2k7AG6PR+IG4+hVY8cC6KqPXTNN9P+6viCZLn5jfTJ9nDqMYs4
g/AoavQ+oipUZA+xphkmB/lG0Mbyr3iep/Zw4l3ejsHyRyQV2PCJtcIe2M8f
FX/X/hHlhzr4bNXaA93e8Au3/D6i+JicnJ52e+jnt2k62jOMCI+EaIK/24Ox
oVysYcIQ2plLtp9lJ8BDtStenEoDKF0sjG6CgwAuXgS5rcMDSMaLUvSZiwBS
Xq8cuLb6kfcfmdVeHgJQQsley9X9aHp9OLZOgAAO9Tcdzov3o67dPPUJUgS4
3m62lCHShzL4sngUTAigLdMona/ci5ijJdtOmRHg7vGcNFehXhT6p+nSYQsC
RN31yrfY24sILVPtO9YEUObOya/+0IP43U8GNhEJoEv15IW3cw96VFPdr36J
AI4ug58q7najJ3qdsUYJBGDcQ5DX5+xCh5/ZySonEuAU652F1tlOFHf099SZ
JALQZd16eLO2E3kt7Vc4kEaAwIpMhTG7TnQ6zeLHYDYBFi0T4VPhO1Q9NaFu
W0YAYZ/07kf6HagueIOK0k2AEsqnqhdv29DK0+nf13oJEHO74YVQVhuSmOgd
e9BHgMGNqmvDfm0oV7Oo4cMQATy76V2YBNtQNIdNGP5KgOI413MPr7cis9K6
HY5FAnR1XKwVNWhBvybC/r5hc4C9z5RufD3QjIQ5PebHDjhAUQyzq8TSa+So
ZTm6yekAzvcONdT0vkYDpZL1kjwOUPd7wcYz/jV6GTIe8kDAAa7G2OReZH6N
bnKqbPucdYBR5biGa+xN6Kg2/dYxcwf4qbZ3xFmtAUn1K/dyWzrAj4S2ojnR
BqRmH5bPav0P1890TmNrQK6X1k127ByAUeyt1nDTK1R5/0fJR2cHyHWoE+zY
rkdqc+/t7/g5QFm6EPvM1Trkejvl9d97DsBcSrf69lUtCubsT11OdoD3p4Ry
vt+rRbHZrF5zqQ7w1vfinI57Laqoiub5+MABPNO8qvoO1qKtz8G+VXkOEF9W
+HzK/zmKE3MQcq9ygMmaP9vl+BmqfC9ya7jvnz71KUbPzSoUf6wxb2PAASpo
bVWPDVQhN3+LhkPDDvBkXq2Zs6wK8R+JXLb97AANxzM6XpKrUJznpP34lAOI
q9xv+D5YiVz3ZUr9WHGAxdFU8SuvKxCfNvvoFpcj6Gs5y443l6GtjKI13kOO
MPLHsOHlozI0uKjEhnkdwWt6zq79ZhmKTbuocfWoIww7uWaG6JahzW9d5XQn
HMFxkxPJDZeigZtRkcxyjpBKqv+Z9Ocpimn5K8Fn6wiuZ+Mz2GqLEVycluS1
dwT/7pM+sTHFaOlQ12luB0fQymW9YmhfjGwuPpBiJznCl43RC0/oitEpHnkZ
Bg9HmA73vVtjWoS6Lgbi38GOUEgvx51HU4hYeJd0G9Idga3DmLAU8xg1t47o
1WU4QukmLVcO+TEK8H6tX5vlCIPTU7S3lR6jsdYEw8pcRziW27uXdf0RKvOW
NM0vdoSw+tSS95RHyKjN0yb+pSPI3JmXHTDKQ3cvfXMlfHIElpx7y2l6OYhb
Leii8agjjOe0KqRL5KCHXHsD1MYcQZUtQOLd/hxUXid6Q3TSEXKXaJeqBx+i
bnqvzLUfjvC5IYexlPgQMaevfIjfdAR1vweiC+HZ6GbzLoVGbiJkr/YKP2zN
RCzJicqVPEQYE45bUkrKRMkuglqPDxNhx/dlvAQpEz1iVje/zU8EzpUuq9+7
MtEbi+iLlieIYBl/l2tZJQPR/GR5tHCeCLFw36CwLx0FHzj8H78lEeITM1Kr
hdJQZ9keK2xNBNrXD+webaaiw3rLuTa2ROhdLAsae5+KXkW8k012IMJmcONL
ycBURLMW5MzkSoRtdY4o2fcpKPLjYN1KEBG0jJ5E+N1MRgmZd9w70onQuBa6
ECh6D03IhdTMZhChlVnfsYvhHpIaotDsziZCAMOrdbupRNTPAimQR4SDeuur
pzMTEde1+ddVJUTAlTzlaQcSUYaT9qGseiKwJzF++2/fXVQgQtfuM0aEy0QX
7cMCd1Avj+KmxzgRNM2tQkX23EFb/4WIkieJ8Ml/hsN+Ph7prSzFWs4S4W26
n6nG83i01DRpjH4ToSmz0WSvYTwCm+bP9FROEOU7b32OJQ4NxYYvpB1xAs8r
53TuCsYgmmuv+BOPOsGzy5LP9ddvoZO+m8a3jznB9gXpasPOW+iK9aXqUCEn
mE64Hy3gdwsJCBMvO4k7QcTy9e9r7dHoQqMSnRh2glG1wbRdV6PQ7iXqg412
TpBYdOzSzqFItFaaEjtJcAJypaRd1lIE+uEhTstA/MfHc9/2emcE6p6x+aVH
doIBXr1StrAIlDZS8+bTBScYucKtpjR7A4m99vBeC3OCGF7t7ivN15FZwnCH
eI4TZHyXaa8vuIY09L0UjfP+6Y3UWFiMuobkmOhr/B47AZ7ar2rreg3xRUg9
rCtyAmvhuZnek9fQ98C4AO1KJ2BiZNM/V3YVXXFQFSS/cYJl14HypDdh6LFE
2ZWMGSeYl58p3ha4gjwPLKzXfHMC85VstjuLIUhqQ8K354cT5NEx9Ac0hKCG
16VutL+dIJtkwKRsG4KGzEotXNecgFPm2ruytGDEEPL0tPQeEuCdS6/DBC4j
ytuS6c4TJKDmm42L9gpAYk9+OsyIkmDojey3fPUAtJRw6jOVOAnGY3YV7T0S
gMJsSj6cOUMCrrcVYeld/ijlV3FDqhwJenZVHR2V8EdtB4rTSDokENisunKF
2g+JOBbqbXv8qxvSui53X0JtD2RLFy+QoIR//6/YskvIebiddfYiCbZOYuve
hEso1+BHX68vCYwtrQdnTS8hPixqnR9CAj0x2hztUW/EwfOEbHybBEs3nzfn
rV5ENANlYQXFJLAy2Lt3VMsLZbMqjWc8IUHYE2U5L0kvBLq9yomlJGAo3XPi
BJcXCmle3B1aSYKCmMprwu8uoLXyM7dNXpIgti7jrg/9BTQfV5W600GC/rMG
MSdjPNCI5vNy0x8k0P2sv0jX4YqU9HMtfH+SgEXrXV7pA1dUaBL3N/EXCdwp
JRL5Xq4oyJ6k1feHBPUKH55f5nRF3L6s40ZbJOiYOMbxiOKCLLJcWA32OcN+
h+21u1wUNLBy0EtL3BmCW53q7haRENqi5XCVdAaux3etv0WQ0CPq3y+izjjD
FSEKX4gjCfkxtdC/PecMJGnLi7bcJHSA3ztTHZzhVX2d/3KMEzLRbe9SMXSG
VWlrB8EQIurNCTqFLzmDwu4bWl8jHNB+qurnsr7O4L4Zwyvh5oCMbRZUpf2d
QWeDo6VQ3wH1sVPsTl3+x9/FcYX/oAMavGEadyjcGc5/uT3A9oSAPpElFlYT
/vFhqSNXX9mjqZPTlaXlztButEt1vcEGHb95VLG40hm8BiVeRN+1Qc6TNp2P
q53hEG0Qj5OzDZpN/zCVUesMpRXFw3NMNuj7vkaO203//O4qe69pa43mf90P
cOl1hpMH+M90MVqhtQpDef5FZ0i5vc9xb5I5YpKR7mJbcobvdxqHr140R3wv
uQl0K85wuYhzl6SuOdJongifXXeG3NHHLDJ05ii1z7fjCTUZRiM0sr/4myHZ
5VQrOVYyGM8zzWqQTVGw9HiAiQQZPv/C1VLuxii+toVR7TQZZL/O7zusZ4xy
UVH6OSkypAk/YpaWMEbv1HwauGXIkP3l15/fS0aI13w3w1dMBo8NVBQdZoTq
/U8ke+iTYQhUaliyDNHOM++qCE8ytDMUsdBt66NPu8tvPfQiwzHV3lmVVn1U
a7LgUO9NhnMcYRxf7ugjn98XmFf8yBDFpXuaT1gfzQp5kEmhZCDSvyx8Y6GH
epPIB1XiyXBvjJJ8pF0H5fnYhFCXk2HQ0sNA4JsmutZ035i3kgx9QiyRaXWa
iMAyInK+mgy2FW1TlgmaiLvYcsCrlgxv3Cla5fKaKHbCTHysiQwWmmNrLxM1
UICR4df6D2SYLcsS6zNUR9oSaqrBy2Q4WlhJ+rKlgqj6+6l9VskQepRRcHlE
BVUHkurd1skQ8IEjDL1QQfyvr5+z3iZD9VnNIdcgFbRh+lpElo4CbpzPnx/d
VEaFl4F5jZ0CYxf+3nhDp4z2tMoOXpKigNW64rf3Coqo3q39rps0BUbD18fe
8CsiHxYrA6IMBRplX0pO0yuiMcvAt0byFBj6uziT2wvo2VzNC0kVCgQms39n
cwVE2X8265fxP/5Iuee0ihi12oq7uF2iwLkGF88JY3m0n0h58cCXAjWdv8YM
+OWRHSV7X7c/5d+/nznIviCHVrzZyqWCKVAYZC6cESeHBG6ubmxfp0BZodi5
x92yKKz8VUx8EgXKF1IZuR3PI1l6g9Kq5xQ4SxOdWlsvjSKYomhmX1DgPKPo
l7kkadTD2mTCXU+B9/LTeU4XpBGFR2r9ShMF1oRfrPIflUbJklxKGh0U8DCK
8+mKPIuWrMc+fPxEge07/CyhDlIIHA4e3/eFAusCXAz9ClLolrNRAP5KgXaq
iBsu3FKI/2IzT+7UP39p44Y6fWeQYUQ+yWOeAi5R6mtzWmdQ+q2vNZm/KRCd
/HjihMgZNBvPzdi7SIFr208HcujPoLD7MU+kVylQOdTDrvrmNHqX9YbKZf3f
fgz9w9xzTyPOR3+N7m/+81v2Waoz/DRyLDqX17lNAZ8GxQ5n4mn0pNRrdWeH
Aom2vd9llE+j/wF2v91A
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jt6jKv9FAu4Xe8ytrrLRdV8M32K7BPwPy59FwA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXk0FHgcAHAk4qVy5GhnE2Wj1jbKto7h+005y4SUQTSMMT+GaESULLHC
2KbY0BPxkKJFjkre5MiRVBi92vDC1rpGiTCZyO7+8XkfPf8wN7acjIyM83/+
X1+wXJS/uddaW7e4sWfHFNxfY6QbSiohSxzFndGZguboimJD0ghLoTm7KUpT
0E49xVEg3RAQ9YdUMCaGJ+kih3nOEFQ29D6ZLhZDp0Vi/RRnGsxLdhvw9cTw
9MrAqXHOCniZTz5X1J8EJ6EifZSzHr/bE1w2YD0Oz1X2Ksn7bEFK6OjOh7nv
wUZg21R62BBDNYYHX9eOAHuXVMVEhYrnV4TTXklvwdmIPaNpb4pHHc43fZC8
geqX5yM7zcxwIVHdxe3YK7BU21Ep/ysNebU7kzYsioDzNSOvhIEoJ2kw6DPq
gbD2sT2VzjZY9/H90MVXXZDmpWCwHHIAP9X7tW640wGsjnOBJsQOa/NihlcY
rdCsqOPK9XTAtkeGu1+kNYOJanzWxGknXJWY5mvxVgjMz1Y/0kMO4fJG75aR
mnoozG+jSH6noycIHZ1e10HNJYsBkZsLtkSxNdl51XD6oZVL3iFXlNO/pnJW
qQoan5bMpnq7YXWuRqmVYzkE2ZsLgxhHsMb2ALc/qhSu3zKp4wa74/Z74k1t
U0Vw5bMwIfzMURzX/pZp96UARssiowjvGGrFTPysZZYHrXYZORcueODB7Ah7
udc5IHu4/29BPAPDlWX04hhXQWbfPdmCGE+c3Kfc84KdASlaEmfRRS+sZsrb
zLsIINyL1SJJ9EbDSzn962bSYCTBNACuHseNrdFo9S4ZNDKv9acW+qB11lxF
SHwi3NywI6Yj1xfVqDFFE13x0MzTtd1efgIv9T04opMRC/lbCihW7ky8YVz6
04IgGoSxUhnSw8TH+fZJY8aRoHdQcWmrhx92ph1X56/hQW23Ef/NSz/ki89Z
NiuHQXr7N+oWH388sU5PUewXDJkRE8HMQX9kw6ohp7JAiN24eb2+JwvbH98b
uX6RBbeNVj89PczCmwn73yzlMUFhTlan2TcAazFG+berx6GUejcufywA+S9F
lY/tGGDkX0ZfDmVjoY9H9sc/3WHAsb76qJiNfznopp944QqiorPGEBGI+Qsp
i6X2dPhS40rTnw3Es+xDTR4KTrDygFeXfJKDWsvRc8ZhdnCQamcbO89BVU25
tifa+6HDZ1cQN4LgEOXdbcFJBDUWaciLJKi2+L1jOgvBlxSq9Jwh+CzO3PEy
A2GBp15tGktQhytlVNggbEuRSJeTCBbJf6XaaCHEVzemX84iWEX335maCGCh
6FJVV0+w275XYGBmDclrU+XGGwg6aJ5Meb/VGnpVW9w3PSK4tkNN/e56ayAU
08W4FoK+WvsbeGNWkG2ibePQRTCTO8nMzraCOe/hvv5BgmtKyum+Uhqgn84P
KkMEVyupOsyO0oAf6BYNIwRjwxrsMvtooH+qlVL8D8EmfgV16Q4NXJNvsUM/
ElSXPmgiTBpc54/cv/GJ4HzQzAeWMw3GL29SFs0SZISo9HMtaBCfm16xV0Kw
Nbyxq1CDBs8K2mSCFgn2aQobu2VpoHXzm1vuV4LbroUeVp62BP/yX0qeLxN8
W7uH5zpoCRVV4ZKVFYJnmkd1Szot4V+9wDrz
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxXs41XccAODDs+l5JqTSGY9Hsdw24gwj7TyfTxa5xDjuhOPg+ApjLqPI
0M9xXBrRrNxCHddyPcRcwlxW2nBiexINtbD2xA513G37431edU4EK0iaRqPh
f/7/1IkO7ukNJkqKJ0Xr/FUI3sorEXggdqSLXhB5MUQMLRg12Fug31/7Lat1
ViDTS0ZzJ+wMfpKXuzdb+TcEDCdwGcQKtfW2LqkVLUHfPmWnUE9rbBXKdpkt
vwKGYnLBUowt3jpkNFDp+RLYq0w9h7BzqJ7Cse0zmofy0kFVyVUHXJY325VV
n4WW78yfiViOyHhNE/cLpiHmR6ZjyTkn1HPTsTcSPIUHjwTiDG8W6iS18AN7
foOQsye7QzycUTzio6jiOgHF1YzW0AsuGLD8hjUrJYJrq90pkXGuOL+k/0Wq
ZBRe1cZ+Q6LccFVLc/hg4WMYsMq7kZrqjidixzaZXg9B6sup+ZxkD2RphJiq
VQ0B7XSbVNlFTyzUaDqiYDMAfLrEXpTuheNNA6zt3T6I9Arol1zxRrdPtQvm
6L0wl2IcCN+fR/a3L8NnrnTB4fybUxnlPhgU3z+e5NQBlQc+vjhc5Isiec1J
ek0b9EUdtdSu88MV56miNroQSo+VqTJd2Oh3WbMk9m0TdCdu0sgYGw9zhO85
HmkEdbt92x+5+2PnPbOF0Kt3QTiqm/V0wh/ldRQ5TZk1kD20a3jMh4MljJCV
lopKyI9eusCe5uCNWH5XsdkdSFRSU9DwDEB6Zd39BpUKqNF9/1HMbAD2aont
RuXLQGZNSrnPNxAV1GMMnrcVQ5VhU1LpQiDmVyzqKUbcBF1OrcNOeBDaWzIE
G/kF8Mymo9n1dRAWaPqZGBhfB9HtS/oQzcV3KZPpOkvXYL3F6XMNMRcf0lVa
gqVyYa89qpX3VTAa6OWKrOuywc7QyjLxbTAmyC5sj0RkwLCPQUhoNMEwv4Hf
pXt5cDCAdJbEEjy+XvhzvZAHvqRcbiyO4I6jkQ+7hgfvog41GycSrA5s507k
8eA4X7K5QxEU7l6u3wviQXLzg+zcAoL5zlZ32XI8MN/n2NjaQZCm5nbqJDsN
ePszpBc7CWYO7blfd02DccV+F5Ueglv8M31rtmlAVI03kvoJ6qc4RwyapMEP
jA8trEcI1lrF/COQTYM179knU9METQN17f3bKUB/ZS25Pwi6KZXvKtRTkMVl
xcMcQaU46slPtynQ+HpA9c6fBA9EWcyY51DgxKsOCn9DcMSer8PlUlCcNXf/
1grB3Czbe8zzFCzmqnwgEhO0GZxFFRYFyUXZ9Z9JCDqxmJnzTAoelw3SQjYI
xrfPmP9qRAG9cpdVtEUwB2VWenQp4NSZCn7ZIZjgp18lPEpBfWOkZG+P4HOT
Fz4NShT8Cwk+4Ug=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JhvKQi/hWaHP4sbGZj3uvjWrb+sl/A9s2CM6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAsfLYKDTiU0D3nNXS+IjzP5yoMbVr
alRAM9huYar48j+R872BcHdVQN4N/W2a6/E/5qp1dmhyVkAKb8PrDP7wP8RG
kpiCgldAgchMJF8K8D8BT9rij4BYQCmpkt1jZu4/AEG2AaB5WUBwSqvuYtbs
P4gX903Sh1pA2hsVa6g76z9wWmPC94NbQN9doowB0ek/4YE0ZD+VXEDGF73S
Ol3oPxSTmdqJoV1AQxj1ipcE5z+mECp5x5teQNiqYqFT1OU/wXIfRSerX0Al
7banGJzkP54goBw9VGBACN/lemWI4z+9fPoAaNBgQPG6lmAdiOI/IUsH/CNX
YUDMgZ1a3IDhP7TPKYvZ1GFACMh7K26Y4D+Mxv4wIF1iQOFhl6cfVN8/k3Pp
amDcYkDnmhG7I6/dP3wVHg8iWWNA+Gs6Jd4n3D+pKQXKdOBjQGLiETczlto/
BvQBGcFeZECvQuNEijPZP6cwsX6e52RAoS2eoArI1z8pYqpO/W1lQP/JrFQZ
d9Y/20m5slXrZUApTaGxnk3VP9Kjei0/c2ZAWVal1mwc1D/4s1E8IvJmQNkL
VX/uDtM//7hytYZuZ0Al1CgnbxTSP0swRkV89WdALDytyS4T0T/HXS9pa3No
QKa6FO0LMNA/EmNou511aEC2Y+f+MCzQP15ooQ3Qd2hAWhfC+1Yo0D/2chOy
NHxoQNCKsrWlINA/JIj3+v2EaEB9GXQkThHQP4Cyv4yQlmhA9Rs7epXlzz86
B1CwtbloQEs7ULDibM8/hgyJAui7aEAMUNK/ZmXPP9ERwlQavmhAeG2al+xd
zz9oHDT5fsJoQItBT579Ts8/lzEYQkjLaEC2yYz8NDHPP/Rb4NPa3GhAYjJj
nvj1zj9AYRkmDd9oQEi88P+Y7s4/i2ZSeD/haEAATA4jO+fOPyJxxByk5WhA
KPxLrITYzj9Rhqhlbe5oQGEaE78su84/nIvht5/waEDPTWIh27POP+iQGgrS
8mhAnoXmQYuszj+Am4yuNvdoQLOB4Lvwnc4/zKDFAGn5aECdhX8UppbOPxem
/lKb+2hAPA2mKV2Pzj9iqzelzf1oQD9c6foViM4/rrBw9///aEBswOCH0IDO
P4osmn8=
          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX081HccAPALS3q5HpRMqTy1JZUzZj1on0/K08rd727kKTp37voeibgm
ORyTmFMXL/KQx3BKDxddY2XGqutxuKgNvaZaRb2qRXUdO7ftj/frbceL5wiM
aDSaz3/+f6Q6fbMo0hK1JwY0H3Mn4C7dw8wkwhYrzTzlbrK34HXU+xcFayVu
eSPp6KFeg8Blku5KZ+BEseMOxy0vIMBJ8HaRrzsmpJdm3Ep5Bi39aftvrluH
C2Rl6+vin8BGi1XnTTI8Ud0mT1OWj8DuqcLKhhDEmOIjH6uThiH++nO38wFe
2Bh6iZta+zv8EDZzhX7PVlwbxve/MG8A+OpUoSvxwXLzDy++dNdAl6k1OzbU
D9dM2VlWFPSA63xpyZj4G9yb07PkofFt4E5sWs3csx21qdIF9F1qqK26ZqMt
YKLe/KzDAd2v0Hpkw5CGQ+EeVWDhg2VdIP5pE1W5nY2Wfp13lIoO6LzVMJ4X
zsGCg9P9cbvaQeS7vkMU8i0yJGUu2W9UcKLJVRUbE4j5bel51lda4NhER2ZC
chBaLTHOnGWuhGen939HEnfgqdkPEoavN8NVn8LSrKxgnBPNuDPaqYAZrMHH
R6UhOKCatbY9ux5omy/NqEkJxdeap0vt1LWQa6UN0BwOw8J2cbxdfBUkhPG7
td+H4+EDf23J5pTDo0z3aCjeiaJj927Wp5XAwqKywbzaCLSKOiNp8S6Cxnmr
UtQVkWh/1CG477wcuhKXe3/evAsn39MzTWQyqLKtsdkUyEWNb52efyYXOiST
NNLLRaH46ysm/ENgt830H4fgKGxvHoveQWXBxR6n/D/6ozBm0faZcCEDZNen
GbYRPJxrwo13tkqFoqSxGO4wD+8+UO+zECaDxHLZXPtQPvYLfbQNW8VwyumT
W+IRPtaWNacvDtkHM9/NsO6KjMZn3K7VydNxoGBcSK96Ho3WXGeFRbUInHin
mfo4AYKpvHBqXABD/u0tQS8F2PObaeuogQeakwfXQJIQKUVVeDRw4WMr29N+
XIg3ija+cly4EwxtiaqcvbsxgGF0yiwoBLYxfLwl73ejTd08qq4/ENQRLqLY
JIIXj7UGj5lwwIJPLlfuJ0ihodNLx4ZIUkvvTSZYsM5MefIVGz4kLmhxlxCk
ZR1aKLnPBsdc7aQ+m6DFw4jYnCY2SFs6ZfISgsIB6Rf6ADZsMKWUqnaCcfVM
D04VBTnmeUajlwle852TUlREQd/87sDFPxMMut17diiXAmLjrkvvJvgmUjck
TaLguOunXn63CYKzZd9SfwrehY/cGxwmKH6iqvF8yQKMsv6M/ifBtJQRTtl9
FuQLOQfgEUFjl9EI424W2O+7alP/lKBD79VwQykL2DlNgrjXBFf0ORuX+LLg
RP6jH6v/JrjSvy13pxsLRuWLZ2vGCS6RF9gxlrNAWiE756ElqOT5xUx/YMKd
mms0kY6g2+CNWbrHTLBqnOZUTBE06NTHaT1M4DV/1XBXT3CZtHOO5WUmnFMm
aA0GgtPyUoGHggn/Ahi3Awk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QwMD+h92xB3N
          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YuA568K56M1AXfGaKSNnMZg47MSgXWYgT0WyvvVBMehNYvCqxTFwsigwuChU
FHI8iYGsJQzsenAla5wgAjoyGuoBPxmoc8QyyfGUELD097N6LjHQVVhgN+mI
EFT40WodVxjoctRkhbRfCISeh54krDGwSdF6NHztEKyaPpdQ3MTELN48dvuG
Q1BwETmXuZg49i1swUXvEGxtURzwkGMi2yfRRm0XQWixlrZ39GBihcH0D91s
AdhNZVale/3lqaoaaxECYMO8t6Pbh4l0enFNs5MALLrvKZELYOLW6ODn2ScF
QCRiaXUtlIm01OG6qA5+CCp5Fh2XxESh102y06v7QXGLQVH5Uya+QH4G1Z4P
wjgi2SaqmLiRLTR1hyEf9OxqMOGrZSLhq7lClwIfMPnlVi41MLGkjUCMZ+eD
ZFkeFc12JrYQfEVF8nlhgTDc9/YdE7vLjvgRv/EAknnFdnxk4q193D+pAzxw
jW7kCyNMjGnsTA+q4wEht0b+7PG//deLxVbiecAwLI/m9I2JGLP0dUyBB9Ku
jTzOmGViG8fQfwlCPDARx7etd56J3hOPZ804eCAoNfrhiSUmDoDXMN8wN3Tc
bWKxX2Fi1+UR2/1t3MCdu26U+ouJOoU2B2XKuIFy/2RO59rf/Ervdss73PCw
yHXpzx8minpf3ZMUwQ3/A9aMcIA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzHs41XccwPHDM7TMteaWp7BpMynnyUMLz+cTS4Qzjkvuufu65HLc52R+
RxNRkmIc7FgduYXczaW5RGOaxJ6SDc3tbKNcchyRtT/ez+u/t6ZvBDNAnEaj
wfv+d++dMuO6ulMoLBof3Uxfg4j+heO1tmboUigxT4ZW4YqbpPZO2Fdo2WLp
8N3l1+A3kBRIJxYYafbh2hhzCbqlVO1DXS2REbqc4Kv4N9AVUvIEMWfxXtQf
b3BtHrzXTI8wwmxQW6vCWcN7FkpLHqoLrzKQfq1jfmFxBhqunXwxyrTDCtUR
Jb3sKYj5ydSu2MYeh//dUTGXnoQHg/zVDHcmdvEbNnSqn0HwmS87g10c8J5A
1jt6dhyKyulNoSGOWGz+aC7Z+CnkrHVSkfFOKNvvuHvx1QjMV8bGEZYzNusf
zp/c/xj6LG58z+GcQ0hK3LCMHgSxrydeZqe4oEjZJX8lZgBop5rFeImuWG7y
ec7i8z5IVxbajl52wwzpPQNDrj0Q6ebXI0x1x3m1pavTVj/DDGXgD7c88FkX
41sRrwP25xZMZJR64nif/UGBURuUyX+ROMD1wpSjYtZ5Qc3QzTp0+rOq87j8
1mNM1NgAJRo8dVNHb0zetejKSroPnewtGhnxxkvMRtYV5VrQtJba/uScD0pX
ThvEnq+Cxt90Mp+P+aCNc6OuJqMcsvrf6Wt4+mLHOsvvL08+5EYLQrwnffFY
7xOV4ZUfgf3xQTktVz/crmb8qfM7Dyp0JAZjpv3QIfTML1u8YpBcF1Pt9vJH
Q82yOT3rQrirfz+5ZMEflbSlBKpq+aDjW8nYuRCAwUtes4kuN+GFVVu90z8B
6CRDP+SmeANGb3+jB9GBaBiyGjn1KBs2G+xNtFYDkS6Zu7KknwW7raymtPAg
7NLtFRyQzwBrfYvT7DdB+OqAR2CUXBoMeB4LDo0mWMi1NY6/lQqKfqS9OJag
Cb/aXT4zFbxIqcxIPMEEaVnx2pRU2GDtqzdgE1wWhY9vh6bCp+nCrZ1LBPkN
gxYTZqmQUv8g63oewUxcHytY4cBJKbu6pjaCIkHcXWUHDqR9lCG+2E5QtqJQ
zMOKA08UehzVugjWRc+m8YEDRN1AlNxDcCTsxB7LIxzIp6uYWQ4R9GmR4A5K
cGDdffrpxCRB7rpDZW8bBeijelhmiqCu4gdxrnUUZAYyE2CGoDPuM1svo0Ar
qk/9ztz7v1zxyImbFNinlQdcWCboYs5h74RTUJQ50/LDa4LsGgatPYCCxetq
e0dXCbZWK0Vc9KAghZtVYygk+Pj2grjCWQp+5T2kBYsIWnXma71ECpTL3jG5
bwkmVeVotRpR4FtlxB/eIWhXcJyWe5SCmrpI4e4uwRb5zVaWNgX/AQA/3k4=

          "]]}, Annotation[#, "Charting`Private`Tag$12707#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVVHc0F+4XxteqqOyIQkZKQpLC+15bVvbefIaMENkjo5CdrIwUhSSEQmYZ
DYoiikLIysrO+PX7597znPuc5z7nOedePvsr+gQqCgoKk3/l/50/YftBzpFu
5ECjM95iMY+f04scdSU/xUOXtyumJeZxs29p/nFyI/bQXTXWoJ/HbeIeJFry
Bxyzl3/9adUc7ojtUV8h/cCDi0FJDCxz+M2F8JpZ0jym1zRbePdlFr9N+uYx
SdrFwVWHxYNuTuOo9NQ3tyUogD7XuZjdcRqLkrH5macU4CJdZfcDprEnXVKA
ZzEljFsRb21vTuEdFamGhXv/Ad3y2CbBYwofeuWv9DuODppNAnrLiZNYo55O
Z4J0AHr6X4hkekxgiV37FfaFA6B4kiQhoDeBY3ltuo7JHQR8YenkkPgE9rKv
9TZ8fRDWTB2nvy6MY+UJ99dVn5kgai3o3I7nOB79PWTnu8ICB3gcHhSHjGHe
7edZ29KH4OKGltroi1HMmkNYYAs4BL1qrKgrexTTYxZlscZDIDT3xnokbBTP
h7rNWKtxQpRro2yg9ihuoBa80GTCBUqGP1SCx0awFUPylzBfbvjY3VcezjmC
Oxml91Bb8YLw37F5dbkfuEeTOb0rkBe4z1wWOMT8A/dHzwllZPHC73PfjHgn
v+MxmkfKYoO84EJBFfg15Tve2uYINbXggwOSseG/F4bwibmN1RIzfnBmSkDa
zwZxVFf9mJGxANw48vvWtvVXHM+QeZX3mgDoeg51Wst+xSka16hm7gjAG+s6
0QWOrzi3TYw3tFcARmPz5e93D+DqhlyLYkNBuMZK+1BObQCPl17v2dEXgtWL
sX4ssv1YMUGl6dGl43C66r1/nlIfDtWoLOpxOw7RbobXBIX6cAPNsdvbcceB
drA86CN9H74QSEE0eH8crjtajmR29eIzTnX7dtVFwPaoFeGvRS8WUJIwMVY8
AX/C9cMbgz5j2jXuOeqzohAt7BJKNdiDlStufTltKAr9jdda6V/14DDXzSbz
q6JA/PGcR7y4B+/8/HK7rFwUfsr8NB3x7cFrH5PPW4qdgvKIfPk3HD14spg+
8pmwGMQ7Q0a0RTcmnN5klGAUh0jFLWWrPx+w1rebBYeOiEMf8399fq0fsNRN
NnmK0+Kgkkl/qT/tA6b+Ie7yQVccpO+sBZvJf8D340lvXVPEYclMJ9v+Vhf+
8fvzjeLDEtAY+7UBn+nEZiVPd4+dkISsT7sXGp++xWAqn7ZPVhL6XNzVnaPf
4uPU78T+aEqCFSeLvY7DW7xuMWHV4ioJxgl8wS843uLUfTwvbcslgcc18ANL
+Bv86XKMb7bMGZB9/vXPA4cOrC1CWGRXk4JbRAY+EY02vHnLu27IWAqYMxKV
1ETbcOFcZGQ+UQpeRdV7x+1vw9SVDzklb0jBS/pIyaRPrbgWTSpot0rB+kou
drdpxUKGzsnhSmfhvuZ7Hpvg15gixOPMApaGt0HWKXlfWnDpyPXt6kvS8Hmj
dtC6oQVbKCe3B9lIw+Mbd6hQQQuu3vPMYl+INKRQkiTsrrZgl5TlcKEGafi+
dvKMNFMLHijy+Wwpdw6+ShxWX9ZvxhWfg7zfyMgAge0nn8S3RlwY6Wg/elEG
QmgPqM6UNOIcac1Lf81lwLvh773J4EYck35I5FSQDPQ+4PF+fKwRO1g+G0xs
loFkibh9au4NmHVsUslU4zzwEZtswtnq8bU/Bsy/LC5A0W3zG2lxtdgl/8Lu
rssF6OCwfURDqsX2Rnyzh4IvgDpVXddjqMU6z+daNe5dgAVBh5mc5RosHBDt
Vzp2Ae69/JjMYVOD+6kah71dZeE0VVQ7I3qBZZlPPKUOkYPD1yv37/BV4y5K
8zedCXJgOZ2b7EpVjW0Xo3+m3pOD6IuuXHt/VuGIj1McIi1ycG0LnX2TX4W7
4otCtWnkoUTwXqHpiSpsu09EP/WWPAi3DErekK/EEdTHV4TTEQRssyz5h1Vg
9mWTA4uFCAQfxciwkStw4c+bIrU1CJa0rgr0alfgzpZfVlrfEHC9FWRv5fzH
v/6ozf0IhhaPGyk2z8px0bZQek0+hm9eFvF6v8sw6W9ydoEpgDMn64OMlVKc
ojP7ys8WYGipWJ/8vhQ35alMa5MBvuqc6XZ9UIoPqa9Lr/oA+Bxq5+DWL8Ud
KVYfVdMATkoNTm6XP8EiYsf/m+wFeBYIzekBJXjGtp58wkABlinbzC5JFeND
lewJO+YKIMS4v8yDqRgr07lX9dgrwMgPlcstc0U46wk/VYCnAtB+WGCZKyrC
Wps3775LUoD61r2JJP4i/OS2fpfLRwWgdqrqLj1ciK+0/TrzVFsRZu0UHvw9
9RA3QYmzqLEiLIWkm20zPsQH69wfFFkrAr06v/SpuQJc9nSDOf+KIuydnTBh
f1qAl9L3LaUnKUJtTBcj3ZkCfM35dFlYryIQM27+EVHKx4EHfUSNrZSg0VO4
vjXsPn4fI+v4ifAPJ6ZcYCbfxzw0FFm6bkowlr4lG6l9HzdsRO3TDFECK93u
2aFD9zHFz8xpnKcEXN6ptIbleTi8qqFQZFwJ+u6EHRaYuodjzGkFt12UYS8F
xcO+8RyMxBlWp7yUwTTrDs/5lzl4kYa5vS9QGR78Onz/U3IONi3ncSqLVYZE
JYf8p5CDBenPPnEoUYabo38d/+Zk46Yqh7NvZ5Thnn5Ebx4hC68ebFZJu6wC
5keYRRFnJi6eaGOP8FSB542SRI7VDGz18v0vd38VeLMetn70UwZ+TeqP1ohR
AS23DaGGuAyc1DDfuV2kArHE9jZhmgws6nLE2HFKBaKTWKn8t9KwQ3sAUYKs
CjhfLtV/Xyp2lBPSWb2iCjONp8qt5+5gYvnHs3U+qnDJfE7WqfsOJt8VpFG5
qQpjDw/1LaTdwW5XPjwwfagKBsvke6+F7mB/jmMjIWOqcKKtONhAMwUnk95a
dNmqgVRU3mpLaTJOGfRSuk1WAzvakXSO1GR8R+/oSVN3NYhbleyKDUrG6bJe
myMhajBvo6rar5WMcw4cyVjJUYMjvCWtc7NJuPi5Rx/3kBrccJaNWJFMws10
nHrOZurgwOOmeL84AU88ENMYsFOH3lsKN1WDEjADKCupXVaHT2kur0/qJmBT
3ytnjwWow2jW/srnq/F4frKV81uWOhQFuli8U43HPG89RzWG1aG+T4bx9lIs
9ot9f/UE6SJkGpsOqV2LwTnHR13Sr1yEAO3qBFvdGPz69RqB1vciHHj5Kfbp
iRh8cJvfdDTqIkj+qRaf/xGNH7n6yWUWXwTn1J8vZrWica+OEM3euYsQ5Gmz
kyMehSWYQlOnvDRAWt0w6hf3DVxL/+V4e6AG0Or4njDdjcSKFGJ1+REaQDcU
pLswEokN57/9sEnRgB//nTBKfRSJr3WeE+l7pgHRhaq3nklF4pfR83UtSxow
paz5g8Y4AqtT2YzcddcErleF4eXPwnD3RtVVP19N8DiZc6U8MwybLzLQmoRq
wotzTO0918Ow83DtCeZETdCRnKbx0w3D8Q3sXlFPNeFoofi8zvx1/Nm/i9Z7
ThPypKviNiWvY9s/8qI6LlowH8RIZXE/BDMyU3z87KUFWtbUMze8QnCteMtV
iyAtaJrXlFlRDcGsbqp15HgtMI4LDEmbDcYdkzoa4WVa4DKXaDV5IRiLf7ch
v1jWAtEd6V2nn4GY4s31fP4gbRBuZKEIsvPHT34pqRdFasOMv4aMiqw/Nqel
nT0drw2Nycpdymz+uFIp5ox8rjboTAl9mnzjh8kNyS0mzdpQaX4ure6sH/74
7MFwLI0OXJgzl1Dn8MV5Oa3ca3E68P3TjSsru944y1L0i1GqDqyXbUs8HvbG
6Vy3kypzdKBuUt07rtkbx6fa0no+1QEbu7jrfeHe2D/+7/zsRx3onA/7enWv
N9YPlng1ynIJhM0CtgqOemFq62ynroxLUH1a/acW2RPvHqYWOHX/Esx8Cyw6
ouOJNwcuf79VfAmS5MVK2KQ88YKRjMHFukvw6trl254UnnhQ+5Pc68FL8Ii5
T3w00wN/zaGmHzqgCz/qJHqd+9zxs/gL33r0dcG6dDkxr9MN29/dT1NrrAtj
TSF9r/LdMHPhqFieuS6QJqINuAPdsHtzTNgVe12Y/CLz2e2kGxZd/irC4KkL
wu+jTyTHuuJ8swBflSRd4O13F75j6oJTBF6yvfigCwLHtr9Ws13GShKJOPeT
LjzhOfXw8B8nvCTv6HTjiy7oxnWbl350wromDPWGP3QhyiU71jLWCTPEWDou
zulCfn1eUC+NE46Y36o4sV8PzDlLp2koydirVl43W0sPPBWCDD+xE3GVeTvV
gK4eXJ27K8+wRsCrm7pVrEZ6sEvfPeT5hYD9ZB25Yq30QForQL4jnYCDX8aM
+bvpQdCJY9axPAR8s+GLr2miHsSa+YUpnnbEmS0eeSyf9cAqvT+mzsMef7P/
a3CpXw+UuIw/SJrYY+7/ImlvDeoBJ/UG/ihnj3OU0p2pxvUgauDXm0B6e/zg
dcPZxRU9cGQIuJ2aZ4dL2va97eLQhz4z8s2cr7a48W3BUrSFPtw/bSV4rtMa
Vxz66BFkow9txTunBh5Y43zi5oK7gz4cYeBsrfC3xjFUl+ZNnPVB4Iay1z4R
a2x4YX1GMEAfEg2YOzSirPB0kcZ4c6Y+TK1pUrToWmLW6PkvGwP6wDfJvb+E
zhzTfuE0+T2kDwo62w+qx8zwhoBy3/CIPhw+TXVqodkMf29K/9w+pQ93j1ly
zwea4aJ1he47G/rwujI/j23FFCNyylsJTgOIDhDt+vDbBDupna93MjUAD6oK
V6tdIzx3nLO13NIAgsM/CVn+MMKeezfeb9gawDjbd/foRiMc2PliMNrJAEx1
Lxe6hRrhRAOZrSJ/A1AN1zO0pDbC1TbnZKezDOBNtbzRLVZDTOV7tubyiAE4
lgdWhBrq45tmbM0V4wYwHVJO6j2vjxlkVzo2pwzgwNbxad2j+phtp7I/ZskA
dl+ueNdN6+HjEVLrxf8ZQvBieZxpuB6+lHjm3IygISjQS1OF1+nirEKJKufL
hvDB5OWEUawO7hhw6Mh1M4QCpx5Cha0OXt6b+u2TpyEwClPJaZ/VwZqum5Ry
AYZQ1iITJfdDG29KvNJhiDWEctI56vWz2tisznCy5IkhNBc4iqXNaWL2Lp/D
cwuGYHqK9pBUzEWsuFskxr9iCGN7fxx7QbiI3cQHFYw3DOFqjrWOu8JF3JYM
5AZKI0hij+wN2FDH3iZ7quKZjYDZpyN7zVkdfx7O1DktZQTKvJ7cSuZqOOlP
/XV3HyOop/chqZqrYLeeRDvLACMIvH5T46O8CtYqd1BQDzECUow9TyifCqa9
soeS96YRfCKltetOKePAacPQD6lG8NPjRV2ZvzImjswEi1UbAdOlt+chXwnL
feAMnF02AgnK4XQDJkXMWTpr0b9uBBRPPIloQwGvxjbKvt4ygjij/3Qujijg
cg3C37vUxuBNM97YUK6AhdrK/DVZjYG16WfMMUMFzFSv5ld8xhh2LhoHluUA
nij2vkb2NAY3t5bD128jbMyz873wmjGcmpBINiAh3JpwQ23K3xh0f/UOEmQR
zvdKO3Q53BjUbTSD1MfksT2qqXVOMQapfmXKLRl5/L17a8et2hg2b9ZQdP2W
xb3r4Te9N40hot7ifnvYeazszLBQtWMM2WudhTNW53HlUIrpKpUJfNtRW1Q+
fx4ntxSI+OwzAb6Pd1lTF2Swbmz7O19uE5BRPq9dbCeD3x/ddzAQmQDxhmG4
mfY5/Fo1OT0szASetNg1/lA/i8eJdZ3+N/7h50d6hUXPYtqbY1RXY0zgMcdC
ceqBs1i9XdrVIdkEHvLVv/7VJ4Xfq31TUL5vAqOporT6JCn8SV1ghqbFBHz4
aoO5Es7gUY1q+WhKU2BnMTUR2pDA/zn/8LxOYwocNGdlJoYlsMAt+kK/Pabg
K8rb3dYhgYnvzJkvM5kCXVts4FS6BJ7W3J3Q4DOF/umaP08vSOAlLfVEBgVT
yDFoHDscIY4pL30dTQg1hcIkDeZ75mK4o8HomFeEKegquA/7SorhRLFuB9Mo
UzCdLnx/Y68Y5t3fMcabaAr3SXW/oO4Uhs6qifJcU/jjyREpdPQUDtVMmv7U
YAqbASeaAhZOYgp19SWObVN4xlB6I/y5CO54/kpyi8IMHoWklgXfEcGJwvjq
MLUZcHcXfH14VQTz0kkvFzKYQYUhg3yQuAiGtmOr57nNgNzY1StbchyHKu9u
WMiawU++8gNdj4UxhUI15T0/Mzi0RyG3+Y0gNlf+9bY/yAzuu0RNBRcL4kq1
QylMYWZQwpHD4HRLEJN1/IXCY8xA2KZvoEVbEHdbIE3iXTMIknpXHflZAN+/
1pYiWm8GM7unaZmnj2Hlkj7hGgpzIEdVSj04w49zntItLlKbw7s2qpZITn68
XiFTe2KPOYgs77TG7fLhkppMrSwmc8gKdLdhfM+H2dqtPUL4zaFjSom9lciH
J0YmalWUzWHKivvL5H1eHMWxpt1z0xxmHxdMXHQ6glM6On623DIHdt9owUQ4
gnP9Mv2eJZjDVaLkLMOhI7j6m3xBSpo5UBmMLhW28+Dx3Igt40fmIMXIx+og
woMVjzM//tZmDjV/kuzzVg/jLZlT9OM0FuDhfHLRqZoT00/vZPfusYDEGzyM
f29zYpa7H8+0MVoAYXNNqdaDE5/YvmrziM0Clq5s07ac4sRmzbXVToIWECQY
Ybjw6BCuvqhOmFO2AA2G8IMp+RzY3dyhZS3cArL6JDcc6tnw/tzpYbkoCxBz
3MvTn82GS3567F6PtQBVlkF6/2A2/MslVI7hjgVsf02TUAU2bB2SXc370ALe
SKalrbeyYq38L8UXOyxg1t14O3aABR+f07x9l8EScq2sXduOMuM2yU/lwwct
Id3jS60fDTN29DH/KMhmCYXnvcQNZphwLoUTYxmPJdTM6dT5PGfC7Cw3br4W
s4TOuwfsr+sxYWqZpoDfupbQ+7JxlBR7EI9cl3LEdyxBefa/iLMy+7EQ+/54
9wxL2Ckv3BZm3I8vF/96npdtCTKhKp0mo4x4uSdzH/VDS/iVlcfmFseI6QUo
n3VUW8LWo8Ah5wkGLNbWSanfbwlVB6+N2z3Yh/33knIdD1tBLtPOJoXaHtyY
A2/uHLWC0slfy9v8ezD1Ga4/bcesgDpr/bzYLj2Os+hUFRG1gqGQmijhF/T4
XsmZud9yVqCbOu7mLUqP23Uo5H2srYDMMH4WjtBh1tsZX6PzrKBJZO+HagEa
vLeXpduzwApSTd+vZdHTYAqO+HaLIit4xEcdUDhLjX9nhlWeKrcCmaDsdrEq
atx23zm+u8kKMjq4KP+oUWPfCnlFzmEruHTp4Dlxr//wUPdIUeERa0DX3CvO
T1DizyyW95L4rSHi3mz2lS5K/NaoL9VfyBoChc0EW6spcfXA23AtMWuYnk9y
7LpJiRNHnlktyFsDt7y3qNFJSqy4GMkkY2UNRl50vAd9KfDDgyf82u9aQ2GD
nLq+zg4SmzBbp75nDXuuW91/yL+DntdF+yjmWwP7TNXQ+bVt1EGc8q4vsQaL
kw0Zh/O20fTLQs9n9dYQana3qmVtC51yEnbJ/WENKkdvzhuU/UWVzQI2Psds
gHXaI15CawPJpRl+rxS2ASmZ4sB64Q3U6hJhtXTSBiqbiv8E/beB+jjGLFyl
bMC+VUn5bt06WnN9YOqgYgOPJDoosdg6usDFr3+JZAOhEynss9xrqNnzqIrw
YxvorjEcWeJZQZsr84ncT21gsMPsRTTlCpLyaxpkemYDdpRT71XHl1FhiJ3X
Vq0NULHQDUs+WUaJsQ8edL+1AZGqKbpOtIxsHwpTBU7bwGSTcPsg+Q/anU2z
mWS1Bc2nZuU8XxZRllgozU92W/g2dm0/T+MiknEnPx46ZAvpIeJVco8Wkecf
mbUebls4r3f03KDPIprYGIivF7CFUBtfzzSuRdRFy92QLGULl9ZD/gwQFlAO
7z1ueUNbONt0xnVUYA7tj5HoOGVsC58bCk7ybv9GIX9arh4xtQX+HVHz5N7f
yLZt/O2uhS2MUpyYYr75G/G7nPRrcbCFCkFLgaDZWfTweXWv2lVb6Lo43fey
aQaV6nTG6yfbgqtdcrpQ3BQ68sL6glKKLRBKieuezlMogW9h/EyqLUicN/g4
c3EKuS8zy7Nl2sIfOtFdO7opJJlpOvMlzxbuRQ6tmUVMourxn2pW5baw6u5m
pHLjF6oP3KQgf7QFg0Rfr9jCcbT6dGIhrMcWxtVGpuKjx5H4z57h7M+2sHb2
6Yv6y+Mo/+Ljpk/9tiBlJGyee2ocxbBbhuKRf370nHycq8aQcVn9LvuSLWT+
dthZfP8Tzf8M3WllsYOH20eeCXCNouMcrnPDbHbw/XPkA3mKUWSvYfb9L4cd
dBg63w2YGEF9ZRINEtx2kEAWGSA8G0Evg0aDsgXsYPv2s4NzOiMoikN52+us
HRRnMCbnxQ4jPk26rWMmdvCON/i+u+J3JNWr1MNlZgcrZSE59FzfkapNaCGT
hR080xNP61scQpevbhjuWtuBOMWUPcv9IVR5d+bJV6Id1JY35tHTDCHV2Q82
SdfsQNAVP3nw+Ru6HJf+aueOHYznsfjVpw+gQI7ejJU0O9hbE5WTcG0Axecx
uc9m2AFB3cM9wXAAPauK4f6abQf7vcL4OZgG0NZQoHdVgR2wBM9u49h+lCBm
J+xSZQdxfx9/bY75gio/iNwa+GwHPy7S8Gw/7EWJx5oLNvvs4MpZJd1HN3uR
s49p0+GBf/lF/hwMJvci/qM3V6yG7MB0nWeh8kQvSnAbsxkdtwPbpJbYs+Wf
0WXGXKmZVTuITeg7r9/2CfFqsn7fOmQP6YzK50wO9KCtnMfrPIftoQYd4ZRa
6UZflhRZMI89HH030y79rRvFZ3qoX+ezB8VXDi9LHnWjv1NdFTQn7MGu+6uu
kWI36ouKvrlf1h78iGGFzsEfUWzbjjivlT3Q+yT6R/F2IfCYkOCxsYfVcP4n
H9b+XeThLkkuO3sIdRVb0f7QiSw9sqVYCfbQdW44by64E53ilpOhd7WHUf1R
zxfD71GXhx9eCLSHogU2HrHSd+ggz7J2U5Y9yO4wlpe6vUGv27/p1OfYAx3V
preO1hvk6/nqUu09e1CVWH3JfeINGm5P1qvMt4djMlf7lSY6ULmnhFFhiT24
LL73rbLtQPodbpaJL+3htgNpY96qHd2+OnXZdtAe+qwlWY/4tiIuVX8Pg+/2
cPJFWlixRSu6f2ifr+qwPXTTWz61xK2ool40UnTMHtQlDAIl6FrRRzr33PUZ
e3CkPeeWlv4a7c9a/ZT41x5+/336n0jLKxT1+j/5Zi4HICbusLOfbkEH01KU
KrkdYFm4gnubvQWlOQlqPDriABEH1bmod5vRw/1qJnH8DnA26Y++x4dm1Goa
42F2wgF4/KVZXns0I6rfBx8unneAA2d6UwVfNqFAtiMH+M0cwDHiPPf1zgbU
Wb7HHFs4QMl2e6ZcXgM6orOSb2nlAPt38zrOeTegxhvvL6TZOcB7imNNMzwN
iGrdn8hw2QF6O5t3sWc9uvn1S/2qvwM0PstfUhd6iZJzk1zeZTkAk8lj7ria
GvRTNuj5ZI4DYOojOykpNUiqn0xFm+cA1/8I7e25UoN6D0I6FDjAVmoucVqo
Bh0Km3tV9cQBFn49SrqV9gLlOGoevtfgAF1qCj5aYc9RkQjNW69hB0A3BL5O
BFShHm6Fv66j//x3xDaw2lShrQNBoqQxBxgsEtFyUqxCOqvL8WaTDtAmExMV
uacKLbeMGaAFBxjePJAQkVGJwPL1EB2FI3i+ED/p0fQM9ceHL2YedQTNyeF9
DccrEFVYI38KnyNMwvsWu4MV6KT3X4O4Y44wFx95TGi9HAVbXK0OEXYEI97z
xw92lCOB4w4BjqcdoZT1vzOOTuXoSrMijRh2BPPsM0qT5WWIdpmSs9naEVyi
tvberShF62Xp8WO2jnDK8xtpO7IUzbiepqZ3cIQ7Y+zZ98xK0cdflvM6JEdo
Zr1EWUhZijK/PW8dvOIIjl4KbU8NnyCxV66e66GOIHSpS9GAtgQZJw+8O/3A
Eb4l32bJu1OE1C+5KxgUOEJnfcOYh3sRkmWge37tkSNIvHdu9tUsQrw3pO7X
P3aE7bJEXWGqIjTtl+CrWekI2gVXn+x4FKJgOxVBUqsjxEudKzCweIQeiZcH
5/xyBP5ktz1P9QuQG9vixvMpR7B745ajIFWApDbFvbtnHGF+SDF3l60ANb0q
c6Ze+KeXT/d9ayAf9RuXmV5ed4Sf7FHHVhzyEX3QU0npPQS4V/xx+lHIA0R+
82Si8wQBji/2Pb3zOQ+Jlf62+yVKgHBgPSpQl4eWk08NUZwmgPgRyR99eXko
1PLJpzNnCJATesWn8EoeSp8vacqQJcCrtkTGVYY81MFWkknQIkDe+TubjDr3
kIh9sc62KwHuy3kxfO/ORh3ZF8qWrhDgid0d5xPF2Yg48JZp0oMALVTHSh6H
ZaN83ZnPPd4E+DHZXKQplY14sahFYRABDqY1h25kZCF27lKSQRwBnvEWGHW5
3UVUfeWhRSUEiBpMls2Xy0B5TIqjOaUEoGLuCtt7OAOBdo9SShkBRs79SMre
SEdBr5doQyoJMFl3gOni83S0XnEmzvAlAVa9Q/tKpdLRXEJVxu47AsQOGc6E
nEtD3y7WVBjNEKC2WpO61uIOUryUb+r9+x/mUjw+IXcHFRsm7KTM/8un5tsA
OnIH+dsQND7/IYCNsdiw10gK4vJmGtXf+pf3RIfurFMKMr3nxKTLSASn2ero
D2G3Ud8qp7vGaSJMulnPt/YkIbRFzX5ZggirM1SyDDVJ6CHlQl30GSJ8SGqp
9MlNQtcY2ujenCNChaerab1LEmLj98xVg398ZbLTNn0SMtR+26WsR4TnyXsp
+NQTUc8D/1P4KhFcmnrzJRrjEDNFdc0FbyLwX3vNz5UWhwwsF1WkfYhg0sb5
UuZKHPrMSrY+FUCEGicBTg7eOPQl0ijhcDgR9PnnCboRsWiQJL64lkyE2jia
FC/jW2j85ERlWQUR+rM7x+8djUZCUXwKJZVEKArjJ77ejkLEMcvOR9VEoJ98
l8E2GIUmsz6N59QSIYp8VwAyotA0YzN7XAsR1Moe7X3KFoXm5u/6OvUQIaNH
XbSB/SZaf6Ynx79EBFOdV5zUMpGIQUa6i2WZCJYKi9qbhyMR70suW5pVIoju
1chko4hE6q9/hk9uEOGO+nJNbUcEyvjs/a6UkgT6hV5vaywi0IWVDHNZJhKI
e7p9tY0KR4HSo76G4iRg9TJ+Rfv3OkqsbdurKkmCzD+D6so/r6N89DjrnBQJ
ch8du5D37jp6r+rVxCVDAqbHTxteZF1HPCa09COYBH8PLk+YwXXU4HMizfUS
6d8/qXdViAtFuy88q264kSDe4sNhLr9gNEhbceu+OwmSYm3sXbSDUa3hol2D
JwmIR11Vt/mCkdfClf2r10jw4Xp7wsC7IDQp7EoihJCAb2D6tSd/EOpJJXEq
J5LgXY9v/uDXAFTgZRlEWUEC/0yzkzLX/FBYy10DnkoS+Cy1K9fo+SHbg99E
zleTQC3r1xO3U36Iq8Ssz72WBPvfyul5j/ui+J/Gp4dbSEDxXnPvtIkv8tXX
G2n4RILTlsRqSVUfpCmuqhK4QgIxgpeYjqo3oujtpfRa+5dXq6ZDv4g3qvYj
NDhvkMBw5WxRFKM34n8Vcc5imwSr4/cfmvd6oU2jVyIXaMggMRzC3Uj0QsUB
sH+dlQyf/2pl2CReRXvaL3y5KkWGQckVXLLtgRqc3952liaDxtp7lrvjHsjr
oLmugwwZBAUCmIo7PdCwmd8bfTkysAtRTQnneKAXs8/rJJTJkNCjk5sDHojM
fPbevAEZ1PeFDxneckftVqednK+Swcvc41aKqxtidiDXZXuTwVN3h+k4uCFr
ch7jRx8yhJX+VtlldkOrniwVUoFkEFH5jX1qXJFA1NrmdgQZXDWVFMP3uKLQ
isbYxNR/+8QnSmuqnNEFOt2yqhoy9Pq0FDDJOaEbDNFUk3VkuCez2kVgd0Ld
TC2GXA1k2Kv3kGdpgYzI3FIbwS1kWJvv+lP+kIzSJA4pqr8jw3Rt9HYrKxkt
Wwx/+jpIhrsiY6Z/N4kI7DiFGH+QQSfigcGTfiK6RdT3xSP/9D+L3kmuJiJ+
j9fc+eNkcKhfqFzxJCK9G4UE1zkyMEVEjrDNEVDWrZHnuQtk+GAzGGvWSUCT
iVx7e5bIsJ8i/0BXCQGF3o0tlV4jQ91Kv4O6CwG9v9dK4bTxz8/OlQxtLQLi
eLijf/cvGQp83rmFiRKQ/eNzBZ3bZNiq+5Y5wUBApWXua7u7/+Y/aIf8fjui
/wHSI1yW
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12707#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200}, {0., 1.2209404216499118`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"c1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c15", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c16", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c17", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c18", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c19", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c20", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c21", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c22", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x15", "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7402807481177893`*^9, {3.7402807846352916`*^9, 3.740280869564458*^9}, {
   3.7402809035461597`*^9, 3.740280965386615*^9}, {3.740281014922572*^9, 
   3.7402810314538136`*^9}, {3.740282017884778*^9, 3.7402821804346085`*^9}, 
   3.7421616409879093`*^9, {3.7421617449221706`*^9, 3.7421617525867853`*^9}, 
   3.742161818122366*^9, {3.742161848466288*^9, 
   3.7421618956821356`*^9}},ExpressionUUID->"41340d1e-c124-4d5c-86fd-\
64a717501fdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"varx", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"vars", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740281063347004*^9, 3.740281117885372*^9}, {
  3.7402811494108934`*^9, 3.740281369871058*^9}, {3.7402814046215715`*^9, 
  3.7402819902108426`*^9}, {3.742161655235551*^9, 3.7421617334149976`*^9}, {
  3.7421619189798374`*^9, 
  3.7421619639185257`*^9}},ExpressionUUID->"01265a9d-877d-49de-8189-\
e90f4891e9ed"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
g83igUjVjVjsf6htCh0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4Y17g5WU+mzu75Pgq9N0/rzzG+x/YnxUrg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SkNrvl2FpQLIEw7YMl20pLTsXJ4LClIAWUTmY2mdLaXTwPoSPlMBNF0GFJ19
nSg9YRh2jqcK0PZnb2GlzY3ytoE3e/i9AiRW6gWtlvlQhtd+K+SvKoCYXAom
9WQg5bN279MLAopwrcvQV0bhEmXC7yEJo6MIZ543P/lkE0X5URU9tHdKEZ7G
ZIW44uMpc7/POvUGKELnuaird7OSKEsqBku3MhTBa+JMvMuPdMqGh/DVc7WK
QEsKHVvTzqbslKxwKw8pQvjZ+uH7XHmUAz/e5q4u/883bN3hDSiisMtVqrby
KQFTzWlCvUI5hcfpelOClhLM9ZiunMXXUATznekWJ5WAtla37PfvKUX8K370
sL8SuB7Lj6jmbaZIS0i6/0xTArXM/OesAR0URZut9doaJchyObk+EtZNUc0e
josYUALew3vyj3/3UdAfagSQJSUY/Wln1nBniIIVSHnAz4sCHGvU2JXZEYrR
yQtaXzVRQCSy85yv/UYh3qS0l55AwVGcss3HJ98pUcZPy4cuouDZVneVvswv
SiuL3K3dFBTYxL7YNmFZouy0p19BPUbBy882tJgLaxSDKwxuFn0ocDUSPsm9
+5cSpud7InIeBWkf6LpGCQzUhpWvuHIOZaj/rdxdycxCXXtsIjusrAxWu3O1
I3UcVJ0LzZz7iDJk5Uhe01jlpQbIq6wreyiDTP+zHyNRQtSa8ZxvlteVgZV4
+XEdUYK6cJet52qJMqhbc5wIJctQ1axCnlT8pwxr5wKyJMcUqJ58P+5+mFaG
V8cqbcJKVallfRZxDMwqYJ6w8fN7uBZ15nqnj6qcClxoYelSE8JS5UlaZ6yI
KpCZxn+ye8KQen4vH6KdVGD++NjxztsEakEjj8qjKBW4deaYgIMqlfotKEJg
JF8FKiM0Y7gXjlMl0b93GNtUwDUUdf175kmq7bztjNo3FUAdd26rlrKi5pT0
vjuzqwJfU7lwN9/ZUT864RpjJFWBqrFVlRvmRBU6XPrgsaEq1JRey21fdKVa
jgolj9qqgs5LF1Pba17UjFtxwUzhqkCSRJM6CP7UAbPVcxp3VCFll6G2Pz+Y
ysNxHrF5rgqmX/Bn9AUvU03+G9CKG1GFbdhDZS9HUROj8BLVG6rgFx33Jh8d
T+0xrGL+LKQGLCmNmQ8vJ1JZNyUXmHXV4LHpXuLAjTQquTZpRNNSDXzsZGix
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fLzYq/jOYyql9tqIqpUSHLZRVJGEFmqU3582+3NKoFaXdMTgaxu1Te50RWy6
EnA/OTHcoPycuvN1JKPmoRI8CdxgHeTvphrk08LGBpQgt+ee3ZWOPupF+3oP
piUlCCo7wHJI9i31CY/UMfUDyuD0mb+hO3CIujmQrueoogwbl2omuE58oOKS
9kjGmSqDcFNrNO/ez9TziP/+Wl9lEHKyEckif6HW0k+sf7qmDIeCKp4txk9T
l56aTjDfV4bBjZfjZ07PUVVCW7o1epXhbCPPJbU9C1RfLcXaE/PKcER0tahI
d5la8Sv7djyLCoxTTQHzX6POVbDE1smqgIUuU4aX0RZVxuPCmXGaCiybYl6f
nm5T3cRnbPZ5qICRxbkPfMx7aEWfrIhasSpQwmL4SVOBgTaZ1angfE8FaNdT
wrY+M9NELDW4EztVIKzZ+cmo/n6aI0fhv0dTKqC/W98zXMNJy+k5MDuxRxWu
d3cnqzRy0UZjwgdYxVWBn+/6c68jfDR+WGjUBlUoSEj/fuaKIM36r8NdF2dV
oN9SjMzVFaNlNvQmXQtXBWbbt+RmMUnaYIBecMMdVYjdlGVRuCZD41Quc/7S
ogqXvdLa1JMVaGZzvNj+T6qgortn7R1ZlZZ0N1ZD568qTJh40mm4a9DcVf+w
q7OrwShXlv+dIm2ayVhcMb+IGpyJzDlwoVuPphXHY0inqgZFBj83pOuNaEKa
d4dmCWpwa1dg9gqNRGOYUPN9c0wNOpj6sk8/pdJ+JrbufXxSDTqL2peiP2C0
dziT23mBalDgk1Jwod6M1jQ1qnE1Wg3iqa66GfoWtKJkz16/TDUQ4ZQURu8e
pyXi108eL1YDwxwN7l/ldrSAmajfBg1qoKdaefe1jxPNNp0zTeqlGri0aeJY
GF1pYJQnt/+DGnxs+3H0zXF3mtx3xbbVOTUgKEdsMBNO0zhvNtqM/VYD8kfz
XPcxP9oWEfnVwaoOuzNOgTzFAbSJhaGrFYLq0N/8tmh95DytK9tVJF1JHegL
OSvrb4fQqqhL9aGG6lDz4dMni31htJvLYaYnzdTBK4qdc1ckkhZ+h+0b6qwO
xp3eL78px9A8sOzLav7qkJBkVm70Io5mui7DzR+pDt9TsQSd7Ws0rcJH93fT
1MFF8NG578GpNCFTEnm26D9+at+Nl44ZNIbfbz7216nDes+yHkPHTdqPeycC
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ig8L+2G8gd1z2po3Ky7C+nDE2oz4Bgp/tiQ0rF6EnIN7fw7NrSNRT1g+e9Al
iCPmluJSXsecrFdM63e0oSqiz49i4i9Wx8uOD+jqwPibGzs/BlfQq1FeJ/Pi
ZQiqutzx6udvfPG6YCXaVBfIeEmGOVjm8aqaTPNVIz1oKZxdmNSZxUUehleV
ZnpA8WW6ME5+Fj0Ob/ZuWunByIE8DWW+WbzxtmEi+qoe0Dk5XPp4YBYT9KR3
ngTogdUnd9+c+pn9fC51fj5DDxYFpZQz2WaQxE/imdOkHjy6Hd9zcW8KMx6L
1Do76YN2CNUX7cmv2D1m2/3ouj5wmaXT33j/FVcPp44PeuhDTg2Rb23bV9S6
tkUsF6gPygKPUi7mfsUtkQ5tqjh9qMv8b5HS7isaN+nPlT7Vh527Vulpg1+Q
7p3v6cUlfaB78DDaYecTJv5pDnPzvQLRxxYWhZI/4vWBBGuzwCswSzKyQB34
ES9W2qJ6yBV47GS0QWH7EcldDxGzRl2B36+fMQqKfcQb8/qhfalXYHP3X6Dp
0Bg6TC4EC9ZdgWwnRQNZxjGU62O48XP1CnAzDkq8rP6A34q9fQgeBvA74bTh
yOlhNGD+9/mxjwFkz8zV3iYfxld3b6n9CDCAMJXI29rLQ5jvlUbvdNMA3iyS
6NN0DaHNhWeNzikGcDUk7liU5xB+fr/z73qdATxlWfHY7RvE4Y2bUd5bBiBb
BtX9qQP4UjXpfni4IVQOe/3mM+7HWYemtwG3DKGLYElw1ehH8qgZEs8YQ0g6
LLzeJtOP6l2S12yTDGGJ9xF/ImM/9qqNo3KuIfR+rMl/+qwPB9U5F8jaDaFY
ru77Qtc7nNKsk48mNoJ0qWJR341eJP7v49TdUCPw/ZFSbVvQg90tVzi8IozA
9lGX3HBcDyYIvrc1um0EKnnOR8y9epD1aPcMa4IRiF4WuFCu1IPwtvZb5SMj
mLLq/WU63Y2hWonzgy1GoO0dINDF1Y1E6uorp3aNYMZa3NSluRO76ztEd4iM
4eyxI2yRRZ2YwK3g+ZXUGBZX9SiqEjuR9aDk6mMqY9D4aLOh5tCJ0MmxJsNk
DPkSp5JsjndiqPLepul5Y/C9kWOvTHiFRFhHnO1vDE1hSoyaXC/RRPn769Eg
YzjAfuA564mXWKNGn3Ii3BjSFgyrqXY6kKAdwHUzxhh0hhn1OQc68L3pBS2H
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
8X8pS/uA
          "]]}, Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3c41t8bRmYhI0KUJCF7r5zH3nu9Nq93IbLKHklJWUlIRkllh4wiMgop
M6GQ+NrKXqH8/P75nOu+znOdz/3czznPuc9Z7BVzPAUZGdntw8//R76kv09z
TveppqoFq219oYRaWqEzXqSXqK91ULbvOhU0B5XlC5LeoXNjUedVZaihTcKX
SE3qQflvCvj5X9BAR3y/7iZxHFXnfF+Pbj8KKzH0s0FFE+iOkhKTSdYxCG99
KbT9+D/kqc+X6XCNHtJgq2w9YRaVXnyR+UCJET4q3Xjzi7iMwv+qEvcomKFY
hTVC9uUKkqQ7m553gxlWR3C5AUWryFpaY12ThgUiuGgn1x6vI/cJQl/BSVZI
TzcmLidsoxuRZztFnNig896I7xzxAIV2aMxzxXPB7Yy0j/clyUAyvy6gU+0U
iJCQnfRLMrCnn1MX3jsFfjT3Qv2KyIHvxpFCgWAe+Kcl07jy+AgY7nNfeWLG
C0/YxoyTT1PCHufD5P56XtCcvjkunkUJaeoLE9SCZ+FuzBDZlXQqIFer6kyg
5gOO1hCN3wk00GPV/i5v9BzUp5wbiD9GCzf+Zb4NteEHJ+xnnEgcLQx/y5+O
HOCHfPLTtzxj6EB02zyR++t5kITmjvmQY4Anyv0RWL0A+g00xjPE4xAgR6Ws
kiECkgfYTfaV40BDs17voCUK8bzO3edUmGBen1hksykKAdi6q5bvmWBcBlX+
dhQHzRmf99UDzMDmcUSZUkgSJn+PuQZtsoKQE12HP04GBhPvVicrnoCeyO7L
Jf0y0CmuSFcYfgIwb+ZoPNVlodI3tfwbFRvcuTXkHC4gB9c39Q+U2NnhGfsR
OVpyBeD9W5v1V44DLqN5xs0DZTiRg19hC+UAolCqScMtFaBFrJpi7zig8ur0
M4bjl2A5ynvRSYcTnhXsvtHgV4VGyvNKTTZcUGCuRH5NAsCRPmUoOogb6HPm
f1HfU4cuBjk6SkdeUO3ZWKz7rgP9BiwZ3WG8EBY1iiMX14XhuCWBh1m8oO4c
qzBwQxemqF5oio3ywjRn6zcOcT3Y/3syCmN/Fvh9yvNW7+qD8NKfrRJbPmC/
zDqKczSC290NU1bW/EATodT9r8AM1JO0ml6YCMIftaf4UQoMROlXFfZ7CwLW
3DE7URYDjVTn7v9NEITbuoV5QMKAUhgZweKzIJSr7FrmdmFA2r3+2IGuEJTc
chcQyLAFfg1JG2t1YaiSouwwu2gP1NvcS5SyIqBh+GOFVd0JNCvvDolbigA+
sPV2lJ8TRHvtNtn5i8Ds6aDsjjwn+Pff0P3yChEwsjnPNkvhDNu9KYoOYqKQ
J5z7AJqdYa6I9uarC2LQ2ajS15rpAnjxXQZJBglY7HmQv73rCoYjsc84TktA
po5u6DtmLMjEsl0iE5eAXU/XIRdBLFCOS1zuMZUAU/FCDTErLOQlEju9UiWA
7+4p69kSLIz/HrhVdEoSBCkGlAMs3aDtIfZ0iogksLp11T8muUGZ1kp18CVJ
mB8LU3gc5gYR2cemdZ0loTuj+jN7vhtwG6lrzOZJwmzWmMW3FTewLXl5cE5Y
CrT2swT8ruMAMJfSjylLAaH70nZhCg4EKT+JrRtIgWyBnUb5Uxzs2M84tnhJ
gb39pYALH3CQdoznrUuFFJzbfF9ZR4WHiNoiC90WKTjzyuWTCxse8G4Ki+Jf
pODVD4rxL/x4kKm34DrYkAIvHloHXg08fPG4E5StIA3XPzsOG4fjoY6dg+mm
njQYS83OYO7iIa/l2YvLdtIwqL62IPYQD35czYPKYdJwO5MjQLUKD0yd2zLf
30mDQF+JxfwsHoyE8KvsOjIwXGVii9UiwO7dq/Vj1ofnyredw9uEAAVLN2/m
E2Sg+SHjvIEtASirnnNK3ZKBULvhtvDLBKhTnVMz+iADKW/aqeqTCUB6snPs
xFcZCLmV0GfzkABslHSD36dk4CgzYbLtCQF8Pgp5kChl4dpZ1SPclQQQsPRM
uaEhC4+u+Hc/7SXAQE2og76FLNStf9YZGCLAdc54AWY3WdA3VYoe+kGA0R8l
dTnRssBuqR5v/YsAd9QaYvApsuDcahPbv0YAhfwuY5E8Wfia4pt59g8B7rsv
Tb5plgXNF94eilREgM//SqL6ZEH+3X07imNEWBI7HqgzIQvRnxU+5jARQX9D
/NhXMjkosW5MMT9FBLJIX+kVJAdrJ3/zFIoRoWzi+t8aEzno+q9FnVmaCPaa
Ke3hznJQVunzw0ieCDV0r+yPRcoBlvwetRYiAu5y6/n+RDl40sM3cqBOBOae
L8sZOXIQ7t1ak6RNhMupGzcEGg/XY9k6JW5EBK5tSuPfXXIgfu3juqopEdpt
2TiqxuRA7aLgFX4LIgS8PT8Z8lsOuveP1I5bEYHvjFyJ2l85wGMoNn0wROi9
rn2NlkEe9JyCLYbtiBAxZQ093PIQ6Or1l82RCN8KAwccVOSBGon+d8KVCLfo
b+ecM5QHbgndoEEsEWSuZJAW7OXhRWjQsSs4Ikz2FUhVeMpDne5W5w88EZJl
3uwHhsqDNWfq9HkiEVTTP7ap3pUHJq23dzRJRFj88y2Z6pE87GC9FpTciZDh
sGD3uUgenBblZOk8iKD9bpf/fp08KDrIZb08xBtnjy3bdsrDm+QTZmKeRHgS
c+oN73d5iJOjuHXzEBvPXrwxOy8PAnlVXtWHeF9Pxajsjzz83MYqNx7iohLD
k1fpFOBvZCvf40Nsc9xxQplTAaQRLcb+EFP6eRVTCClA+9zI8ZXD/1UOhF/9
qKAA7/44RTod4oKbOOykngJI3fvU+uCQb46cgcmenQJULc8+eHyYT+qspMqJ
ywpwRu24cuRhvncyOIREwxUg+qPYH0kCEaL0Dti0ExXgRmIz+5tDva7tTlM4
5ypAhP+n7yfcDutb/Hk5sFzh0Gd8jdc61NvN4dVocrMCzPEuBBg4E8GOIfNj
Yb8CpI0ljQgc1se0Maqm5T8FSN/9QPf/+qnwGidvUCmCjwT/f28P6y3VJxPO
cFIRbhOv862aE0Ew+pSHgKAimL/rM9s3IcKJqTkNjL4iXLnLX5qhR4SjD3ok
fO0V4WF/lI/w4X4j067huXNZEcYKw8xTD/fjrxc3tusTFUH7QWf+qtJhvTEe
UwO5inBDmffltBwRhunM+n6XK4KBOxv9KykifPA8XXzmiyJYhFFtfhciwltu
qgyFKUVg9JLnkTt/qG/XYozZpiIMkfn0evIe6in+xunGSSVQVJ1hIbEf6rNu
wTJrrwRa/0xelpAd6pOvdHBwWQmUAiK/Tu0SAGt19hdHhBKkuSmS724QwLh2
6YP+YyUofqxX+HaOABdC44LLppRgZmONrKSbAMMU735e9VIGXMK988GpBOh+
9awrMUIZKIoFtV/EE+A9Lr7uRZIytHPN+NbGEKCizTb1W4UyMATPXIwMOOwf
dzZ0Lm0pg30J++8qcwIoswi/pIxUgRtqWOwB3eF65HYfu5JUIGl71eMxGQFc
VuP+S3usApMqVfZC23iI6Z0/KdSiAqp01jwb/+GhO7EwyojqEgg4vRe++hYP
LseEzNPuXgIuTlEavPthPKXg5oUMVVgu1vJdrMIBcS8l+xkGIGsYS8581g2u
tM1KvzRSBzFxo7dZA85wx476/N/LmtBksCjaRG8LqhL0W/MBmiB00WaibwMD
q1Qs7YNhmmAz1mO1MooBTAWPe3m8Jryq4vliUYqB87SypW4lmnCxZ1Sj1hgD
TdVusp2LmnDZXZSSLNUGtpiatdI9tKDi0SgfrZA1uLWHEiRJ2tDgmlh/LdIC
cCoCxltXtEFY4lpSvKcFECp6ZesDtWHp1hm9ChsLID06T6UVqw1/tamDL0hY
gPeVnqeY59ogyWfA1D5hDiEnz01ETmmDgrJLzYCOOaQQO+27XXQgoFBXT+yM
GaSOBmjcJ+nAh5d7YucYzOCB2ZmLGB8d0I69Tn1hzxQylAN2JyJ1IE5zN9p+
yBRyjp9+uJmjA27LJX6ByaZQVOs7yD2mA7ZqhP4gKlNopuE087TVhYniXQaW
TSOYeSqm/81V9/B+Dk/91WcE9KCpoeOhC9kpXLLzZUaACboiey5UFxb03yXq
uhvB8twHzpEsXbjsoXg6Z9wQeDr9JvV/6kKm+/v+9H4DCI7/7C9M1INNZ69B
yz49yBGcvJxxRQ/itbbbLSv14P37bTx1kB7MHFB2BNzXA6a/fJjJ23oQdrLy
xQlrPXjhFaySWaQHeLHazr5RXfhqLEB1dEkPGBr+uUus6IAkc1TafIA++Jps
n1kR1YY62iHB9jB9aP1y7NyjE9qgTiZWnx+jDw/HjAac97TAcnlk3DlVH/TH
PHZlP2rBtS55ocFX+rBtLIllJWjB27jl+pY1fWBcFViIztcEXQrniUc+BmCb
LJBTLa0BfX+q/YODDOCoEI2HP48G2K3SU9tEGUBE8Ui2Lo0GeP6sE2ZJNoAl
Fdt1hRF1SGxkD7j90gA2ZBlMxGPUYSCkm/rqksGh7+S6h/2uBi7rl0SMLxvC
x97R267pAAwsZL0DAYZw0uPNF+1ogDqJFn/7cEMo8XwwrekFcMJbu56UaAhx
5U1kdzUAOuaM9W+UG4IlRwdj8CQCiR/OpNcbhjBt8+Ev5KkC2cfr+XzhRrB0
lm78gaYKlM5q6BbeNIJ3i1OPFXhVwI6a+pd4ohGsnvohQ7OvDFUad6Qv5RqB
Wms674UqZSA1prTYNBvB2iVmYS8BZeh99fRnPJUxJI+GkBZZlOBJzgfu7QRj
eMd9+3XUUQXIchAZskozhh/5c5+/L8pDBtf9e1U5xjDbVD9v2yUPiWku1H4v
jYGTejC3LVkeQhL3ln/1HsanW7+x4pQH8wjJ1klWE5h35vgqKCkHlE7Z7t0P
TSCoxHvmYYgMHJyi5BfNM4HJETlaAxcZ2P3m8eNukQn4SMpFcmvLwIqVgoVe
vQncPv5+7AyLDIwafVF5P2oCQw+3gvOLpeF7DiXt2HFTcNE6GXBr6tA3JiqN
9Jubwl3f4fiGy5KAfcRIVWdtCtN8GptvbCSBpWBS7ImdKSTyWn3qVpcEn+Y7
0VewpnDH4K+NGqckiGx8F6L3M4VHlrKnddolIN82NEjrninY/5e323hBAlL5
37K97jGFo64CL7DroqAhmYxyv5jCJxdRerYe0UNdce63Ds/pK+9SrrUiUTC1
oW+wHDeFk5WzQRfdRIH+jgNudckUZv1bLqR9FYGY5f1KYUYzaCbTVzvXchEC
6i6ZZhuagWh8xP2p10JQbddO8c3UDHKTxWAlTQi2dk2rT1iZQdwt2/QLV4Ug
WBnHFe9oBrWGpb4cUkIQ8fbOVIi3GbyVLGP/WyoIsY1DQZhkM0gK457IL70A
mS2+T1gHzGAkwTzh+KfzMILdszAZNoO77nbbomXngfvITeq7o2bwbrZswPfe
ecjRyPCkmDYD6fAf4u6Y8/D0faPs6qYZTIlW4Jjn+KGk7Vhn90lz+BB2oMvL
yA/vOp+txdmbQ4SuhCR1AB9UcvT6hjubw6grXexpRz7IJ+yu+LiZwy/uoXZz
bT64Q2GybONpDmu0hFhGTj6wVNpZPB9qDjhFff+ed2dhoVB/ujnTHJpDrzLZ
s5yFE3HLQ3++mYPcnNjA9QdngHqI0+b3mDnce5KVIe19Bv7waw7+POy7bCde
xbLpnIEfTRkD7fPm4OFLIHf/cxoKd9T6HvwxhxvmsjK6LqdBlZTaKclpASXK
juM1cjzgrqPY4I6xgEtndqlGKU/BkiDnhwoHC5CSr/1j+5ML/I7++fzHxQL0
BcVyaN9yQVjX69E4dwsQ8MLsb/lzQbKFwn5hiAWs/0PyzDOcUOMsr7yQZQEs
DMLLVF84gCJI9o3HhAW0y7F8NOtmh1hbtubKaQv4NzLO6PuSHeiVNzt25y1g
OmOw7E0yO7D9qxq+s2YBgrx+59ss2EEwRman6IglRDBMHG8bYQOTZGn5xfOW
4Nib9V16/QRkFUhWe3pYgih/aTBOlRU6vrl15HpbAkHGxOM9PytsHE0b+eJn
CUPkC8Lax1jBwGuXXCXUEvjicJfLhllgV7LVmD7eEuR2mGUZrrKAbb3lXEmp
JShx3Sz48YoZ2LsDTy2tWELvOR7eSl0mUD8oFOPbtITKanK5PSkm8JYYVbP+
Ywmd78dpXHmYoC3lsOWQW8HfkZL7lNPH4aoNXXUiixXIjnH4iqkch4Gfmcbi
MlYgd6pt9esGA9xbb7juE2gFF9/bfYxLOAbe/cmuDqFW8I1/n1ve8xgYVrip
6UZaQZi7wyKj3jGgvkJHzhtrBYx7GoKXqI5B2IJlVE+a1aEva4tLjDwKhInF
CLEaK+g7GvtuOJQOVHo4w35tWEG+Xd549T0a4Cz7ZT+8YwVkXFJ3zQNoYCv+
nfL7fStoWJt5wWpDAxX6+L1HlNZge23zOgUPDQi0lYcYnLAGv3w0nlBEDcwN
OsFF0tZg8pxMQ/YzFcwUXb1G8rOGn+fc6Z4IUoI1z78fBdesgaqAycyBgRI+
JN3SmQ+xhljjL8Yqa0cgPyCdw+PG4RtF9UGB+9sjgFV9U+eZag327c1JAeZH
4Eff/j/vGmsYjuZ+ePYmBXzduRF7ddca/uS6tmYcIQdNT/qV6n/WYDmDeZ78
iwyqxlIxWxQ2wDCPTX/xlQxSWp4JBR6zAYGA+38lC8jANL79UxC3DSz41WOq
jMng85ljTGGqNrAufVMkQ/0AvddOyYiOtoH4eroGn9p9NE2o7wq5ZQPbZk9+
89zfR9SxUxT+d2wgd8Rtfsd7H+m2y3m5pdgAz0cuB/kL++izzoiaZp4NVLQu
bPY83ENfdPkXqVpsIN0kwRjF7qJJ/ZpLceQYuKxx/0rO9R10xHPc7zrVIbb9
fOwRdgfx36UtCKbDwAQxrrNRYwcRPtmxeDBjYN1L5ncI9Q5aMDiY0T+LgRWb
79eaErbRmqFuMr0aBnIUCrusn24hcpPvk0lRGEj+WpTjPb+BOhqtzgXEYEB1
qrc4uGcDJYv1uWFuY2D7m8RYfvUG4mXsmOJNxsDy9BajffQGgq7qmYpcDIS2
7Tmr82ygKIN7C18aMRCd2k03gllHZLq6ayf/HvKJo0yUmFlFHbWtUvtktvDZ
9PLCVs8qSr6A/H9S2kL9k67e4TeriJdGbqPg0LdGcXlWLCWsImg7t6XIbQta
RfJczvKrKErz4I+9si1cKf7TIpu0gsjUasgfB9uCofy/azVPl5Cd5mzncLgt
SKyhnCshS6hKhyOVOdoWbvdjtF3MlhDJOETgxh1b8Hby+j1z8Bv12asaEB7Z
QuzyyYLrzr9R3rW2VJEGW4gb3KwpFfyFNEsGL7whs4OmnISa3Z/zKOclzeoq
pR34BArKn2qcRzuVCnXCdHYw9zk8z+PRPCp5k2mYxWwH/Jle6g+s5xFbu5Nv
JJ8dhPr+mWHpmUMzEzN1Wpp2UJPGzhXSMYtun9w26o+1AzH+8jLHkWmU2tHx
X8tdOxiUbvX/8W4a5QZnBr9KsgOuh+ffX8+fRjUjl56lptvB805WR3HvaTSd
G7Nv/cIOph7Ifjp7ZBqpC7IUj7TZQc4AY46q9BTaVxClnaayB3HFNJJK8SSi
XfiX/ZXOHhhSuT833p9ErI96pdsY7EHR2bDaKWwSCf/1d37BZg9jncejt4wm
kW1zXY37eXtQL1k7Eb02gWr0dPFLmvYgdevSj3mYQD52bi3bN+zBa79biHlq
HDHmLvxUuW0Po37n/tx/PY5K/vM9uB5vDxGSo3TmCeNo9nKUCv0De4h+faU8
Qn4cOUVm1/A+twdRrS+Ye4k/kGH+UJFexyHf2lURG50xJLhkcP8RvQN47K3+
wEx8R21SXyp+MjnAzkL6nZdvvyNcoF3veTYHOBkwJqyQ8R3lkrkzlPM4QM7s
e9UfJt8RO+ut2PdiDuAVHuNxrfkbolRoCv1t6gD6zYxLWaXDaOK6DA49cICV
6xe7aAoGkQA7Y6LPQwcYMXhqXh43iDyKZmufZDvAG83r/tc9B9FGf+YxyucO
IOPIXZElPoho+clfddQ4QKNzLKp48xWJtXWRmw87wIl78878XwdQyFFiLu6U
I5TFtUz2XviC3uXAxwdnHOHml9cbgoxfEKU013rbOUfgC+p1eLrRjxLsu7SF
RBxBgu982L/mfvS4RHrpt4ojkImWMuk59aN2Y7JLgU6OMOyo4Ueb3YdO3H/4
Pe6JIySwRNhQSvWio19Z+/yeOULrlHtWO08vIjuZ2G5f6AgC7c2C+XS96Hdm
dJVohSPcjV4RN2vtQW15nol9TY6Qcc2orOZ8DwqqvKTO+fOQb4/TjUfrXWis
b6Kw4LQTTP5+QSde+QkNsDo8vsfnBA+KBhtSkj6hTqvBtBABJzDllSs+6/UJ
1XzrvGEo5gRtJjrOTYKfUPLEK8eVS07AlUfptfekE6mv3mRWcHQCz+XoM0pZ
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

          "]]}, Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1Hk0VesbB3ApVJooM2cfkZAyZDzHsb8hhZChMifCFiqUEreoSLgqUbqV
VDJUZEoh5biG6uaQoSJlLGOUFIn89u+Pvd71Wet937X2+zzfR97zgJ03Px8f
Xy/9/X9dfW72dhrjtVFQ/pnCy0d+k48WqhCB1APSdGuFhnzVb5J7NC9DmXpG
unAsmxYunSFrNYJ8BakGMis76vzY7RnyeULT1h++nWSx/aI+gTez5AvWqdIR
3zGyaywvz24NH15eeB804DtHPomwu9zxiB8WFULWn32XY4ueiNWkwULUL9Vd
tMCNieopLyvGblE0WYqm8iKYGPJOcRYMFcW7s6NKV64xIXD9ivGnBFH0CWSZ
buhgImTw678xZaKYmZWIdHSRB8v2dqyd2Eqojv76ed9pNdL0ubs/Pl+JWF5F
346dijBviFanlMSQuOSfEGaoInR00mPr2GJItgjlH05RRMahrBQJWzHcqN3A
jGxVRFbvC8Wz4WIoeXrD5a7DGmwUCb6V2yCGT3lRTX/slHAqXm267ZA4jM9t
rsyyUYbqkuRDdQUSiLQozmnar4whoQTNlGoJPBVQuDj7tzJs0h+Ibn8rAVYE
n4/9K2UQ01/fJ8xIYKNfufDcVhW4ab5sJ8wkoWiiuWunsSo4ns7el1slITgp
O7pARw3lhh5J+CQF08L4t+oOavgi9Mzy7A8pnAycrnQOUUPGuv2VTwSk8af3
7cX8AjVsUTDL7l0jjcnGJAPXDevxZcdTOQ1vaQzcXRhdtHYD/G47ri3rlIa3
+vRSzaUa2LPoXZVjtQy2vT9zR5KhgWGuwQXhZhlonxHj8KlrQG7ber2Mbhks
6NQIaNiugZ65itmYPzK4lej7MjBZA4u9fPRE9WTR+aUl5q6MJjgGig+Mbsui
9oonI0lNE8yhImfrfFnkbf76MIyjiYY5oXaTClkcvy78aetuTQzKcnd3vZGF
rJWxSf8tTVjb1410LpSD0/0HcwqqWqgPP2Ax6ysHOHIuC7O18CZN2DggRA7K
C/7b8N1SCylh6zy5x+Uw5fLZrSpQCzfb2tmMFDlcEpZ74lGghWwOv+ntSjk0
74s7el1/I2x1TOf3ijJgpeL9TXyLNjYKjrPOZjAwHX+4/MNObSTw9nWZ3mcg
ezQ6OsNHG7HlQ5bDRQwsKM6U0orRRpS7SNZUFQNlRgObrGq0obp4SYt4FwNK
Dv5Jp0x00BN64U6AOIGWknBXC3sdCNwr4bXLEoiSSlAS8dLBHqepZG0FAh0f
75elndTBxOtcrXvqBC76jfaUcnXwF1VslbmFAN+JoI1fSV1klBSrdocQyOuO
mi2x0YXP7Ij8ijACLqZJdX/t1kXWk57sdccJlCwqchE+oYsV04/uKMcSCEie
OKX0VBeUyyo5w6sEpCcXWH+p18XD4SL71zcI1DmJSRZ/0AV3udNV+wwCqwnd
+5tmdcHacecGkUugLedIi6uhHp5O2lu9rSAQsyQ2TWGbHpR8H3W84RLQPpBK
DbnoYQsrib+6hsB57dKZI+F6uJUXusO3noDZs2nFi2V6MNYnfzS/JzAhLzzm
9FIPx2w2iRl3Erh5WqaU2a6H/IPxDmk9BGbMDa3yfunhVYVuqPwggcKWvw6/
0NfH0ZE6NYcfBLKj93r2mOtjZJeKZPAUgTRdS5vfzvoYe/M5J/w3gbhUSZX1
f+njY9P8pTl8TESaz4mZJeoj0T8zaTk/E6HTn/h339BHwX5HyYD5THi5FnWc
5+rjzOk/24UEmXBe+s+LnCZ93MyJkTYTYmL708iSql59XPi0WSR8IROGTOvz
EwIGOJJUWlS3mIlVfQMmjhYGuNRrvfjLMiYWpzRoBLkYIELdJvzjcib4zErk
4gIMkMTdf6h2BRMjWacmyxMNoPs2R+2YKBM9jvv6Wm4YwFU2ld9sJRPvFtm+
/pJvAF6NReLCVUzU+DPuEc0GcKzLmwgSY+KJrECqfp8BtqSxPkuKM1FYP3za
9gftULK8hHb28aagfYIsBIWsO2EpwUSaeqn7KQnalQGct7STu25YXlNmYblH
0DxnSSbiLsToPzRgwWgu800z7dDv9qL9Lixc0HXquS/FREAGa24ugAXBoVz1
JdJMeO6QH5E8zkJ8eG+5J21HwYVtmudY6LLzSsqnbf1otMYinT4fkfL0B21T
qrXQq4AFvcguSy0ZJlhST25EVLGwRTdnsw9tjZe3ElKaWbBLt3t0gfba8LNh
eX0sFHE594tpM9QO+tT9YEHk6Av1BtqrPuy07xJkQ9PBzqqb9uJEDn5JsBEX
rLVimDYfqbheVIWNyp3cUyO0f44tll7HYuN5rX3RJ9oj6d8ETS3Z8Mxk331D
u8f23XdXVzYON9WFPKP9jv9Z1+FANhRmTGTSafOK7tQnHmfjT8zUvaO0q/cm
lGWdY+ONj6qmOe0ysZCsynQ26melS0RoF9Q6JbcVsPFuWsisif7/7COIGq9i
o1pv3Ugc7TTltfuFW9gYuFxWxKad3LbURfETGxOD/Vl99HvHxU1s4fxkQ/l5
V3M07Uj2e+2dQoYIDuMZE7RDR7jyByQN8bWpdS6frpen9bnf6SxDJPbknq+g
6+s4d3ig1NIQS3/lH9OnbZ3v2trkaogCaHXeo/uDLar6YMEJQ8TUfDCJoPuJ
N8/5Rf05Q+wXTfDqoPvN49vZ3kvphjgudzVQh/bpxkEJlSpD7Elw3tdE96t4
pZTWeJMhpBMrgsRp5zww31beawhN188J9iL0fYk5kVYCHHoeFa0tpfvf43jb
P+LiHJjndpZ30/kYD1z0sFOJg2+/OxPm05aw8hsM2srBrXfrl21cQu8XVrG7
FE9b1vuuMZ238WnHgN3XOLhMVm3SpfN4eig2RjmXA79dUz4KdF5zXgyUlfE4
OCM/c3KIzvP4mWyFThEjPP6WruH8h8DpBco/1qYaIXfBniJJep6IT+xa/i3b
CHPjT/tYn+l50ntGpazUCH80GAG2vQTqq/rdtr03QkBw7AuXD/T+qKzagwwS
06d9W/obCeTMKqWWZpDIHK28/eUhAcMvOwtPPiShkPBGxL2QAK8j5pVlLYnc
qOJ51XkExss/833sJ9Fz+eqDg1kEGJxm7SgxgPHYwcgmlYDv76TrdxyB91rG
1RpHCSRbj/wb5gH85RI9a36IQOXNzUNWFNBfmCDscpCA5NYp3Z9HAJ0rJR/2
UgSeJ7s1ml0GLj7f9VHSkYDKBuX5A63A15Ffm5fpEhj2qKBU7TfBynegOH6E
gQO1/RsfWBmDkPn3WaIZA5W476+20xjJx/TH48DAivKDt3PcjZHzzXZDFIuB
/Ae/RDMOGKPou+K0ywYGxlOFx1MvGOOFlI/LKzEGQv3V80+2GqOuJLDvdq8c
IlYcUdvpZoJcmZbzZ8LlEOcsuGY2wBSJjmWTJWmy8KoL99GkzHDULuLk9T5p
cIWkbP2dtkLvgd6o+2opaIpEXho8ZAEDD27MKEsCHt85atYB2yBZXOCvQD/c
zbQa2cm/rfGthN2T8nglihJZ75vstmOJisBPv5WiOFTG2X59my2i3bufRGes
wLOXd8bPuthh/ECyorfPMvhtMajwc7SHafOGsvODwriWrfnQf58DUOZ0wn//
Ilz4XhF18MgOBFyTLDDdKITPdw+HUsE7sWy6Y1THQgDVZkmpJ0/uwsWkTVnm
e+djnk17z7lIRxRrjx6SrZkHvk0l89LDnEC1N1d52fAhVmLSqumMMzo2Je8/
93iWPOjsVTV5ygWFvzY5riV/k91R2nvJFFfcu3VjWd1/U+Sqi1faz950Q+79
mL8v/fOTzFyhGlZ31R2Nb++1tpVPkNxgYvPae7uRmZVRbdw9TqYx02U5Dh7w
TmkUPLftG1kRMc1HNXpAWOaVvB93jJS3FJpR2LUHE1fczLTHRsjiBpX4tpY9
dH2TrtieGSITav9oMN080bp4bbvTmgHyYsjgPo8OTxyxbZV3kPtMRogxlq92
8sL2bfN2zZj3kTkqAi8PdXkhccHwoQvHekjBiXlSXPe9yHUfO7l/rIvM0ig4
nta/F9phX6MbGz+SKp53rWcDvaGbPih1X6yDfG9eWrhj2BtDXf04zG0jm24f
W0+G+OCP7LbcR8FvyakiW8PV4z642FKYKhreSs49Dn4Ys98X+4bX9LqXNJOW
GmabI374IiLcIsjkx2uyzk3dzz+EQqzvYKZNaCMp6kWVXz9MYUt7st7IgUbS
nbq5tPEIBaljr43j/RrJn8ErC7UjKNjsMqhpdG0kFWMnp2dPUwhR3LM7zKSR
jCx8lnD+EoVbI7NiEGkkWULb8x+WUnDi5vUbuDWQMUvO8g+UUyjhFgkus20g
X4tUOUg/pVA7/OzjZ9MGkpLV/nW8ioLZqorCTLUG8rKmpPHW/yjYSv985D7D
IydcuprbOyj8Lf40I+8aj8QeKaWlnRQOjEZF1J/nkfE+dkfJbgpBVnFfv57m
kauDqmUzPlFYNaWXuTmQR9rGZHsHjlLw9yoUUzLikdfiux/d+Eoh9e3m635a
PHLgvPTipnEK56KeFBYo8cjIqwl5upMUTHirI22W88hX6TV8fr8o5Mke074z
n0dKZP6xu/qbgvfUqQNzk/Wk5z29O/WzFLpXhKm7j9STefkHJ+fmKHBV04O5
XfXk/wAzVEiJ
          "]]}, Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+h+3IRty
          "]]}, Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c81f8Xx+0IZW+yV/Z2jXvu/QxbVkLGvZKVMr4lCkmykkQUMiuVSqiE
kBVSWYlKZihFRnbK7/7+uo/n43w+77Ne57zvR8o72OEoAx0d3SQjHd3/f6Wv
/L1VINFnal5j/vqbDj08Z1Xad9z/MRGNfnbIYIgJmiPKbyv6vyQG2iQ5Lhiy
QabelDtnWgcxe6wO+XthD7RrhPqx+PcQzz8WHmYM44Eo/p2anaL3xKLi7eDf
5gKQnYGZbl8eIm4sNVXpfheBx3tTWzfODBN9xFTMRo0koTO133zVb4yofbRy
pjhTBhbjOb5FlE0QDz0P8J65rgDRrY+V1ou+EqUD2S0rAlVgN4Nj0Knr08St
y8M5FiKakA1r5b8vfyO6uYp/XcvQAZlzOUuh8bPEPe/a1tXrDaCiwVhn8cxP
omu4ERtSYwLG22PhJ0LniYPTJQL0H0nwmnChds5vgfj+18rh7QAMHhjzxug+
XiS+eqsdMlduAUvDPoUny5aIfwzCvPhf24LB2eqmJ3eWicev+iMZIQ4QI8I6
uVz0mzjcquJYzusMbbWujFo3V4jjw0Nnzwa6wW7XB7Kh11eJJa3VZRPZXmC3
sY1VZKwR9fi+J8ePe8P167Z+C5fXiR6pj/4Yp/rCqF5RklryBvHXqMGt5z8C
QXZw6f7x+E3i2/8GJHP2hEDgKeTNw3NbxF2TxaJn5P6DCr6suZ9n/hBjDfsO
avSFw9qTGc794dvEkdtTDGKqZ8HE0UA9MPQvsSTsjEibSizELyfb3Q/6R5zx
mh1CTC9A19Xh0O9+O8SwB81lZycSIOlG9utMTTqozGVSH9S4BCr+RDftx3Qw
nDh47ZlcOvTof//Rr0IPP9ol9n5TzoSwXVfPhpXRw9ODqbtiG7KBf8iQg0eR
AazjTUra1nKhpnTyZuUdBnh5XQSlrhTC4fBLqvYyjLC6uutQ1lwJ/MN0GheL
GGFfdX7XP99SKOYfsU2XYIKix1pPqefLAJ2+OKZ+kwmO6nBI9h16DN+fqoX0
CDODa82f2OsXq+BS/BBd8HVmiPjPc2J7/BmoOcVe3cPPAj7cKS35A7XQL6Mk
XZ7BAsFHkOGeM41w6ndflQ3XLmgJYjmqutkMQq1nkPnLu4Dp5FBbjvoreJEh
M5DKzgo3L0S8KVvtBE/vtz4qyaxQfcz6yNiRd0CvdWr1DQsbnHp5dsbHqg9u
00skHItng6APGu5fDg2AWV+7ADvDbnircjq24ccQ/CgKvlt2bjco/EzBi0W+
QFqIkIHl391w5UZ5/o/YcdCE5s7ZM+ygx/LhTKTXVxjYG+iavMEOC3oBDzvq
ZiBijOeHYjgHHHJWDom7+wNEH7840/mbA5hdDf4rN1mAxhgfdv9QTsgQVra+
br0MVFvOm7sWOEEwTPix+vFVYJKoVrkbtAcU3jiM+fBuwt15zwb8xx54Vc7d
tuH0FywbdtnO+O2FtFqflnQ5epLmjveqwOJe2Ne/3cprw0RKlfTqljHmArMn
Wo5ZzKyk2GYOaeNYLmAu8ReJ9OcgnfSuO+XUxgWX6X5/ePGai+TP6P86iJUb
ksRDXB4M8JLcb/OLX7TmhrfSVxy9AgRJdlhrSH46N/x81ZCSUyhKQmdC2p4N
cAMeVF2eaiFJMkiUEOoW4oGdgQOHpbRkSCqKb4/NuPOAivLR2uCb8iTJ15Ev
/xXxwOVE4cZzBcok3kAFXsFpHqBLr1D/Z69OYmH/4KuuxAumjwbtAgK1SFsP
4urMjvNC1wf/UzO3dUm/rDX2UCp5AUn5N1YdZEianB+hRqzyghqnpI7fJxPS
YNqlZ+mGfHDufvI/5QskUpe6Idv9aD7wpeddLU1GSY29M+7NzXzQq7b2PY/H
nFQVeq3iEzM/ZFUmDf+nbU0q5SEzLVvwg0t5l35cnB0p98nCod1p/CD6qTaM
3cGRlOaU/0C6nx/SdM66MuQ4k86vWu4QBASAfZT36bNAN9LJ7A0HRzcByP3O
1hI94kny1y8tPVYgAE1uW+k5zN4k94+OWxcmBSA+nat8mPUoyS6S3vamvCAY
jSk3dSb7k1CRx8VPAwXhduibBbubQSSDF+6rb8sFIemFJnv9gxCSivtui+ll
Qch+X/JzOvA/kuTf5zf/6gmBrIJe6GpuOImv4Ogi/1khiGk1/HnF5gyJlciL
qr0UghedAcZs12NI22NN13FGYeje+yDHp+M8aSH2xE9PM2GgRoQ9GbsbT5qU
EiOeviQMxtUpb//bTiQNtrzOuNIjDIej959aHLxE6jpyeuYurwisLPPmzcil
kxqZ5AhNh0SgjWmJHq/NIFXd6b/8MU8Evmc8aeJ7kkUqxWMnFsdE4E1+9dlu
6RxS7jdVXTZZUZh7UsSuK5JPSksaTpLyF4XbZJ/WvsEiUpxS8hfDh6KA2gd6
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
M0X4Iwuuo2+PQyzA927v1edYf/Qm7Y72coQFGGtfrHEw90dlQTnsXjctIAXb
f3VJ2h+5XGpuuZplAa1yIwwvl/zQt5GDo2uNFlCSbXlWzdYPTezejA/es4Bm
0ZrE+znXUI9WRm5cnCXclm3R06vzQvMerYMRdyzBK3LWfiHbC1HEz5EEJllC
YPCNvPxIL6TzVtHHNYPAsRZX9DW90ID2Z6RRaglMxTxqAx890ZiOwAp5lyUs
CkW+wlB6ohm9RtVEYitYIda2TgzEIuLLn2bSYq0gvDHmaVSqG+rrMOcPumUF
NDHrVmfD3VC65IirVYIV2K+o9ky4uiEe+r45nnQr+KKLexh9wQ3BYMPC8/tW
gHWuIHk574pi9fE/xzqsgGIfh3mPXBGRjs5vtkMr+MOX8uMElQvqa+qWPSCy
BpxL/b8Tf51RuhAmcJrMGrxdwji5Z5wRD6Xi1mNaa3geUqUf1uaMoJd/+wKn
Ndy7Uj5JEuCMYjWO/9letAY6U4klt2knRIQaiUvCreHlQy3z40xHZKOx+G4q
2hq+8AjTBPk6ohfa7FmMcdYwEMivf1LfEeGMIgRvJllDZIby6ksSRzRie0nf
o8AaLL7Nn5wIdEClIb1Z4u3WcNi5x8Rsb480qj8INRPZQEDcVEu/ni0qrqXc
3CSzAePFU0+HRW3Rbp1Siyi1DWjlSPDs0dii6uZ8g0JGG+izSqd98d4Gsbx1
8L/OZwOKczPZnUY2aOHHQoumhg1M0//S47W1RglsO4aj8TYQ82j/UCzFEmX1
9c12JdtA96LAY/4AS3Q/PD+8Ps0GKCTOMClaWaLGz6rlWTk2YPbdZ7BSwBLN
3791YPHIBgzx5WikwwKpCZ+q+txrA/WSw6WHO+boQEmCap7cFr5oK3nJRZsh
qp9HRRPUtnBbR8vYwsMMMRUMy/XS2cKwntwZ/GUzJHoY6PiIxRb2aakpjfjM
kPXrlkbPc7ZARf95aqbPFDXq6rj/0rCFw/OWKe4cpsjPxrVr56YtDO5V31ce
MkH0939OqyTYQpgVRfPNlyaoetb/+EaKLcjYfeyfLzVBi96xKrT3bGHU+uDq
VqgJcrhe1MhTYQs1uhVLSvwmyKBsslK3zxZ+86qX6MQYI+Ff+pkFtHbAp3LD
sCbZCPXKjj2fZrCDgfv8B1weRsgt1Gb4HIsdnHjcHNUMRug+kSfdMy47EAno
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0OFeOsXXRI9qaoN2jo5wwGOXq/W7gh79D8RsWKU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14214#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200}, {0., 9.066461197686301*^46}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"c1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c15", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c16", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c17", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c18", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c19", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c20", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c21", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"c22", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x1", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x2", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x3", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x4", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x5", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x6", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x7", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x8", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x9", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x10", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x11", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x12", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x13", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x14", "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{"x15", "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.740281985294464*^9, 3.7402819920546947`*^9}, {
   3.742161642288168*^9, 3.742161735186965*^9}, 3.7421618189019165`*^9, {
   3.742161922510789*^9, 
   3.7421619651618013`*^9}},ExpressionUUID->"b18fe471-bf20-4965-b37e-\
1eecfb71e7d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rr", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.742162923728368*^9, 
  3.742162926893529*^9}},ExpressionUUID->"122bc74f-a3e3-4660-9cb9-\
4723b997a13d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox["2.4368659046728114`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1462607520151824`"}], " ", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"0.9269596746369315`", " ", 
          RowBox[{"x10", "[", "t", "]"}]}], "-", 
         RowBox[{"0.0010682020265091463`", " ", 
          RowBox[{"x11", "[", "t", "]"}]}], "+", 
         RowBox[{"0.6766336044580423`", " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "+", 
         RowBox[{"0.10896524108654448`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.37235958209948516`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "-", 
         RowBox[{"0.004243989011993854`", " ", 
          RowBox[{"x15", "[", "t", "]"}]}], "-", 
         RowBox[{"0.047149169541854`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}], "-", 
         RowBox[{"0.7635997382329303`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}], "-", 
         RowBox[{"0.4375263074281486`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "-", 
         RowBox[{"0.6822972817886475`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}], "-", 
         RowBox[{"0.2877910887164703`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["3.743021725246914`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.07416578304812749`"}], " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.12022730971602935`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}]]},
      {
       FractionBox["1.4120098400518541`", 
        RowBox[{
         RowBox[{"0.7978487433553683`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "+", 
         RowBox[{"0.5381544688032016`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.171764660152027`", 
        RowBox[{
         RowBox[{"0.879765881219386`", " ", 
          RowBox[{"x10", "[", "t", "]"}]}], "-", 
         RowBox[{"0.0383355852839069`", " ", 
          RowBox[{"x11", "[", "t", "]"}]}], "-", 
         RowBox[{"0.998471796501871`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.23780776220445388`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "-", 
         RowBox[{"0.33419176643790416`", " ", 
          RowBox[{"x2", "[", "t", "]"}]}], "+", 
         RowBox[{"0.8488020549274247`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}], "-", 
         RowBox[{"0.6069052196117892`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "-", 
         RowBox[{"0.34464630829299736`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}], "-", 
         RowBox[{"0.510011008745269`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["1.3653166719738588`", 
        RowBox[{
         RowBox[{"0.4738159250433629`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "+", 
         RowBox[{"0.7559143184685577`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.13707371529307188`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}], "+", 
         RowBox[{"0.9144699517349781`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "+", 
         RowBox[{"0.4200470707540398`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}], "+", 
         RowBox[{"0.40170744186919016`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["0.12657833886170167`", 
        RowBox[{
         RowBox[{"0.12344168061529004`", " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "+", 
         RowBox[{"0.514986330036793`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.9021998640546343`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.27029026751894447`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}], "-", 
         RowBox[{"0.08791292201869538`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "-", 
         RowBox[{"0.9957392370516307`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}]}]]},
      {
       FractionBox["3.0682744810941696`", 
        RowBox[{
         RowBox[{"0.004532253882781223`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.608126122363617`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["9.933594475471288`", 
        RowBox[{"x4", "[", "t", "]"}]]},
      {
       FractionBox["1.3039965614554614`", 
        RowBox[{
         RowBox[{"0.11862218925435952`", " ", 
          RowBox[{"x10", "[", "t", "]"}]}], "+", 
         RowBox[{"0.07868532577212761`", " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "-", 
         RowBox[{"0.7324953345991232`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}]}]]},
      {
       FractionBox["2.2757005959828893`", 
        RowBox[{
         RowBox[{"0.6337776757743547`", " ", 
          RowBox[{"x10", "[", "t", "]"}]}], "-", 
         RowBox[{"0.4250750114989812`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.5781401004937583`", " ", 
          RowBox[{"x2", "[", "t", "]"}]}], "+", 
         RowBox[{"0.2954154168670238`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}]}]]},
      {
       FractionBox["1.8981897215536039`", 
        RowBox[{
         RowBox[{"0.9068546249668759`", " ", 
          RowBox[{"x1", "[", "t", "]"}]}], "+", 
         RowBox[{"0.5146694799332301`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}]}]]},
      {
       FractionBox["0.03692169741778706`", 
        RowBox[{
         RowBox[{"0.9754790980478256`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.2816509595893062`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}], "+", 
         RowBox[{"0.146429960908389`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.3241418062467485`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.7389947039824274`"}], " ", 
          RowBox[{"x1", "[", "t", "]"}]}], "-", 
         RowBox[{"0.9351194159607188`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.3371857889332295`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.9110716768015286`", " ", 
          RowBox[{"x15", "[", "t", "]"}]}], "-", 
         RowBox[{"0.0354645853265918`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}], "+", 
         RowBox[{"0.29029774587853474`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}], "-", 
         RowBox[{"0.0183476089501724`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "-", 
         RowBox[{"0.0359554271599829`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}], "-", 
         RowBox[{"0.8639978423918875`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.942494216811484`", 
        RowBox[{
         RowBox[{"0.9825918350303384`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "+", 
         RowBox[{"0.5733515879505873`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}]]},
      {
       FractionBox["1.7316728785675366`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.7285150958955717`"}], " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "-", 
         RowBox[{"0.3835770940788714`", " ", 
          RowBox[{"x2", "[", "t", "]"}]}], "+", 
         RowBox[{"0.5056182247331718`", " ", 
          RowBox[{"x5", "[", "t", "]"}]}], "+", 
         RowBox[{"0.6402174251771571`", " ", 
          RowBox[{"x6", "[", "t", "]"}]}]}]]},
      {
       FractionBox["2.0367455556670366`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.6653499776754319`"}], " ", 
          RowBox[{"x11", "[", "t", "]"}]}], "-", 
         RowBox[{"0.12035090754008371`", " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "-", 
         RowBox[{"0.044286731139375535`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.9243007846456277`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "-", 
         RowBox[{"0.7823696702714003`", " ", 
          RowBox[{"x5", "[", "t", "]"}]}], "-", 
         RowBox[{"0.15992426247334923`", " ", 
          RowBox[{"x6", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.408635090367422`", 
        RowBox[{
         RowBox[{"0.822006872261906`", " ", 
          RowBox[{"x12", "[", "t", "]"}]}], "+", 
         RowBox[{"0.0777604416453963`", " ", 
          RowBox[{"x2", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.670612669477071`", 
        RowBox[{
         RowBox[{"0.9593622550016652`", " ", 
          RowBox[{"x11", "[", "t", "]"}]}], "+", 
         RowBox[{"0.4688373379023416`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "+", 
         RowBox[{"0.92758190357267`", " ", 
          RowBox[{"x7", "[", "t", "]"}]}], "+", 
         RowBox[{"0.12860568111877968`", " ", 
          RowBox[{"x8", "[", "t", "]"}]}], "+", 
         RowBox[{"0.06959612451707087`", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}]]},
      {
       FractionBox["0.1852564582899774`", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.46837314819950904`"}], " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "-", 
         RowBox[{"0.7836091894697053`", " ", 
          RowBox[{"x14", "[", "t", "]"}]}], "-", 
         RowBox[{"0.758549746425432`", " ", 
          RowBox[{"x15", "[", "t", "]"}]}], "+", 
         RowBox[{"0.3274742629770149`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}]}]]},
      {
       FractionBox["2.991580357659477`", 
        RowBox[{
         RowBox[{"0.441249950982638`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "+", 
         RowBox[{"0.6379701667251922`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}]]},
      {
       FractionBox["4.043051570393626`", 
        RowBox[{
         RowBox[{"0.33752212322233444`", " ", 
          RowBox[{"x4", "[", "t", "]"}]}], "+", 
         RowBox[{"0.7804123570388319`", " ", 
          RowBox[{"x5", "[", "t", "]"}]}]}]]},
      {
       FractionBox["1.2851079629678903`", 
        RowBox[{
         RowBox[{"0.35463247012467414`", " ", 
          RowBox[{"x13", "[", "t", "]"}]}], "+", 
         RowBox[{"0.7441692870814747`", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7421629275931463`*^9},ExpressionUUID->"529147b3-414d-49dc-b701-\
78aa8b88f2d4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742162949791428*^9, 
  3.742162997806976*^9}},ExpressionUUID->"9166722e-bf94-4bd2-8068-\
7da52305fa2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tt", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7421630616401215`*^9, 
  3.742163064858967*^9}},ExpressionUUID->"356a25c4-e9bc-47bc-9a52-\
b783a9562222"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.1462607520151824`"}], " ", 
         RowBox[{"x1", "[", "t", "]"}]}], "+", 
        RowBox[{"0.9269596746369315`", " ", 
         RowBox[{"x10", "[", "t", "]"}]}], "-", 
        RowBox[{"0.0010682020265091463`", " ", 
         RowBox[{"x11", "[", "t", "]"}]}], "+", 
        RowBox[{"0.6766336044580423`", " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "+", 
        RowBox[{"0.10896524108654448`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.37235958209948516`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "-", 
        RowBox[{"0.004243989011993854`", " ", 
         RowBox[{"x15", "[", "t", "]"}]}], "-", 
        RowBox[{"0.047149169541854`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}], "-", 
        RowBox[{"0.7635997382329303`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}], "-", 
        RowBox[{"0.4375263074281486`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "-", 
        RowBox[{"0.6822972817886475`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}], "-", 
        RowBox[{"0.2877910887164703`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.07416578304812749`"}], " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.12022730971602935`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.7978487433553683`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "+", 
        RowBox[{"0.5381544688032016`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.879765881219386`", " ", 
         RowBox[{"x10", "[", "t", "]"}]}], "-", 
        RowBox[{"0.0383355852839069`", " ", 
         RowBox[{"x11", "[", "t", "]"}]}], "-", 
        RowBox[{"0.998471796501871`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.23780776220445388`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "-", 
        RowBox[{"0.33419176643790416`", " ", 
         RowBox[{"x2", "[", "t", "]"}]}], "+", 
        RowBox[{"0.8488020549274247`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}], "-", 
        RowBox[{"0.6069052196117892`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "-", 
        RowBox[{"0.34464630829299736`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}], "-", 
        RowBox[{"0.510011008745269`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.4738159250433629`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "+", 
        RowBox[{"0.7559143184685577`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.13707371529307188`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}], "+", 
        RowBox[{"0.9144699517349781`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "+", 
        RowBox[{"0.4200470707540398`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}], "+", 
        RowBox[{"0.40170744186919016`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.12344168061529004`", " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "+", 
        RowBox[{"0.514986330036793`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.9021998640546343`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.27029026751894447`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}], "-", 
        RowBox[{"0.08791292201869538`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "-", 
        RowBox[{"0.9957392370516307`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.004532253882781223`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.608126122363617`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{"0.38311644465168704`", " ", 
        RowBox[{"x4", "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{"0.11862218925435952`", " ", 
         RowBox[{"x10", "[", "t", "]"}]}], "+", 
        RowBox[{"0.07868532577212761`", " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "-", 
        RowBox[{"0.7324953345991232`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.6337776757743547`", " ", 
         RowBox[{"x10", "[", "t", "]"}]}], "-", 
        RowBox[{"0.4250750114989812`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.5781401004937583`", " ", 
         RowBox[{"x2", "[", "t", "]"}]}], "+", 
        RowBox[{"0.2954154168670238`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.9068546249668759`", " ", 
         RowBox[{"x1", "[", "t", "]"}]}], "+", 
        RowBox[{"0.5146694799332301`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.9754790980478256`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.2816509595893062`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}], "+", 
        RowBox[{"0.146429960908389`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.7389947039824274`"}], " ", 
         RowBox[{"x1", "[", "t", "]"}]}], "-", 
        RowBox[{"0.9351194159607188`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.3371857889332295`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.9110716768015286`", " ", 
         RowBox[{"x15", "[", "t", "]"}]}], "-", 
        RowBox[{"0.0354645853265918`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}], "+", 
        RowBox[{"0.29029774587853474`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}], "-", 
        RowBox[{"0.0183476089501724`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "-", 
        RowBox[{"0.0359554271599829`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}], "-", 
        RowBox[{"0.8639978423918875`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.9825918350303384`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "+", 
        RowBox[{"0.5733515879505873`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.7285150958955717`"}], " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "-", 
        RowBox[{"0.3835770940788714`", " ", 
         RowBox[{"x2", "[", "t", "]"}]}], "+", 
        RowBox[{"0.5056182247331718`", " ", 
         RowBox[{"x5", "[", "t", "]"}]}], "+", 
        RowBox[{"0.6402174251771571`", " ", 
         RowBox[{"x6", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.6653499776754319`"}], " ", 
         RowBox[{"x11", "[", "t", "]"}]}], "-", 
        RowBox[{"0.12035090754008371`", " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "-", 
        RowBox[{"0.044286731139375535`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.9243007846456277`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "-", 
        RowBox[{"0.7823696702714003`", " ", 
         RowBox[{"x5", "[", "t", "]"}]}], "-", 
        RowBox[{"0.15992426247334923`", " ", 
         RowBox[{"x6", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.822006872261906`", " ", 
         RowBox[{"x12", "[", "t", "]"}]}], "+", 
        RowBox[{"0.0777604416453963`", " ", 
         RowBox[{"x2", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.9593622550016652`", " ", 
         RowBox[{"x11", "[", "t", "]"}]}], "+", 
        RowBox[{"0.4688373379023416`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "+", 
        RowBox[{"0.92758190357267`", " ", 
         RowBox[{"x7", "[", "t", "]"}]}], "+", 
        RowBox[{"0.12860568111877968`", " ", 
         RowBox[{"x8", "[", "t", "]"}]}], "+", 
        RowBox[{"0.06959612451707087`", " ", 
         RowBox[{"x9", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.46837314819950904`"}], " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "-", 
        RowBox[{"0.7836091894697053`", " ", 
         RowBox[{"x14", "[", "t", "]"}]}], "-", 
        RowBox[{"0.758549746425432`", " ", 
         RowBox[{"x15", "[", "t", "]"}]}], "+", 
        RowBox[{"0.3274742629770149`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.441249950982638`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "+", 
        RowBox[{"0.6379701667251922`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.33752212322233444`", " ", 
         RowBox[{"x4", "[", "t", "]"}]}], "+", 
        RowBox[{"0.7804123570388319`", " ", 
         RowBox[{"x5", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"0.35463247012467414`", " ", 
         RowBox[{"x13", "[", "t", "]"}]}], "+", 
        RowBox[{"0.7441692870814747`", " ", 
         RowBox[{"x3", "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.742163066005314*^9},ExpressionUUID->"84d2c019-e53e-405c-823e-\
12fc09525af9"]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
CellContext->Notebook,
FrontEndVersion->"11.2 para Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 448, 9, 48, "Input",ExpressionUUID->"4ee8a8dd-2493-48f8-9ad3-8f23d683688c"],
Cell[1009, 31, 483, 10, 48, "Input",ExpressionUUID->"b44e4ae4-0c5a-4f83-acb5-7c19ebb648ad"],
Cell[1495, 43, 1711, 50, 141, "Code",ExpressionUUID->"edf24ae2-0f5d-4803-b3d5-321cde355300"],
Cell[3209, 95, 14725, 307, 897, "Code",ExpressionUUID->"42ab77dd-cd7f-4942-9f41-b83d1daefb70"],
Cell[17937, 404, 228, 5, 45, "Input",ExpressionUUID->"0d725c8f-b141-4e2b-9414-ab581a25a86b"],
Cell[18168, 411, 230, 5, 45, "Input",ExpressionUUID->"ab29d608-92a2-4921-8526-71394efeaf2e"],
Cell[18401, 418, 1336, 34, 177, "Code",ExpressionUUID->"f6821979-f642-49e9-b1c4-6851e90edba6"],
Cell[19740, 454, 1273, 32, 177, "Code",ExpressionUUID->"00b7a273-e13c-4313-9011-b12e1fb03e82"],
Cell[21016, 488, 368, 8, 50, "Code",ExpressionUUID->"f1e57b8a-e905-4b86-9fe8-41b1241ab956"],
Cell[21387, 498, 587, 16, 79, "Code",ExpressionUUID->"776bd80b-074c-4c05-81ab-00a251fbc234"],
Cell[21977, 516, 814, 17, 48, "Input",ExpressionUUID->"98ec1bfd-ddb4-4ff3-b87c-8f96ca962487"],
Cell[22794, 535, 502, 13, 45, "Input",ExpressionUUID->"f8e67f71-2591-4b25-9f90-3b961e3b168c"],
Cell[23299, 550, 1027, 21, 45, "Input",ExpressionUUID->"6ebe8888-872e-4662-9590-454bb8932700"],
Cell[24329, 573, 330, 7, 45, "Input",ExpressionUUID->"b45506d2-4128-40f3-bc92-7ed642226592"],
Cell[24662, 582, 284, 6, 45, "Input",ExpressionUUID->"869ca836-96f2-460b-9525-6574843546e9"],
Cell[24949, 590, 270, 6, 45, "Input",ExpressionUUID->"e6a342d3-5f9f-4369-9080-b9d49d32ff84"],
Cell[25222, 598, 415, 8, 45, "Input",ExpressionUUID->"9e89a60b-ce7d-4e40-a1d2-35ff8400f786"],
Cell[25640, 608, 352, 10, 28, "Input",ExpressionUUID->"704d1130-b85d-4e71-bc5f-cbe7f3a9c6a0"],
Cell[25995, 620, 523, 15, 45, "Input",ExpressionUUID->"e843912e-1e7f-40b6-a7d5-8236374d2267"],
Cell[26521, 637, 368, 8, 45, "Input",ExpressionUUID->"4806b4a9-b214-41e6-91e3-adc056c5a5ab"],
Cell[26892, 647, 343, 8, 28, "Input",ExpressionUUID->"e2f81070-c37b-47cb-9531-3346b0ae373f"],
Cell[27238, 657, 265, 6, 28, "Input",ExpressionUUID->"74f9d93d-b218-4648-ba65-5b5c265893cf"],
Cell[27506, 665, 709, 16, 28, "Input",ExpressionUUID->"b6bfaad8-65d4-4944-b1dd-5c9209525af4"],
Cell[28218, 683, 547, 13, 28, "Input",ExpressionUUID->"2bca0ed2-f8a7-4c42-9bdb-bdb3a08e451e"],
Cell[28768, 698, 266, 7, 28, "Input",ExpressionUUID->"b25264ac-b707-4d01-ae94-eb2630a2cc06"],
Cell[29037, 707, 4044, 95, 156, "Input",ExpressionUUID->"98295595-0fdf-4840-8456-6514203c5549"],
Cell[33084, 804, 501, 11, 45, "Input",ExpressionUUID->"2fa0d13e-6bd9-4efe-99c4-44c1b9e48f10"],
Cell[33588, 817, 1229, 22, 66, "Input",ExpressionUUID->"feb70a88-98f1-404b-94a3-ea86f0490d00"],
Cell[34820, 841, 620, 17, 82, "Input",ExpressionUUID->"2f82c0d6-32a7-476e-9cfd-e74f900410c8"],
Cell[CellGroupData[{
Cell[35465, 862, 1843, 30, 45, "Input",ExpressionUUID->"e4e83226-d371-4096-b607-320ff3ed75e1"],
Cell[37311, 894, 451982, 8084, 249, "Output",ExpressionUUID->"20810070-205a-42cc-ba08-ac891d429f0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489330, 8983, 803, 17, 45, "Input",ExpressionUUID->"632b824f-6a04-4e45-a386-a6a011f848de"],
Cell[490136, 9002, 249892, 4522, 240, "Output",ExpressionUUID->"41340d1e-c124-4d5c-86fd-64a717501fdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740065, 13529, 653, 15, 45, "Input",ExpressionUUID->"01265a9d-877d-49de-8189-e90f4891e9ed"],
Cell[740721, 13546, 277637, 4859, 225, "Output",ExpressionUUID->"b18fe471-bf20-4965-b37e-1eecfb71e7d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018395, 18410, 186, 4, 45, "Input",ExpressionUUID->"122bc74f-a3e3-4660-9cb9-4723b997a13d"],
Cell[1018584, 18416, 10849, 270, 710, "Output",ExpressionUUID->"529147b3-414d-49dc-b701-78aa8b88f2d4"]
}, Open  ]],
Cell[1029448, 18689, 152, 3, 28, "Input",ExpressionUUID->"9166722e-bf94-4bd2-8068-7da52305fa2d"],
Cell[CellGroupData[{
Cell[1029625, 18696, 188, 4, 45, "Input",ExpressionUUID->"356a25c4-e9bc-47bc-9a52-b783a9562222"],
Cell[1029816, 18702, 9727, 249, 435, "Output",ExpressionUUID->"84d2c019-e53e-405c-823e-12fc09525af9"]
}, Open  ]]
}
]
*)

